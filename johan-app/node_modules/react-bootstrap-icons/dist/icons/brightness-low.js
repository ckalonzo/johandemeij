function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import PropTypes from 'prop-types';

var BrightnessLow = function BrightnessLow(props) {
  var color = props.color,
      size = props.size,
      rest = _objectWithoutProperties(props, ["color", "size"]);

  return React.createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 16 16",
    width: size,
    height: size,
    fill: color
  }, rest), React.createElement("path", {
    fillRule: "evenodd",
    d: "M8 11a3 3 0 100-6 3 3 0 000 6zm0 1a4 4 0 100-8 4 4 0 000 8z",
    clipRule: "evenodd"
  }), React.createElement("circle", {
    cx: "8",
    cy: "2.5",
    r: ".5"
  }), React.createElement("circle", {
    cx: "8",
    cy: "13.5",
    r: ".5"
  }), React.createElement("circle", {
    cx: "13.5",
    cy: "8",
    r: ".5",
    transform: "rotate(90 13.5 8)"
  }), React.createElement("circle", {
    cx: "2.5",
    cy: "8",
    r: ".5",
    transform: "rotate(90 2.5 8)"
  }), React.createElement("circle", {
    cx: "11.889",
    cy: "4.111",
    r: ".5",
    transform: "rotate(45 11.89 4.11)"
  }), React.createElement("circle", {
    cx: "4.111",
    cy: "11.889",
    r: ".5",
    transform: "rotate(45 4.11 11.89)"
  }), React.createElement("circle", {
    cx: "11.889",
    cy: "11.889",
    r: ".5",
    transform: "rotate(135 11.89 11.889)"
  }), React.createElement("circle", {
    cx: "4.111",
    cy: "4.111",
    r: ".5",
    transform: "rotate(135 4.11 4.11)"
  }));
};

BrightnessLow.propTypes = {
  color: PropTypes.string,
  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
};
BrightnessLow.defaultProps = {
  color: 'currentColor',
  size: '1em'
};
export default BrightnessLow;