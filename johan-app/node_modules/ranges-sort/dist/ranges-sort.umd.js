/**
 * ranges-sort
 * Sort natural number index ranges [ [5, 6], [1, 3] ] => [ [1, 3], [5, 6] ]
 * Version: 3.11.2
 * Author: Roy Revelt, Codsen Ltd
 * License: MIT
 * Homepage: https://gitlab.com/codsen/codsen/tree/master/packages/ranges-sort
 */

!function(r,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(r=r||self).rangesSort=n()}(this,(function(){"use strict";function r(n){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(n)}return function(n,e){if(!Array.isArray(n))throw new TypeError("ranges-sort: [THROW_ID_01] Input must be an array, consisting of range arrays! Currently its type is: ".concat(r(n),", equal to: ").concat(JSON.stringify(n,null,4)));if(0===n.length)return n;var t,o,s=Object.assign({},{strictlyTwoElementsInRangeArrays:!1,progressFn:null},e);if(s.strictlyTwoElementsInRangeArrays&&!n.every((function(r,n){return 2===r.length||(t=n,o=r.length,!1)})))throw new TypeError("ranges-sort: [THROW_ID_03] The first argument should be an array and must consist of arrays which are natural number indexes representing TWO string index ranges. However, ".concat(t,"th range (").concat(JSON.stringify(n[t],null,4),") has not two but ").concat(o," elements!"));if(!n.every((function(r,n){return!(!Number.isInteger(r[0])||r[0]<0||!Number.isInteger(r[1])||r[1]<0)||(t=n,!1)})))throw new TypeError("ranges-sort: [THROW_ID_04] The first argument should be an array and must consist of arrays which are natural number indexes representing string index ranges. However, ".concat(t,"th range (").concat(JSON.stringify(n[t],null,4),") does not consist of only natural numbers!"));var a=n.length*n.length,i=0;return Array.from(n).sort((function(r,n){return s.progressFn&&(i++,s.progressFn(Math.floor(100*i/a))),r[0]===n[0]?r[1]<n[1]?-1:r[1]>n[1]?1:0:r[0]<n[0]?-1:1}))}}));
