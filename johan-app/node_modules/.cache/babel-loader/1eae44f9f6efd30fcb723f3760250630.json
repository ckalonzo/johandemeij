{"ast":null,"code":"import { ACTIONS } from 'redux/actions/types.js';\nimport { mainAction } from \"redux/actions/index.actions\";\nimport { db, storage } from \"../../firebase\";\nconst initialState = {\n  gallery: {},\n  galleries: [],\n  photos: []\n};\nexport default function galleryReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.LOAD_GALLERY:\n      {\n        db.collection(\"photoGallery\") // .where(\"galleryId\", \"==\", action.payload)\n        .get().then(querySnapshot => {\n          const data = querySnapshot.docs.map(doc => doc.data());\n          console.log(data);\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_GALLERY_SUCCESS, data));\n        });\n        return state;\n      }\n\n    case ACTIONS.LOAD_GALLERY_SUCCESS:\n      {\n        state.gallery = action.payload;\n        return state;\n      }\n\n    case ACTIONS.LOAD_GALLERY_FAIL:\n      {\n        return state;\n      }\n\n    case ACTIONS.LOAD_GALLERIES:\n      {\n        db.collection(\"photoGallery\").get().then(querySnapshot => {\n          const data = querySnapshot.docs.map(doc => doc.data());\n          console.log(data);\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_GALLERIES_SUCCESS, data));\n        });\n        return state;\n      }\n\n    case ACTIONS.LOAD_GALLERIES_SUCCESS:\n      {\n        state.gallery = { ...action.payload[0]\n        };\n        return state;\n      }\n\n    case ACTIONS.LOAD_GALLERIES_FAIL:\n      {\n        return state;\n      }\n\n    case ACTIONS.DELETE_GALLERY:\n      {\n        return state;\n      }\n\n    case ACTIONS.DELETE_GALLERY_SUCCESS:\n      {\n        return state;\n      }\n\n    case ACTIONS.DELETE_GALLERY_FAIL:\n      {\n        return state;\n      }\n\n    case ACTIONS.UPDATE_GALLERY:\n      {\n        return state;\n      }\n\n    case ACTIONS.UPDATE_GALLERY_SUCCESS:\n      {\n        return state;\n      }\n\n    case ACTIONS.UPDATE_GALLERY_FAIL:\n      {\n        return state;\n      }\n\n    case ACTIONS.INSERT_GALLERY_IMAGE:\n      {\n        return state;\n      }\n\n    case ACTIONS.INSERT_GALLERY_IMAGE_SUCCESS:\n      {\n        return state;\n      }\n\n    case ACTIONS.INSERT_GALLERY_IMAGE_FAIL:\n      {\n        return state;\n      }\n\n    case ACTIONS.DELETE_GALLERY_IMAGE:\n      {\n        return state;\n      }\n\n    case ACTIONS.DELETE_GALLERY_IMAGE_SUCCESS:\n      {\n        return state;\n      }\n\n    case ACTIONS.DELETE_GALLERY_IMAGE_FAIL:\n      {\n        return state;\n      }\n\n    case ACTIONS.UPDATE_GALLERY_IMAGE:\n      {\n        return state;\n      }\n\n    case ACTIONS.UPDATE_GALLERY_IMAGE_SUCCESS:\n      {\n        return state;\n      }\n\n    case ACTIONS.UPDATE_GALLERY_IMAGE_FAIL:\n      {\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/gallery.reducer.js"],"names":["ACTIONS","mainAction","db","storage","initialState","gallery","galleries","photos","galleryReducer","state","action","type","LOAD_GALLERY","collection","get","then","querySnapshot","data","docs","map","doc","console","log","asyncDispatch","LOAD_GALLERY_SUCCESS","payload","LOAD_GALLERY_FAIL","LOAD_GALLERIES","LOAD_GALLERIES_SUCCESS","LOAD_GALLERIES_FAIL","DELETE_GALLERY","DELETE_GALLERY_SUCCESS","DELETE_GALLERY_FAIL","UPDATE_GALLERY","UPDATE_GALLERY_SUCCESS","UPDATE_GALLERY_FAIL","INSERT_GALLERY_IMAGE","INSERT_GALLERY_IMAGE_SUCCESS","INSERT_GALLERY_IMAGE_FAIL","DELETE_GALLERY_IMAGE","DELETE_GALLERY_IMAGE_SUCCESS","DELETE_GALLERY_IMAGE_FAIL","UPDATE_GALLERY_IMAGE","UPDATE_GALLERY_IMAGE_SUCCESS","UPDATE_GALLERY_IMAGE_FAIL"],"mappings":"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","sourcesContent":["import {\n    ACTIONS\n} from 'redux/actions/types.js'\nimport {\n    mainAction\n} from \"redux/actions/index.actions\"\nimport {\n    db,\n    storage\n} from \"../../firebase\";\nconst initialState = {\n    gallery: {},\n    galleries:[],\n    photos: []\n};\nexport default function galleryReducer(state = initialState, action) {\n    switch (action.type) {\n        case ACTIONS.LOAD_GALLERY: {\n            db.collection(\"photoGallery\")\n               // .where(\"galleryId\", \"==\", action.payload)\n                .get()\n                .then(querySnapshot => {\n                    const data = querySnapshot.docs.map(doc => doc.data());\n                    console.log(data)\n                    action.asyncDispatch(mainAction(ACTIONS.LOAD_GALLERY_SUCCESS, data))\n                });\n            return state\n        }\n        case ACTIONS.LOAD_GALLERY_SUCCESS: {\n            state.gallery = action.payload\n            return state\n        }\n\n        case ACTIONS.LOAD_GALLERY_FAIL: {\n\n            return state\n        }\n        case ACTIONS.LOAD_GALLERIES: {\n            db.collection(\"photoGallery\")\n                .get()\n                .then(querySnapshot => {\n                    const data = querySnapshot.docs.map(doc => doc.data());\n                    console.log(data)\n                    action.asyncDispatch(mainAction(ACTIONS.LOAD_GALLERIES_SUCCESS, data))\n                });\n            return state\n        }\n        case ACTIONS.LOAD_GALLERIES_SUCCESS: {\n            state.gallery = {...action.payload[0]}\n            return state\n        }\n\n        case ACTIONS.LOAD_GALLERIES_FAIL: {\n\n            return state\n        }\n\n        case ACTIONS.DELETE_GALLERY: {\n\n            return state\n        }\n\n        case ACTIONS.DELETE_GALLERY_SUCCESS: {\n\n            return state\n        }\n\n        case ACTIONS.DELETE_GALLERY_FAIL: {\n\n            return state\n        }\n\n\n        case ACTIONS.UPDATE_GALLERY: {\n\n            return state\n        }\n\n        case ACTIONS.UPDATE_GALLERY_SUCCESS: {\n\n            return state\n        }\n\n        case ACTIONS.UPDATE_GALLERY_FAIL: {\n\n            return state\n        }\n\n\n        case ACTIONS.INSERT_GALLERY_IMAGE: {\n\n            return state\n        }\n\n        case ACTIONS.INSERT_GALLERY_IMAGE_SUCCESS: {\n\n            return state\n        }\n\n        case ACTIONS.INSERT_GALLERY_IMAGE_FAIL: {\n\n            return state\n        }\n\n        case ACTIONS.DELETE_GALLERY_IMAGE: {\n\n            return state\n        }\n\n        case ACTIONS.DELETE_GALLERY_IMAGE_SUCCESS: {\n\n            return state\n        }\n\n        case ACTIONS.DELETE_GALLERY_IMAGE_FAIL: {\n\n            return state\n        }\n\n\n        case ACTIONS.UPDATE_GALLERY_IMAGE: {\n\n            return state\n        }\n\n        case ACTIONS.UPDATE_GALLERY_IMAGE_SUCCESS: {\n\n            return state\n        }\n\n        case ACTIONS.UPDATE_GALLERY_IMAGE_FAIL: {\n\n            return state\n        }\n\n\n        default:\n            return state\n\n    }\n}"]},"metadata":{},"sourceType":"module"}