{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/components/dashboard/PostImage.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { mainAction } from \"redux/actions/index.actions\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\n\nconst ProfileImage = props => {\n  let mainProps = props;\n  const [selectedFile, setSelectedFile] = useState(\"/images/missing.png\");\n  const [uploadStatus, setUploadStatus] = useState(false);\n  const [caption, setCaption] = useState();\n  const [validated, setValidated] = useState(false);\n  const [coverLocation, setCoverLocation] = useState(\"frontCover\");\n  const [file, setFile] = useState(); //const {ID,images} = props\n\n  useEffect(() => {\n    document.title = `Johan De Meij | Edit Post`; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleImageSubmit = e => {// console.log(props)\n  };\n\n  const uploadImage = () => {\n    let image = {\n      image: file,\n      path: selectedFile,\n      albumID: props.currentPost,\n      caption,\n      cover: coverLocation\n    };\n    console.log(image);\n    mainProps.actions.mainAction(ACTIONS.UPLOAD_IMAGE, _.cloneDeep(image)); // setUploadStatus(true)\n  };\n\n  const insertImage = () => {\n    let image = {\n      image: file,\n      path: selectedFile,\n      albumID: props.currentPost,\n      caption,\n      cover: coverLocation\n    }; // console.log(image)\n\n    mainProps.actions.mainAction(ACTIONS.UPLOAD_POST_IMAGE, image);\n  };\n\n  const deletePostImage = () => {\n    let image = {\n      name: props.postImage.image[0].imageName,\n      ID: props.postImage.image[0].albumID\n    };\n    mainProps.actions.mainAction(ACTIONS.DELETE_POST_IMAGE, image);\n  };\n\n  const onChangeHandler = e => {\n    setSelectedFile(window.URL.createObjectURL(e.target.files[0]));\n    setFile(e.target.files[0]);\n    setUploadStatus(true);\n  };\n\n  const renderUploadButtons = _id => {\n    if (selectedFile && uploadStatus) return /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: () => uploadImage(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 16\n      }\n    }, \"upload\");\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: e => selecteImageToUpload(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, \"Change\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      onClick: () => deletePostImage(_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"Delete\"));\n  };\n\n  const renderInsertButtons = () => {\n    if (selectedFile && uploadStatus) return /*#__PURE__*/React.createElement(Button, {\n      variant: \"warning\",\n      onClick: () => insertImage(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 16\n      }\n    }, \"upload\");\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: e => selecteImageToUpload(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 16\n      }\n    }, \"Insert image\");\n  };\n\n  const selecteImageToUpload = e => {\n    document.querySelector('input#post-image').click();\n  };\n\n  let postImage = Object.values(props.postImage ? props.postImage : []).map(image => {\n    return image;\n  });\n  return /*#__PURE__*/React.createElement(\"section\", {\n    id: \"images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleImageSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 2\n    },\n    className: \"post-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.imageName ? \"https://firebasestorage.googleapis.com/v0/b/johandemeij-513b2.appspot.com/o/images%2Fposts%2F\" + props.imageName + '?alt=media' : selectedFile,\n    onClick: e => selecteImageToUpload(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"15px\",\n      textAlign: \"center\",\n      font: \"400 8px/10px 'Work Sans', sans-serif\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, !uploadStatus ? props.imageName : \"\")), /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 6\n    },\n    className: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"showpost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"Front / back cover\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    custom: true,\n    onChange: e => setCoverLocation(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: props.cover ? props.cover : \"frontCover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }, props.cover ? props.cover : \"\" === \"frontCover\" ? \"Front Cover\" : \"Back Cover\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"frontCover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, \"Front Cover\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"backCover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, \"Back Cover\"))))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, \"Caption\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: props.caption ? props.caption : '',\n    onChange: e => setCaption(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, \"Please provide a caption.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, \"Looks good!\")))), /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 4\n    },\n    className: \"action-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 16\n    }\n  }, props.imageName ? renderUploadButtons(props._id) : renderInsertButtons(), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"post-image\",\n    onChange: e => onChangeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 134\n    }\n  })))));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, \"Loading\"));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    postImage: state.singlePostReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      mainAction\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileImage);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/components/dashboard/PostImage.jsx"],"names":["React","useEffect","useState","connect","bindActionCreators","mainAction","Form","Row","Col","Button","ACTIONS","ProfileImage","props","mainProps","selectedFile","setSelectedFile","uploadStatus","setUploadStatus","caption","setCaption","validated","setValidated","coverLocation","setCoverLocation","file","setFile","document","title","handleImageSubmit","e","uploadImage","image","path","albumID","currentPost","cover","console","log","actions","UPLOAD_IMAGE","_","cloneDeep","insertImage","UPLOAD_POST_IMAGE","deletePostImage","name","postImage","imageName","ID","DELETE_POST_IMAGE","onChangeHandler","window","URL","createObjectURL","target","files","renderUploadButtons","_id","selecteImageToUpload","renderInsertButtons","querySelector","click","Object","values","map","span","marginTop","textAlign","font","value","mapStateToProps","state","singlePostReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { Form, Row, Col, Button} from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\n\nconst ProfileImage = (props) => {\n  let mainProps = props\n  \n    const [selectedFile,setSelectedFile] = useState(\"/images/missing.png\")\n    const [uploadStatus,setUploadStatus] = useState(false)\n    const [caption,setCaption] = useState()\n    const [validated, setValidated] = useState(false);\n    const [coverLocation,setCoverLocation]= useState(\"frontCover\")\n    const [file,setFile] = useState()\n   //const {ID,images} = props\n    useEffect(() => {\n        document.title = `Johan De Meij | Edit Post`;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, []);\n    const handleImageSubmit = (e) => {\n     // console.log(props)\n    }\n    const uploadImage = () => {\n    \n      let image = {\n        image:file,\n        path:selectedFile,\n        albumID:props.currentPost,\n        caption,\n        cover:coverLocation\n      }\n     console.log(image)\n       mainProps.actions.mainAction(ACTIONS.UPLOAD_IMAGE,_.cloneDeep(image))\n        // setUploadStatus(true)\n      }\n      \n    const insertImage = () => {\n    \n      let image = {\n        image:file,\n        path:selectedFile,\n        albumID:props.currentPost,\n        caption,\n        cover:coverLocation\n      }\n     // console.log(image)\n       mainProps.actions.mainAction(ACTIONS.UPLOAD_POST_IMAGE,image)\n      }\n      const deletePostImage = () => {\n        let image = {\n          name:props.postImage.image[0].imageName,\n          ID:props.postImage.image[0].albumID,\n        }\n       mainProps.actions.mainAction(ACTIONS.DELETE_POST_IMAGE,image)\n      } \n      const onChangeHandler = (e) => {\n        setSelectedFile(window.URL.createObjectURL(e.target.files[0]))\n        setFile(e.target.files[0])\n        setUploadStatus(true)\n      } \n      const renderUploadButtons = (_id) => {\n        if(selectedFile && uploadStatus)\n        return <Button variant=\"dark\" onClick={()=>uploadImage()}>upload</Button>\n        return (<>\n        <Button variant=\"primary\" onClick={(e)=>selecteImageToUpload(e)} >Change</Button>\n        <Button variant=\"danger\" onClick={()=>deletePostImage(_id)} >Delete</Button>\n        </>)\n      }\n      const renderInsertButtons = () => {\n        if(selectedFile && uploadStatus)\n        return <Button variant=\"warning\" onClick={()=>insertImage()}>upload</Button>\n        return <Button variant=\"primary\" onClick={(e)=>selecteImageToUpload(e)} >Insert image</Button>\n      }\n      const selecteImageToUpload = (e) => {\n        document.querySelector('input#post-image').click()\n      }\n      let postImage = Object.values(props.postImage?props.postImage:[]).map(image => {\n        return image\n      })\n    return(\n        <section id=\"images\">\n          <Form noValidate validated={validated} onSubmit={handleImageSubmit}>\n            <Row>\n            <Col lg={{span:2}} className=\"post-image\">\n             <img src={props.imageName ? \"https://firebasestorage.googleapis.com/v0/b/johandemeij-513b2.appspot.com/o/images%2Fposts%2F\"+props.imageName+'?alt=media':selectedFile}  onClick={(e)=>selecteImageToUpload(e)} />\n    <div style={{marginTop:\"15px\",textAlign:\"center\",font: \"400 8px/10px 'Work Sans', sans-serif\"}}>{!uploadStatus ? props.imageName:\"\"}</div>\n            </Col>\n             <Col lg={{span:6}} className=\"caption\">\n             <div><Form.Row>\n              <Form.Group controlId=\"showpost\">\n                <Form.Label>Front / back cover</Form.Label>\n                <Form.Control as=\"select\" custom onChange={e => setCoverLocation(e.target.value)}>\n                  <option value={props.cover ? props.cover:\"frontCover\"}>{props.cover ? props.cover:\"\" ===\"frontCover\"? \"Front Cover\":\"Back Cover\"}</option>\n                  <option value=\"frontCover\">Front Cover</option>\n                  <option value=\"backCover\">Back Cover</option>\n                </Form.Control>\n              </Form.Group>\n            </Form.Row></div>\n             <Form.Row>\n                  <Form.Group as={Col}  controlId=\"caption\">\n                    <Form.Label>Caption</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"\"\n                      defaultValue={props.caption ? props.caption:''}\n                      onChange={e => setCaption(e.target.value)}\n                      \n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a caption.\n                      </Form.Control.Feedback>\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Form.Group>\n                  </Form.Row>\n               </Col>\n               <Col lg={{span:4}}  className=\"action-button\">{props.imageName ? renderUploadButtons(props._id):renderInsertButtons()}<input type=\"file\" id=\"post-image\" onChange={(e)=>onChangeHandler(e)}/></Col>\n               </Row>\n            </Form>\n          </section>\n    )\n    return (<><div>Loading</div></>)\n}\nfunction mapStateToProps(state) {\n    return {\n      postImage:state.singlePostReducer,\n    };\n  }\n  \n  function mapDispatchToProps(dispatch) {\n    return {\n      actions: bindActionCreators({mainAction}, dispatch)\n    };\n  }\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(ProfileImage);"]},"metadata":{},"sourceType":"module"}