{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/WEB/johandemeij/johan-app/src/components/dashboard/CdImage.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { mainAction } from \"redux/actions/index.actions\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\n\nconst CdImage = props => {\n  let mainProps = props;\n  const [selectedFile, setSelectedFile] = useState();\n  const [uploadStatus, setUploadStatus] = useState(false);\n  const [frontCaption, setFrontCaption] = useState();\n  const [backCaption, setBackCaption] = useState();\n  const [validated, setValidated] = useState(false);\n  const [coverLocation, setCoverLocation] = useState(\"frontCover\");\n  const [file, setFile] = useState(); //const {ID,images} = props\n\n  useEffect(() => {\n    document.title = `Johan De Meij | Edit Post`; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleImageSubmit = e => {// console.log(props)\n  };\n\n  const uploadImage = () => {\n    let image = {\n      docId: props.docId,\n      image: file,\n      path: selectedFile,\n      albumID: props.ID,\n      caption: props.type === \"front\" ? frontCaption : backCaption,\n      cover: props.type === \"front\" ? \"frontCover\" : \"backCover\"\n    };\n    mainProps.actions.mainAction(ACTIONS.UPLOAD_CD_IMAGE, image);\n  };\n\n  const insertImage = () => {\n    let image = {\n      docId: props.docId,\n      image: file,\n      path: selectedFile,\n      albumID: props.ID,\n      caption: props.type === \"front\" ? frontCaption : backCaption,\n      cover: props.type === \"front\" ? \"frontCover\" : props.type === \"back\" ? \"backCover\" : \"main\"\n    };\n    mainProps.actions.mainAction(ACTIONS.UPLOAD_CD_IMAGE, image);\n  };\n\n  const deleteCDimage = () => {\n    let image = {\n      imageType: props.type === \"front\" ? \"frontCover\" : props.type === \"back\" ? \"backCover\" : \"main\",\n      docId: props.docId,\n      name: props.image,\n      ID: props.ID\n    };\n    mainProps.actions.mainAction(ACTIONS.DELETE_CD_IMAGE, image);\n  };\n\n  const onChangeHandler = e => {\n    setSelectedFile(window.URL.createObjectURL(e.target.files[0]));\n    setFile(e.target.files[0]);\n    setUploadStatus(true);\n  };\n\n  const renderUploadButtons = _id => {\n    if (selectedFile && uploadStatus) return /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: () => uploadImage(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 16\n      }\n    }, \"upload\");\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: e => selecteImageToUpload(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Change\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      onClick: () => deleteCDimage(_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Delete\"));\n  };\n\n  const renderInsertButtons = () => {\n    if (selectedFile && uploadStatus) {\n      return /*#__PURE__*/React.createElement(Button, {\n        variant: \"warning\",\n        onClick: () => insertImage(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 16\n        }\n      }, \"upload\");\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        style: {\n          marginRight: \"15px\"\n        },\n        onClick: e => selecteImageToUpload(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 12\n        }\n      }, \"Change\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"danger\",\n        onClick: e => deleteCDimage(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 12\n        }\n      }, \"Delete\"));\n    }\n  };\n\n  const selecteImageToUpload = e => {\n    props.type === \"front\" ? document.querySelector('input#post-image-front').click() : props.type === \"back\" ? document.querySelector('input#post-image-back').click() : document.querySelector('input#post-image-main').click();\n  };\n\n  let postImage = Object.values(props.postImage ? props.postImage : []).map(image => {\n    return image;\n  });\n\n  const renderImage = () => {\n    let URL = \"\";\n\n    if (props.type === \"front\" || props.type === \"back\") {\n      URL = \"https://firebasestorage.googleapis.com/v0/b/johandemeij-513b2.appspot.com/o/posts%2F\";\n    } else {\n      URL = \"https://firebasestorage.googleapis.com/v0/b/johandemeij-513b2.appspot.com/o/music_catalogue%2F\";\n    }\n\n    if (props.image) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: !selectedFile ? URL + props.image + '?alt=media' : selectedFile,\n        onClick: e => selecteImageToUpload(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: !selectedFile ? \"/images/missing.png\" : selectedFile,\n        onClick: e => selecteImageToUpload(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    id: \"images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleImageSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 2\n    },\n    className: \"post-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, renderImage(), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"15px\",\n      textAlign: \"center\",\n      font: \"400 8px/10px 'Work Sans', sans-serif\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, !uploadStatus ? props.imageName : \"\")), props.type != \"main\" ? /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 6\n    },\n    className: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"showpost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, props.type === \"front\" ? \"Front Cover Caption\" : props.type === \"back\" ? \"Back Cover Caption\" : \"\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: props.caption,\n    onChange: e => props.type === \"front\" ? setFrontCaption(e.target.value) : setBackCaption(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }))))) : \"\", /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 4\n    },\n    className: \"action-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, props.imageName ? renderUploadButtons(props._id) : renderInsertButtons(), props.type === \"front\" ? /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"post-image-front\",\n    onChange: e => onChangeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 1\n    }\n  }) : props.type === \"back\" ? /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"post-image-back\",\n    onChange: e => onChangeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 1\n    }\n  }) : /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"post-image-main\",\n    onChange: e => onChangeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 1\n    }\n  })))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    postImage: state.singlePostReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      mainAction\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CdImage);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/WEB/johandemeij/johan-app/src/components/dashboard/CdImage.jsx"],"names":["React","useEffect","useState","connect","bindActionCreators","mainAction","Form","Row","Col","Button","ACTIONS","CdImage","props","mainProps","selectedFile","setSelectedFile","uploadStatus","setUploadStatus","frontCaption","setFrontCaption","backCaption","setBackCaption","validated","setValidated","coverLocation","setCoverLocation","file","setFile","document","title","handleImageSubmit","e","uploadImage","image","docId","path","albumID","ID","caption","type","cover","actions","UPLOAD_CD_IMAGE","insertImage","deleteCDimage","imageType","name","DELETE_CD_IMAGE","onChangeHandler","window","URL","createObjectURL","target","files","renderUploadButtons","_id","selecteImageToUpload","renderInsertButtons","marginRight","querySelector","click","postImage","Object","values","map","renderImage","span","marginTop","textAlign","font","imageName","value","mapStateToProps","state","singlePostReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { Form, Row, Col, Button} from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\n\nconst CdImage = (props) => {\n  let mainProps = props\n  \n    const [selectedFile,setSelectedFile] = useState()\n    const [uploadStatus,setUploadStatus] = useState(false)\n    const [frontCaption,setFrontCaption] = useState()\n    const [backCaption,setBackCaption] = useState()\n    const [validated, setValidated] = useState(false);\n    const [coverLocation,setCoverLocation]= useState(\"frontCover\")\n    const [file,setFile] = useState()\n   //const {ID,images} = props\n    useEffect(() => {\n        document.title = `Johan De Meij | Edit Post`;\n       \n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, []);\n    const handleImageSubmit = (e) => {\n     // console.log(props)\n    }\n    const uploadImage = () => {\n    \n      let image = {\n        docId:props.docId,\n        image:file,\n        path:selectedFile,\n        albumID:props.ID,\n        caption:props.type === \"front\" ? frontCaption:backCaption,\n        cover:props.type === \"front\" ? \"frontCover\":\"backCover\"\n      }\n       mainProps.actions.mainAction(ACTIONS.UPLOAD_CD_IMAGE,image)\n      }\n      \n    const insertImage = () => {\n    \n      let image = {\n        docId:props.docId,\n        image:file,\n        path:selectedFile,\n        albumID:props.ID,\n        caption:props.type === \"front\" ? frontCaption:backCaption,\n        cover:props.type === \"front\" ? \"frontCover\":props.type === \"back\" ? \"backCover\":\"main\"\n      }\n       mainProps.actions.mainAction(ACTIONS.UPLOAD_CD_IMAGE,image)\n      }\n    const deleteCDimage = () => {\n        let image = {\n          imageType:props.type === \"front\" ? \"frontCover\":props.type === \"back\" ? \"backCover\":\"main\",\n          docId:props.docId,\n          name:props.image,\n          ID:props.ID,\n        }\n\n       mainProps.actions.mainAction(ACTIONS.DELETE_CD_IMAGE,image)\n    } \n      const onChangeHandler = (e) => {\n        setSelectedFile(window.URL.createObjectURL(e.target.files[0]))\n        setFile(e.target.files[0])\n        setUploadStatus(true)\n      } \n      const renderUploadButtons = (_id) => {\n        if(selectedFile && uploadStatus)\n        return <Button variant=\"dark\" onClick={()=>uploadImage()}>upload</Button>\n        return (<>\n        <Button variant=\"primary\" onClick={(e)=>selecteImageToUpload(e)} >Change</Button>\n        <Button variant=\"danger\" onClick={()=>deleteCDimage(_id)} >Delete</Button>\n        </>)\n      }\n      const renderInsertButtons = () => {\n        if(selectedFile && uploadStatus){\n        return <Button variant=\"warning\" onClick={()=>insertImage()}>upload</Button>\n        } else {\n           return (<>\n           <Button variant=\"primary\" style={{marginRight:\"15px\"}}onClick={(e)=>selecteImageToUpload(e)} >Change</Button>\n           <Button variant=\"danger\" onClick={(e)=>deleteCDimage(e)} >Delete</Button>\n           </>)\n        }\n       \n      }\n      const selecteImageToUpload = (e) => {\n        props.type === \"front\" ?\n        document.querySelector('input#post-image-front').click(): props.type === \"back\" ?\n        document.querySelector('input#post-image-back').click() :\n        document.querySelector('input#post-image-main').click()\n      }\n      let postImage = Object.values(props.postImage?props.postImage:[]).map(image => {\n        return image\n      })\n      const renderImage = () => {\n        let URL = \"\"\n        if(props.type === \"front\" || props.type === \"back\"){\n         URL = \"https://firebasestorage.googleapis.com/v0/b/johandemeij-513b2.appspot.com/o/posts%2F\"\n        } else {\n            URL = \"https://firebasestorage.googleapis.com/v0/b/johandemeij-513b2.appspot.com/o/music_catalogue%2F\"\n        }\n       if(props.image){\n        return (<img src={!selectedFile ? URL+props.image+'?alt=media':selectedFile} onClick={(e)=>selecteImageToUpload(e)} />)\n       } else {\n        return (<img src={!selectedFile ? \"/images/missing.png\":selectedFile} onClick={(e)=>selecteImageToUpload(e)} />)\n       }\n\n      }\n\n    return(\n        <section id=\"images\">\n          <Form noValidate validated={validated} onSubmit={handleImageSubmit}>\n            <Row>\n            <Col lg={{span:2}} className=\"post-image\">\n             {renderImage()}\n    <div style={{marginTop:\"15px\",textAlign:\"center\",font: \"400 8px/10px 'Work Sans', sans-serif\"}}>{!uploadStatus ? props.imageName:\"\"}</div>\n            </Col>\n            {props.type != \"main\" ?  <Col lg={{span:6}} className=\"caption\">\n             <div><Form.Row>\n              <Form.Group controlId=\"showpost\">\n              <Form.Label>{props.type === \"front\" ? \"Front Cover Caption\":props.type === \"back\" ? \"Back Cover Caption\":\"\"}</Form.Label>\n              <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"\"\n                      defaultValue={props.caption}\n                      onChange={e =>props.type === \"front\" ? setFrontCaption(e.target.value):setBackCaption(e.target.value)}\n                    />\n              </Form.Group>\n            </Form.Row></div>\n               </Col>:\"\"}\n    <Col lg={{span:4}}  className=\"action-button\">{props.imageName ? renderUploadButtons(props._id):renderInsertButtons()}{\nprops.type === \"front\" ?\n<input type=\"file\" id={\"post-image-front\"} onChange={(e)=>onChangeHandler(e)}/> :\nprops.type === \"back\" ?\n<input type=\"file\" id={\"post-image-back\"} onChange={(e)=>onChangeHandler(e)}/> :\n<input type=\"file\" id={\"post-image-main\"} onChange={(e)=>onChangeHandler(e)}/>\n    }</Col>\n               </Row>\n            </Form>\n          </section>\n    )\n}\nfunction mapStateToProps(state) {\n    return {\n      postImage:state.singlePostReducer\n    };\n  }\n  \n  function mapDispatchToProps(dispatch) {\n    return {\n      actions: bindActionCreators({mainAction}, dispatch)\n    };\n  }\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(CdImage);"]},"metadata":{},"sourceType":"module"}