{"ast":null,"code":"import _objectSpread from\"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";import{db,storage}from\"../../firebase\";import _ from\"lodash\";import{updatePresentationImage}from\"API/indexAPI\";var initialState={};export default function presentationReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.DELETE_PRESENTATION_IMAGE:{var presentation={};if(action.payload.imageType===\"frontCover\"){presentation={frontCover:\"\",frontCaption:\"\"};}else{presentation={backCover:\"\",backCaption:\"\"};}db.collection(\"presentations\").doc(action.payload.docId).update(presentation).then(function(){db.collection(\"postimages\").where('albumID','==',action.payload.ID).where('cover','==',action.payload.imageType).get().then(function(querySnapshot){console.log(querySnapshot.docs);querySnapshot.forEach(function(doc){console.log(doc.ref.id,doc.ref.parent,doc.ref.path);doc.ref.delete();});action.asyncDispatch(mainAction(ACTIONS.DELETE_PRESENTATION_IMAGE_SUCCESS,action.payload));});});return state;}case ACTIONS.DELETE_PRESENTATION_IMAGE_SUCCESS:{var postImageRef=storage.ref('posts/'+action.payload.name);postImageRef.delete().then(function(){return console.log(\"file deleted\");});action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION,action.payload.ID));return state;}case ACTIONS.DELETE_PRESENTATION_IMAGE_FAIL:{return action.payload;}case ACTIONS.CREATE_NEW_PUBLICATION:{var stateCopy=_.cloneDeep(action.payload);db.collection(\"presentations\").add(stateCopy).then(function(docRef){stateCopy._id=docRef.id;db.collection(\"presentations\").doc(docRef.id).update({_id:docRef.id}).then(function(){action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_PUBLICATION_SUCCESS,stateCopy));});});return stateCopy;}case ACTIONS.CREATE_NEW_PUBLICATION_SUCCESS:{return action.payload;}case ACTIONS.CREATE_NEW_PUBLICATION_FAIL:{return state;}case ACTIONS.DELETE_PRESENTATION:{db.collection(\"presentations\").where(\"id\",\"==\",action.payload).get().then(function(querySnapshot){querySnapshot.forEach(function(doc){console.log(doc.ref.id,doc.ref.parent,doc.ref.path);doc.ref.delete();});action.asyncDispatch(mainAction(ACTIONS.DELETE_PRESENTATION_SUCCESS,action.payload));});return state;}case ACTIONS.DELETE_PRESENTATION_SUCCESS:{action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATIONS,[]));return state;}case ACTIONS.DELETE_PRESENTATION_FAIL:{return state;}case ACTIONS.LOAD_PRESENTATION:{var _stateCopy=_.cloneDeep(state);var _id='';db.collection(\"presentations\").where(\"id\",\"==\",action.payload).get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){//  _id=doc.id\nreturn doc.data();});_stateCopy=data;//  stateCopy[0]._id = _id\naction.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION_SUCCESS,data));});return state;}case ACTIONS.LOAD_PRESENTATION_SUCCESS:{return action.payload.length>0?action.payload[0]:[];}case ACTIONS.LOAD_PRESENTATION_FAIL:{return state;}case ACTIONS.UPDATE_PUBLICATION:{console.log(action);var _stateCopy2=_.cloneDeep(action.payload);db.collection(\"presentations\").where(\"id\",\"==\",_stateCopy2.id).get().then(function(querySnapshot){var _id='';var data=querySnapshot.docs.map(function(doc){_id=doc.ref.id;return doc.data();});_stateCopy2._id=_id;console.log(_stateCopy2);db.collection(\"presentations\").doc(_id).update(_stateCopy2).then(function(snapshot){console.log(snapshot);action.asyncDispatch(mainAction(ACTIONS.UPDATE_PUBLICATION_SUCCESS,_stateCopy2));});}).catch(function(err){action.asyncDispatch(mainAction(ACTIONS.UPDATE_PUBLICATION_FAIL,err));});return state;}case ACTIONS.UPDATE_PUBLICATION_SUCCESS:{var _stateCopy3=_.cloneDeep(action.payload);action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION,_stateCopy3.id));window.location.reload(true);return _objectSpread({state:state},_stateCopy3.payload);}case ACTIONS.UPDATE_PUBLICATION_FAIL:{return state;}case ACTIONS.UPDATE_PRESENTATION_IMAGE_SUCCESS:{var _stateCopy4=_.cloneDeep(state);var newImage={_id:action.payload.submitted._id,albumID:action.payload.submitted.albumID,caption:action.payload.submitted.caption,cover:action.payload.submitted.cover,imageName:action.payload.json.data.filename,updatedAt:Date.now()};_stateCopy4.currentID=action.payload.submitted.albumID;action.asyncDispatch(mainAction(ACTIONS.UPDATE_POST_IMAGE,newImage));return _stateCopy4;}case ACTIONS.UPDATE_PRESENTATION_IMAGE_FAIL:{return state;}case ACTIONS.UPLOAD_PRESENTATION_IMAGE:{var _stateCopy5=_.cloneDeep(action.payload);var image={albumID:action.payload.albumID,caption:action.payload.caption?action.payload.caption:\"\",cover:action.payload.cover?action.payload.cover:\"\",imageName:action.payload.image.name};var _presentation={};if(action.payload.cover===\"frontCover\"){_presentation={frontCover:action.payload.image.name,frontCaption:action.payload.caption?action.payload.caption:\"\"};}else{_presentation={backCover:action.payload.image.name,backCaption:action.payload.caption?action.payload.caption:\"\"};}db.collection(\"presentations\").where(\"id\",\"==\",_stateCopy5.albumID).get().then(function(querySnapshot){var _id='';var data=querySnapshot.docs.map(function(doc){_id=doc.ref.id;return doc.data();});_stateCopy5._id=_id;db.collection(\"presentations\").doc(_id).update(_presentation).then(function(){db.collection(\"postimages\").doc().set(image).then(function(){action.asyncDispatch(mainAction(ACTIONS.UPLOAD_PRESENTATION_IMAGE_SUCCESS,action.payload));});});}).catch(function(err){action.asyncDispatch(mainAction(ACTIONS.UPDATE_PUBLICATION_FAIL,err));});return state;}case ACTIONS.UPLOAD_PRESENTATION_IMAGE_SUCCESS:{var _postImageRef=storage.ref('posts/'+action.payload.image.name).put(action.payload.image);_postImageRef.on('state_changed',function(snapshot){//progress function\n},function(error){//error\nconsole.log(error);},function(){//complete\nstorage.ref('/posts').child(action.payload.image.name).getDownloadURL().then(function(url){console.log(url);action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION,action.payload.albumID));});});return state;}case ACTIONS.UPLOAD_PRESENTATION_IMAGE_FAIL:{return state;}case ACTIONS.UPDATE_PRESENTATION_IMAGE:{console.log(action);var _image='';if(action.submitted.cover===\"frontCover\"){_image={frontCover:action.json.data.filename,frontCaption:action.submitted.caption};}else{_image={backCover:action.json.data.filename,backCaption:action.submitted.caption};}action.asyncDispatch(mainAction(ACTIONS.UPDATE_PUBLICATION,_image));return state;}case ACTIONS.UPDATE_CAPTION:{var _stateCopy6=_.cloneDeep(action.payload);var _image2={albumID:action.payload.albumID,caption:action.payload.caption?action.payload.caption:\"\",cover:action.payload.cover?action.payload.cover:\"\"};var _presentation2={};if(action.payload.cover===\"frontCover\"){_presentation2={frontCover:action.payload.image.name,frontCaption:action.payload.caption?action.payload.caption:\"\"};}else{_presentation2={backCover:action.payload.image.name,backCaption:action.payload.caption?action.payload.caption:\"\"};}db.collection(\"presentations\").where(\"id\",\"==\",_stateCopy6.albumID).get().then(function(querySnapshot){var _id='';var data=querySnapshot.docs.map(function(doc){_id=doc.ref.id;return doc.data();});_stateCopy6._id=_id;db.collection(\"presentations\").doc(_id).update(_presentation2).then(function(){action.asyncDispatch(mainAction(ACTIONS.UPDATE_CAPTION_SUCCESS,action.payload));});}).catch(function(err){action.asyncDispatch(mainAction(ACTIONS.UPDATE_CAPTION_FAIL,err));});return state;}case ACTIONS.UPDATE_CAPTION_SUCCESS:{return state;}default:return _objectSpread({},state);}}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/presentation.reducer.js"],"names":["ACTIONS","mainAction","db","storage","_","updatePresentationImage","initialState","presentationReducer","state","action","type","DELETE_PRESENTATION_IMAGE","presentation","payload","imageType","frontCover","frontCaption","backCover","backCaption","collection","doc","docId","update","then","where","ID","get","querySnapshot","console","log","docs","forEach","ref","id","parent","path","delete","asyncDispatch","DELETE_PRESENTATION_IMAGE_SUCCESS","postImageRef","name","LOAD_PRESENTATION","DELETE_PRESENTATION_IMAGE_FAIL","CREATE_NEW_PUBLICATION","stateCopy","cloneDeep","add","docRef","_id","CREATE_NEW_PUBLICATION_SUCCESS","CREATE_NEW_PUBLICATION_FAIL","DELETE_PRESENTATION","DELETE_PRESENTATION_SUCCESS","LOAD_PRESENTATIONS","DELETE_PRESENTATION_FAIL","data","map","LOAD_PRESENTATION_SUCCESS","length","LOAD_PRESENTATION_FAIL","UPDATE_PUBLICATION","snapshot","UPDATE_PUBLICATION_SUCCESS","catch","err","UPDATE_PUBLICATION_FAIL","window","location","reload","UPDATE_PRESENTATION_IMAGE_SUCCESS","newImage","submitted","albumID","caption","cover","imageName","json","filename","updatedAt","Date","now","currentID","UPDATE_POST_IMAGE","UPDATE_PRESENTATION_IMAGE_FAIL","UPLOAD_PRESENTATION_IMAGE","image","set","UPLOAD_PRESENTATION_IMAGE_SUCCESS","put","on","error","child","getDownloadURL","url","UPLOAD_PRESENTATION_IMAGE_FAIL","UPDATE_PRESENTATION_IMAGE","UPDATE_CAPTION","UPDATE_CAPTION_SUCCESS","UPDATE_CAPTION_FAIL"],"mappings":"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","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { db,storage} from \"../../firebase\";\nimport  _ from \"lodash\"\nimport {updatePresentationImage} from \"API/indexAPI\"\nconst initialState = {};\nexport default function presentationReducer (state = initialState, action) {\n    switch (action.type) {\n      case ACTIONS.DELETE_PRESENTATION_IMAGE:{\n        let presentation= {}\n        if(action.payload.imageType === \"frontCover\"){\n         presentation = {\n           frontCover : \"\",\n           frontCaption:\"\",\n         }\n        } else {\n          presentation = {\n            backCover : \"\",\n            backCaption:\"\",\n          }\n        }\n\n       db.collection(\"presentations\").doc(action.payload.docId)\n       .update(presentation).then(()=>{   \n\n          db.collection(\"postimages\")\n          .where('albumID','==',action.payload.ID)\n          .where('cover','==',action.payload.imageType)\n           .get()\n           .then((querySnapshot) => {\n            console.log(querySnapshot.docs)\n            querySnapshot.forEach((doc)=>{\n               console.log(doc.ref.id,doc.ref.parent,doc.ref.path)\n               doc.ref.delete()\n              })\n            action.asyncDispatch(mainAction(ACTIONS.DELETE_PRESENTATION_IMAGE_SUCCESS,action.payload))\n           });\n       });\n\n        \n        return state\n      }  \n      case ACTIONS.DELETE_PRESENTATION_IMAGE_SUCCESS:{\n        let postImageRef = storage.ref('posts/'+action.payload.name)\n        postImageRef.delete().then(()=>console.log(\"file deleted\"));\n        action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION,action.payload.ID))\n        return state\n      }  \n      case ACTIONS.DELETE_PRESENTATION_IMAGE_FAIL:{\n        \n        return action.payload\n      }  \n        case ACTIONS.CREATE_NEW_PUBLICATION: {\n          let stateCopy = _.cloneDeep(action.payload)\n      \n          db.collection(\"presentations\")\n            .add(stateCopy)\n            .then(function(docRef){\n              stateCopy._id = docRef.id\n              db.collection(\"presentations\")\n              .doc(docRef.id)\n              .update({_id:docRef.id}).then(()=>{\n                action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_PUBLICATION_SUCCESS,stateCopy))\n              });\n             \n            });\n        return stateCopy\n        }\n        case ACTIONS.CREATE_NEW_PUBLICATION_SUCCESS: {\n        return action.payload\n        }\n        case ACTIONS.CREATE_NEW_PUBLICATION_FAIL: {\n        return state\n        }\n        case  ACTIONS.DELETE_PRESENTATION:{\n          db.collection(\"presentations\")\n          .where(\"id\",\"==\",action.payload)\n          .get()\n          .then((querySnapshot) => {\n            querySnapshot.forEach((doc)=>{\n               console.log(doc.ref.id,doc.ref.parent,doc.ref.path)\n              doc.ref.delete()\n              })\n            action.asyncDispatch(mainAction(ACTIONS.DELETE_PRESENTATION_SUCCESS,action.payload))\n           });\n          return state\n        }\n        case  ACTIONS.DELETE_PRESENTATION_SUCCESS:{\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATIONS,[]))\n          return state\n        }\n        case  ACTIONS.DELETE_PRESENTATION_FAIL:{\n          return state\n        }\n        case ACTIONS.LOAD_PRESENTATION: {\n        let stateCopy = _.cloneDeep(state)\n        let _id = ''\n            db.collection(\"presentations\")\n            .where(\"id\",\"==\",action.payload)\n            .get()\n            .then(querySnapshot => {\n              const data = querySnapshot.docs.map(doc => {\n              //  _id=doc.id\n                return doc.data()});\n              stateCopy = data\n            //  stateCopy[0]._id = _id\n              action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION_SUCCESS,data))\n            });\n            return state\n        }\n        case  ACTIONS.LOAD_PRESENTATION_SUCCESS:{\n            \n            return action.payload.length > 0 ? action.payload[0]:[]\n        }\n        case  ACTIONS.LOAD_PRESENTATION_FAIL:{\n            return state\n        }\n        \n        case ACTIONS.UPDATE_PUBLICATION:{  \n       console.log(action)\n      let stateCopy = _.cloneDeep(action.payload)\n      db.collection(\"presentations\")\n      .where(\"id\", \"==\", stateCopy.id).get()\n      .then((querySnapshot)=>{\n        let _id=''\n        const data = querySnapshot.docs.map(doc =>{\n         _id = doc.ref.id\n          return  doc.data()\n        })\n        stateCopy._id = _id\n        console.log(stateCopy)\n        db.collection(\"presentations\")\n        .doc(_id)\n        .update(stateCopy).then((snapshot)=>{\n          console.log(snapshot)\n          action.asyncDispatch(mainAction(ACTIONS.UPDATE_PUBLICATION_SUCCESS,stateCopy))\n        });\n       })\n      .catch((err)=>{\n        action.asyncDispatch(mainAction(ACTIONS.UPDATE_PUBLICATION_FAIL,err))\n      })\n       \n        return state\n        }\n        case ACTIONS.UPDATE_PUBLICATION_SUCCESS:{\n        let stateCopy = _.cloneDeep(action.payload)\n        action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION,stateCopy.id))\n        window.location.reload(true);\n        return {state,...stateCopy.payload}\n        }\n        case ACTIONS.UPDATE_PUBLICATION_FAIL:{\n        return state\n        }\n        case ACTIONS.UPDATE_PRESENTATION_IMAGE_SUCCESS:{\n              let stateCopy = _.cloneDeep(state)\n              \n              let newImage = {\n                _id:action.payload.submitted._id,\n                albumID:action.payload.submitted.albumID,\n                caption:action.payload.submitted.caption,\n                cover:action.payload.submitted.cover,\n                imageName:action.payload.json.data.filename,\n                updatedAt:Date.now()\n              }\n              stateCopy.currentID = action.payload.submitted.albumID\n              action.asyncDispatch(mainAction( ACTIONS.UPDATE_POST_IMAGE,newImage))\n            return stateCopy\n        }\n        case ACTIONS.UPDATE_PRESENTATION_IMAGE_FAIL:{\n            return state\n        }\n        case ACTIONS.UPLOAD_PRESENTATION_IMAGE:{\n         let stateCopy = _.cloneDeep(action.payload)\n          let image = {\n            albumID: action.payload.albumID,\n            caption: action.payload.caption ? action.payload.caption :\"\",\n            cover: action.payload.cover ? action.payload.cover:\"\",\n            imageName:action.payload.image.name\n          }\n          let presentation= {}\n          if(action.payload.cover === \"frontCover\"){\n           presentation = {\n             frontCover : action.payload.image.name,\n             frontCaption:action.payload.caption ? action.payload.caption :\"\",\n           }\n          } else {\n            presentation = {\n              backCover : action.payload.image.name,\n              backCaption:action.payload.caption ? action.payload.caption :\"\",\n            }\n          }\n          db.collection(\"presentations\")\n      .where(\"id\", \"==\", stateCopy.albumID).get()\n      .then((querySnapshot)=>{\n        let _id=''\n        const data = querySnapshot.docs.map(doc =>{\n         _id = doc.ref.id\n          return  doc.data()\n        })\n        stateCopy._id = _id\n\n        db.collection(\"presentations\").doc(_id)\n        .update(presentation).then(()=>{   \n            db.collection(\"postimages\")\n            .doc()\n            .set(image)\n            .then(() => {\n              action.asyncDispatch(mainAction(ACTIONS.UPLOAD_PRESENTATION_IMAGE_SUCCESS,action.payload))\n            });\n\n\n        });\n       })\n      .catch((err)=>{\n        action.asyncDispatch(mainAction(ACTIONS.UPDATE_PUBLICATION_FAIL,err))\n      })\n        \n\n        \n         \n          return state\n        }\n        case ACTIONS.UPLOAD_PRESENTATION_IMAGE_SUCCESS:{\n          let postImageRef = storage.ref('posts/'+action.payload.image.name).put(action.payload.image);\n          postImageRef.on('state_changed',(snapshot)=>{\n            //progress function\n          },(error)=>{\n            //error\n            console.log(error)\n          },()=>{\n            //complete\n            storage.ref('/posts').child(action.payload.image.name).getDownloadURL().then(url=>{\n              console.log(url)\n              action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION,action.payload.albumID))\n            })\n          })\n          return state\n        }\n        case ACTIONS.UPLOAD_PRESENTATION_IMAGE_FAIL:{\n          return state\n        }\n        case ACTIONS.UPDATE_PRESENTATION_IMAGE:{\n          console.log(action)\n          let image = ''\n          if(action.submitted.cover === \"frontCover\") {\n            image = {\n              frontCover:action.json.data.filename,\n              frontCaption:action.submitted.caption \n            }\n          } else {\n            image = {\n              backCover:action.json.data.filename,\n              backCaption:action.submitted.caption \n            }\n          }\n          action.asyncDispatch(mainAction( ACTIONS.UPDATE_PUBLICATION,image))\n          return state\n        }\n      case ACTIONS.UPDATE_CAPTION:{\n        let stateCopy = _.cloneDeep(action.payload)\n        let image = {\n          albumID: action.payload.albumID,\n          caption: action.payload.caption ? action.payload.caption :\"\",\n          cover: action.payload.cover ? action.payload.cover:\"\",\n        }\n        let presentation= {}\n        if(action.payload.cover === \"frontCover\"){\n         presentation = {\n           frontCover : action.payload.image.name,\n           frontCaption:action.payload.caption ? action.payload.caption :\"\",\n         }\n        } else {\n          presentation = {\n            backCover : action.payload.image.name,\n            backCaption:action.payload.caption ? action.payload.caption :\"\",\n          }\n        }\n        db.collection(\"presentations\")\n    .where(\"id\", \"==\", stateCopy.albumID).get()\n    .then((querySnapshot)=>{\n      let _id=''\n      const data = querySnapshot.docs.map(doc =>{\n       _id = doc.ref.id\n        return  doc.data()\n      })\n      stateCopy._id = _id\n\n      db.collection(\"presentations\").doc(_id)\n      .update(presentation).then(()=>{   \n        action.asyncDispatch(mainAction(ACTIONS.UPDATE_CAPTION_SUCCESS,action.payload))\n      });\n     })\n    .catch((err)=>{\n      action.asyncDispatch(mainAction(ACTIONS.UPDATE_CAPTION_FAIL,err))\n    })\n        return state\n      }\n      case ACTIONS.UPDATE_CAPTION_SUCCESS:{\n        return state\n      }\n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}