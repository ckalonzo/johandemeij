{"ast":null,"code":"import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";var initialState={};export default function postsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.LOAD_POSTS:{fetch('http://localhost:5020/api/loadPosts').then(function(data){return data.json();}).then(function(res){action.asyncDispatch(mainAction(ACTIONS.LOAD_POSTS_SUCCESS,res.data));}).catch(function(err){return action.asyncDispatch(mainAction(ACTIONS.LOAD_POSTS_FAIL,err));});return state;}case ACTIONS.LOAD_POSTS_SUCCESS:{var stateCopy=action.payload;var imageName=[];fetch('http://localhost:5020/api/loadPostImages').then(function(data){return data.json();}).then(function(res){action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_IMAGES_SUCCESS,res.data));imageName=stateCopy.map(function(post){post.image=Object.values(res.data).filter(function(image){return image.albumID===post.ID;}).map(function(postImage){return postImage;});});}).catch(function(err){return action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_IMAGES_FAIL,err));});return stateCopy;}case ACTIONS.LOAD_POSTS_FAIL:{return state;}case ACTIONS.LOAD_DASHBOARD_POSTS:{fetch('http://localhost:5020/api/loadAllPosts').then(function(data){return data.json();}).then(function(res){action.asyncDispatch(mainAction(ACTIONS.LOAD_DASHBOARD_POSTS_SUCCESS,res.data));}).catch(function(err){return action.asyncDispatch(mainAction(ACTIONS.LOAD_DASHBOARD_POSTS_FAIL,err));});return state;}case ACTIONS.LOAD_DASHBOARD_POSTS_SUCCESS:{var _stateCopy=action.payload;var _imageName=[];fetch('http://localhost:5020/api/loadPostImages').then(function(data){return data.json();}).then(function(res){action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_IMAGES_SUCCESS,res.data));_imageName=_stateCopy.map(function(post){post.image=Object.values(res.data).filter(function(image){return image.albumID===post.ID;}).map(function(postImage){return postImage;});});}).catch(function(err){return action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_IMAGES_FAIL,err));});return _stateCopy;}case ACTIONS.LOAD_DASHBOARD_POSTS_FAIL:{return state;}default:return state;}}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/posts.reducer.js"],"names":["ACTIONS","mainAction","initialState","postsReducer","state","action","type","LOAD_POSTS","fetch","then","data","json","res","asyncDispatch","LOAD_POSTS_SUCCESS","catch","err","LOAD_POSTS_FAIL","stateCopy","payload","imageName","LOAD_POST_IMAGES_SUCCESS","map","post","image","Object","values","filter","albumID","ID","postImage","LOAD_POST_IMAGES_FAIL","LOAD_DASHBOARD_POSTS","LOAD_DASHBOARD_POSTS_SUCCESS","LOAD_DASHBOARD_POSTS_FAIL"],"mappings":"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","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\n\nconst initialState = {};\nexport default function postsReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_POSTS: {\n        \n       fetch('http://localhost:5020/api/loadPosts')\n        .then((data) => data.json())\n        .then((res) => {\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_POSTS_SUCCESS,res.data))\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_POSTS_FAIL,err)))\n       \n        return state\n      }\n      case ACTIONS.LOAD_POSTS_SUCCESS: {\n        let stateCopy = action.payload\n        let imageName = []\n        fetch('http://localhost:5020/api/loadPostImages')\n            .then((data) => data.json())\n            .then((res) => {\n              action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_IMAGES_SUCCESS,res.data))\n              imageName = stateCopy.map(post => {\n                post.image = Object.values(res.data).filter(image => image.albumID === post.ID).map(postImage =>{\n                  return postImage\n                })\n  \n              })\n            }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_IMAGES_FAIL,err)))\n            \n        return stateCopy\n      }\n      case ACTIONS.LOAD_POSTS_FAIL: {\n\n        return state\n      }\n      case ACTIONS.LOAD_DASHBOARD_POSTS: {\n        \n        fetch('http://localhost:5020/api/loadAllPosts')\n         .then((data) => data.json())\n         .then((res) => {\n           action.asyncDispatch(mainAction(ACTIONS.LOAD_DASHBOARD_POSTS_SUCCESS,res.data))\n         }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_DASHBOARD_POSTS_FAIL,err)))\n        \n         return state\n       }\n       case ACTIONS.LOAD_DASHBOARD_POSTS_SUCCESS: {\n         let stateCopy = action.payload\n         let imageName = []\n         fetch('http://localhost:5020/api/loadPostImages')\n             .then((data) => data.json())\n             .then((res) => {\n               action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_IMAGES_SUCCESS,res.data))\n               imageName = stateCopy.map(post => {\n                 post.image = Object.values(res.data).filter(image => image.albumID === post.ID).map(postImage =>{\n                   return postImage\n                 })\n   \n               })\n             }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_IMAGES_FAIL,err)))\n             \n         return stateCopy\n       }\n       case ACTIONS.LOAD_DASHBOARD_POSTS_FAIL: {\n \n         return state\n       }\n      default: \n        return state\n        \n    }\n  }"]},"metadata":{},"sourceType":"module"}