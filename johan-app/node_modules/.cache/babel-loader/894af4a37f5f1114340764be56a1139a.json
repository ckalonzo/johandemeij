{"ast":null,"code":"import { ACTIONS } from 'redux/actions/types.js';\nimport { mainAction } from \"redux/actions/index.actions\";\nimport { db } from \"../../firebase\";\nimport _ from 'lodash';\nconst initialState = {};\nexport default function catalogueReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.LOAD_MUSIC_CATALOGUE:\n      {\n        db.collection(\"musicalbums\").get().then(querySnapshot => {\n          const data = querySnapshot.docs.map(doc => doc.data());\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_CATALOGUE_SUCCESS, data));\n        });\n        return state;\n      }\n\n    case ACTIONS.LOAD_MUSIC_CATALOGUE_SUCCESS:\n      {\n        return action.payload;\n      }\n\n    case ACTIONS.LOAD_MUSIC_CATALOGUE_FAIL:\n      {\n        return state;\n      }\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/musicCatalogue.reducer.js"],"names":["ACTIONS","mainAction","db","_","initialState","catalogueReducer","state","action","type","LOAD_MUSIC_CATALOGUE","collection","get","then","querySnapshot","data","docs","map","doc","asyncDispatch","LOAD_MUSIC_CATALOGUE_SUCCESS","payload","LOAD_MUSIC_CATALOGUE_FAIL"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,EAAT,QAAmB,gBAAnB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,MAAMC,YAAY,GAAG,EAArB;AACA,eAAe,SAASC,gBAAT,CAA2BC,KAAK,GAAGF,YAAnC,EAAiDG,MAAjD,EAAyD;AACpE,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKR,OAAO,CAACS,oBAAb;AAAmC;AACnCP,QAAAA,EAAE,CAACQ,UAAH,CAAc,aAAd,EACCC,GADD,GAECC,IAFD,CAEMC,aAAa,IAAI;AACrB,gBAAMC,IAAI,GAAGD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAuBC,GAAG,IAAIA,GAAG,CAACH,IAAJ,EAA9B,CAAb;AACAP,UAAAA,MAAM,CAACW,aAAP,CAAqBjB,UAAU,CAACD,OAAO,CAACmB,4BAAT,EAAsCL,IAAtC,CAA/B;AACD,SALD;AAQE,eAAOR,KAAP;AACD;;AACD,SAAKN,OAAO,CAACmB,4BAAb;AAA2C;AACzC,eAAOZ,MAAM,CAACa,OAAd;AACD;;AACD,SAAKpB,OAAO,CAACqB,yBAAb;AAAwC;AAEtC,eAAOf,KAAP;AACD;;AAED;AACE,aAAO,EACL,GAAGA;AADE,OAAP;AAtBJ;AA0BD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { db } from \"../../firebase\";\nimport _ from 'lodash'\nconst initialState = {};\nexport default function catalogueReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_MUSIC_CATALOGUE: {\n      db.collection(\"musicalbums\")\n      .get()\n      .then(querySnapshot => {\n        const data = querySnapshot.docs.map(doc => doc.data());\n        action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_CATALOGUE_SUCCESS,data))\n      });\n\n\n        return state\n      }\n      case ACTIONS.LOAD_MUSIC_CATALOGUE_SUCCESS: {\n        return action.payload\n      }\n      case ACTIONS.LOAD_MUSIC_CATALOGUE_FAIL: {\n\n        return state\n      }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}