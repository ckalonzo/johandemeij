{"ast":null,"code":"import _objectSpread from\"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";import{db,database}from\"../../firebase\";var initialState={};export default function concertInformationReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.SUBMIT_CONCERT_INFORMATION:{var stateCopy=action.payload;var _submissionRef=database.ref('submissions');_submissionRef.child(stateCopy.id).set(action.payload).then(function(){action.asyncDispatch(mainAction(ACTIONS.SUBMIT_CONCERT_INFORMATION_SUCCESS,action.payload));}).catch(function(){action.asyncDispatch(mainAction(ACTIONS.SUBMIT_CONCERT_INFORMATION_FAIL,{error:\"could not create submission\"}));});return state;}case ACTIONS.SUBMIT_CONCERT_INFORMATION_SUCCESS:{return action.payload;}case ACTIONS.SUBMIT_CONCERT_INFORMATION_FAIL:{return state;}case ACTIONS.LOAD_SUBMISSIONS:{var submissionRef=database.ref('submissions');submissionRef.on('value',function(snap,i){var data=snap.val();var submissions=[];Object.values(data).map(function(submission){submissions.push(submission);});action.asyncDispatch(mainAction(ACTIONS.LOAD_SUBMISSIONS_SUCCESS,submissions));});return state;}case ACTIONS.LOAD_SUBMISSIONS_SUCCESS:{return _objectSpread({},action.payload);}case ACTIONS.LOAD_SUBMISSIONS_FAIL:{return state;}case ACTIONS.LOAD_SUBMISSION:{var submissionRef=database.ref('submissions/'+action.payload);submissionRef.on('value',function(snap,i){var data=snap.val();action.asyncDispatch(mainAction(ACTIONS.LOAD_SUBMISSION_SUCCESS,data));});return state;}case ACTIONS.LOAD_SUBMISSION_SUCCESS:{return action.payload;}case ACTIONS.LOAD_SUBMISSION_FAIL:{return state;}default:return _objectSpread({},state);}}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/concertInfomation.reducer.js"],"names":["ACTIONS","mainAction","db","database","initialState","concertInformationReducer","state","action","type","SUBMIT_CONCERT_INFORMATION","stateCopy","payload","submissionRef","ref","child","id","set","then","asyncDispatch","SUBMIT_CONCERT_INFORMATION_SUCCESS","catch","SUBMIT_CONCERT_INFORMATION_FAIL","error","LOAD_SUBMISSIONS","on","snap","i","data","val","submissions","Object","values","map","submission","push","LOAD_SUBMISSIONS_SUCCESS","LOAD_SUBMISSIONS_FAIL","LOAD_SUBMISSION","LOAD_SUBMISSION_SUCCESS","LOAD_SUBMISSION_FAIL"],"mappings":"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","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { db , database } from \"../../firebase\";\nconst initialState = {};\nexport default function concertInformationReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.SUBMIT_CONCERT_INFORMATION: {\n     let stateCopy = action.payload\n     \n      const submissionRef = database.ref('submissions')\n      submissionRef.child(stateCopy.id).set(action.payload).then(()=>{\n        action.asyncDispatch(mainAction(ACTIONS.SUBMIT_CONCERT_INFORMATION_SUCCESS,action.payload))\n      })\n      .catch(()=>{\n        action.asyncDispatch(mainAction(ACTIONS.SUBMIT_CONCERT_INFORMATION_FAIL,{error:\"could not create submission\"}))\n      });\n        return state\n      }\n      case ACTIONS.SUBMIT_CONCERT_INFORMATION_SUCCESS: {\n\n        return action.payload\n      }\n      case ACTIONS.SUBMIT_CONCERT_INFORMATION_FAIL: {\n\n        return state\n      }\n      case ACTIONS.LOAD_SUBMISSIONS: {\n\n     var submissionRef = database.ref('submissions')\n     submissionRef.on('value',(snap,i)=>{\n    \n      const data = snap.val()\n      let submissions =[]\n      Object.values(data).map(submission=>{\n        submissions.push(submission)\n      })\n      action.asyncDispatch(mainAction(ACTIONS.LOAD_SUBMISSIONS_SUCCESS,submissions))\n      })\n     \n        return state\n      }\n      case ACTIONS.LOAD_SUBMISSIONS_SUCCESS: {\n        return {...action.payload}\n      }\n      case ACTIONS.LOAD_SUBMISSIONS_FAIL: {\n\n        return state\n      }\n      case ACTIONS.LOAD_SUBMISSION: {\n       \n        var submissionRef = database.ref('submissions/'+action.payload)\n        submissionRef.on('value',(snap,i)=>{\n        \n        const data = snap.val()\n         action.asyncDispatch(mainAction(ACTIONS.LOAD_SUBMISSION_SUCCESS,data))\n        })\n        return state\n      }\n      case ACTIONS.LOAD_SUBMISSION_SUCCESS: {\n\n        return action.payload\n      }\n      case ACTIONS.LOAD_SUBMISSION_FAIL: {\n\n        return state\n      }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}