{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/components/dashboard/NewCd.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Form, Container, Row, Col, Button } from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport SideNav from \"components/dashboard/SideNav\";\nimport { mainAction } from \"redux/actions/index.actions\";\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport _ from \"lodash\";\nimport CdImage from \"components/dashboard/CdImage\";\n\nconst NewCd = props => {\n  const [validated, setValidated] = useState(false);\n  const [field_cd_name, setcd_name] = useState(props.cd.cd_name);\n  const [field_synopsis, setSynopsis] = useState(props.cd.synopsis);\n  const [field_totalTime, setTotalTime] = useState(props.cd.totalTime);\n  const [field_category, setCategory] = useState(props.cd.category);\n  const [field_addInfo, setAddInfo] = useState(props.cd.add_info);\n  useEffect(() => {\n    // Update the document title using the browser API\n    window.scrollTo(0, 0);\n    props.actions.mainAction(ACTIONS.LOAD_ALL_PRESENTATIONS, []);\n    let cdId = props.match.params.id;\n    if (cdId) props.actions.mainAction(ACTIONS.LOAD_CD, cdId);\n    props.actions.mainAction(ACTIONS.LOAD_CDS, []);\n    props.actions.mainAction(ACTIONS.LOAD_CD_INFO, cdId); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let testArray = [];\n    let id = (+props.lastCdId[0].id + 1).toString();\n    let cdItem = {\n      id,\n      cd_name: field_cd_name,\n      synopsis: field_synopsis,\n      category: field_category,\n      add_info: field_addInfo,\n      totalTime: field_totalTime\n    };\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n    props.actions.mainAction(ACTIONS.CREATE_NEW_CD, cdItem);\n    props.history.push('/dashboard/cds/edit/' + id);\n    console.log(cdItem);\n  };\n\n  const handleUpdate = async event => {\n    event.preventDefault();\n    let cdItem = {\n      _id: props.cd._id,\n      cd_name: document.getElementById('cd_name').value,\n      synopsis: field_synopsis,\n      totalTime: document.getElementById('totalTime').value,\n      category: document.getElementById('category').value,\n      add_info: document.getElementById('add-info').value\n    };\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n    props.actions.mainAction(ACTIONS.UPDATE_CD, cdItem);\n  };\n\n  const renderCdImage = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CdImage, {\n      docId: props.cd._id,\n      ID: props.cd.id,\n      image: props.cd.cdImage,\n      caption: \"\",\n      type: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(CdImage, {\n      docId: props.cd._id,\n      ID: props.cd.id,\n      image: props.cd.frontCover,\n      caption: props.cd.frontCaption,\n      type: \"front\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(CdImage, {\n      docId: props.cd._id,\n      ID: props.cd.id,\n      image: props.cd.backCover,\n      caption: props.cd.backCaption,\n      type: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 1\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    className: \"dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SideNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }), \"TEST\"), /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: \"10\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, Object.keys(props.cd).length > 0 ? renderCdImage() : '', /*#__PURE__*/React.createElement(\"section\", {\n    id: \"product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: Object.keys(props.cd).length > 0 ? handleUpdate : handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"cd_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 22\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: props.cd.cd_name,\n    onChange: e => setcd_name(e.target.value),\n    onBlur: e => setcd_name(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, \"Please provide a name.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, \"Looks good!\")))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    as: \"select\",\n    onChange: e => setCategory(e.target.value),\n    onBlur: e => setCategory(e.target.value),\n    defaultValue: props.cd.category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, props.cd.category > 0 ? /*#__PURE__*/React.createElement(\"option\", {\n    value: props.cd.category,\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 46\n    }\n  }, props.categories.filter(category => category.id === parseInt(props.cd.category, 10)).map(category => category.name)) : \"\", props.categories.map(category => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: category.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 32\n      }\n    }, category.name);\n  })), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, \"Please provide a video.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"totalTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, \"Total Time\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: props.cd.totalTime,\n    onChange: e => setTotalTime(e.target.value),\n    onBlur: e => setTotalTime(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, \"Please provide a video.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, \"Looks good!\")))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"add-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 34\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, \"Additional info\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"textarea\",\n    rows: \"3\",\n    placeholder: \"\",\n    defaultValue: props.cd.add_info,\n    onChange: e => setAddInfo(e.target.value),\n    onBlur: e => setAddInfo(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, \"Please provide a video.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, \"Looks good!\")))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"synopsis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CKEditor, {\n    editor: ClassicEditor,\n    data: props.cd.synopsis ? props.cd.synopsis : field_synopsis,\n    toolbar: ('heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote'),\n    onInit: editor => {// You can store the \"editor\" and use when it is needed.\n      // console.log( 'Editor is ready to use!', editor );\n    },\n    onChange: (event, editor) => {\n      const data = editor.getData(); // console.log( { event, editor, data } );\n\n      setSynopsis(data);\n    },\n    onBlur: (event, editor) => {\n      const data = editor.getData();\n      console.log('Blur.', editor);\n      setSynopsis(data);\n    },\n    onFocus: (event, editor) => {\n      console.log('Focus.', editor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, Object.keys(props.cd).length > 0 ? \"Update CD\" : \"Create CD\")))))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    allPresentations: state.AllPresentationsReducer,\n    categories: state.musicReducer.categories,\n    cd: state.cdReducer,\n    allCds: state.cdsReducer,\n    lastCdId: _.orderBy(state.cdsReducer, \"id\", \"desc\").map((cd, i) => {\n      return i === 0 ? cd : \"\";\n    })\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      mainAction\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCd);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/components/dashboard/NewCd.jsx"],"names":["React","useEffect","useState","connect","bindActionCreators","Form","Container","Row","Col","Button","ACTIONS","SideNav","mainAction","CKEditor","ClassicEditor","_","CdImage","NewCd","props","validated","setValidated","field_cd_name","setcd_name","cd","cd_name","field_synopsis","setSynopsis","synopsis","field_totalTime","setTotalTime","totalTime","field_category","setCategory","category","field_addInfo","setAddInfo","add_info","window","scrollTo","actions","LOAD_ALL_PRESENTATIONS","cdId","match","params","id","LOAD_CD","LOAD_CDS","LOAD_CD_INFO","handleSubmit","event","preventDefault","testArray","lastCdId","toString","cdItem","form","currentTarget","checkValidity","stopPropagation","CREATE_NEW_CD","history","push","console","log","handleUpdate","_id","document","getElementById","value","UPDATE_CD","renderCdImage","cdImage","frontCover","frontCaption","backCover","backCaption","span","Object","keys","length","e","target","categories","filter","parseInt","map","name","editor","data","getData","mapStateToProps","state","allPresentations","AllPresentationsReducer","musicReducer","cdReducer","allCds","cdsReducer","orderBy","i","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Form, Container, Row, Col, Button} from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport SideNav from \"components/dashboard/SideNav\";\nimport { mainAction } from \"redux/actions/index.actions\"\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport _ from \"lodash\"\nimport CdImage from \"components/dashboard/CdImage\"\nconst NewCd = props => {\n  const [validated, setValidated] = useState(false);\n  const [field_cd_name,setcd_name] = useState(props.cd.cd_name)\n  const [field_synopsis,setSynopsis] = useState(props.cd.synopsis)\n  const [field_totalTime,setTotalTime] = useState(props.cd.totalTime)\n  const [field_category,setCategory] = useState(props.cd.category)\n  const [field_addInfo,setAddInfo] = useState(props.cd.add_info)\n\n\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    window.scrollTo(0,0)\n    props.actions.mainAction(ACTIONS.LOAD_ALL_PRESENTATIONS,[])\n   let cdId = props.match.params.id\n    if(cdId)\n    props.actions.mainAction(ACTIONS.LOAD_CD,cdId)\n    props.actions.mainAction(ACTIONS.LOAD_CDS,[])\n    props.actions.mainAction(ACTIONS.LOAD_CD_INFO,cdId)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const handleSubmit = event => {\n    event.preventDefault();\n    let testArray = []\n   \n    let id = (+props.lastCdId[0].id+1).toString()\n    let cdItem = {\n        id,\n        cd_name:field_cd_name,\n        synopsis:field_synopsis,\n        category:field_category,\n        add_info:field_addInfo,\n        totalTime:field_totalTime\n    }\n\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    setValidated(true);\n   props.actions.mainAction(ACTIONS.CREATE_NEW_CD,cdItem)\n    props.history.push('/dashboard/cds/edit/'+id)\n   console.log(cdItem)\n  };\n  const handleUpdate = async event => {\n    event.preventDefault();\n    let cdItem = {\n        _id:props.cd._id,\n        cd_name:document.getElementById('cd_name').value,\n        synopsis:field_synopsis,\n        totalTime:document.getElementById('totalTime').value,\n        category:document.getElementById('category').value,\n        add_info:document.getElementById('add-info').value\n    }\n\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    setValidated(true);\n    props.actions.mainAction(ACTIONS.UPDATE_CD,cdItem)\n  }\n  const renderCdImage = () => {\n      return (<>\n<CdImage docId={props.cd._id} ID={props.cd.id} image={props.cd.cdImage}  caption=\"\" type=\"main\" />\n<CdImage docId={props.cd._id} ID={props.cd.id} image={props.cd.frontCover} caption={props.cd.frontCaption} type=\"front\" />\n<CdImage docId={props.cd._id} ID={props.cd.id} image={props.cd.backCover} caption={props.cd.backCaption} type=\"back\" />\n      </>)\n  }\n\n  return (\n    <>\n      <Container className=\"dashboard\">\n        <Row>\n          \n          <Col lg={{ span: 2 }}>\n              <SideNav />TEST\n          </Col>\n          <Col lg={{span:\"10\" }}> \n          \n          {Object.keys(props.cd).length > 0 ? renderCdImage():''}\n            <section id=\"product\">\n              <Form noValidate validated={validated} onSubmit={Object.keys(props.cd).length > 0 ?handleUpdate :handleSubmit}>\n              <Form.Row><Col lg=\"12\">\n                  <Form.Group as={Col}  controlId=\"cd_name\">\n                     <Form.Label>Name</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"\"\n                      defaultValue={props.cd.cd_name}\n                      onChange={e => setcd_name(e.target.value)}\n                      onBlur={e => setcd_name(e.target.value)}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a name.\n                      </Form.Control.Feedback>\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Form.Group></Col>\n                  </Form.Row> \n                \n                <Form.Row>\n                    <Col lg=\"6\"><Form.Group as={Col} controlId=\"category\">\n                    <Form.Label>Category</Form.Label>\n                    <Form.Control\n                      required\n                      as=\"select\"\n                      onChange={e => setCategory(e.target.value)}\n                      onBlur={e => setCategory(e.target.value)}\n                      defaultValue={props.cd.category}\n                    >\n                    {props.cd.category > 0 ? <option value={props.cd.category} selected>{props.categories.filter(category => category.id === parseInt(props.cd.category,10)).map(category => category.name)}</option> : \"\"}\n                    {props.categories.map(category=>{\n                        return <option value={category.id}>{category.name}</option>\n                    })}\n                        \n                    </Form.Control>\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a video.\n                      </Form.Control.Feedback>\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Form.Group></Col>\n                    <Col lg=\"6\"><Form.Group as={Col} controlId=\"totalTime\">\n                    <Form.Label>Total Time</Form.Label>\n                     <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"\"\n                      defaultValue={props.cd.totalTime}\n                      onChange={e => setTotalTime(e.target.value)}\n                      onBlur={e => setTotalTime(e.target.value)}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a video.\n                      </Form.Control.Feedback>\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Form.Group></Col>\n                  \n                  \n                </Form.Row>\n                <Form.Row>\n                    \n                    <Col lg=\"12\"><Form.Group as={Col} controlId=\"add-info\">\n                    <Form.Label>Additional info</Form.Label>\n                   \n                     <Form.Control\n                      required\n                      type=\"textarea\"\n                      rows=\"3\"\n                      placeholder=\"\"\n                      defaultValue={props.cd.add_info}\n                      onChange={e => setAddInfo(e.target.value)}\n                      onBlur={e => setAddInfo(e.target.value)}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a video.\n                      </Form.Control.Feedback>\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Form.Group></Col>\n                  \n                  \n                </Form.Row>\n                <Form.Row>\n                  <Col>\n                  <Form.Group as={Col} controlId=\"synopsis\">\n                    <CKEditor\n                        editor={ ClassicEditor }\n                        data={props.cd.synopsis ? props.cd.synopsis: field_synopsis}\n                        toolbar= {'heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote' }\n                        onInit={ editor => {\n                            // You can store the \"editor\" and use when it is needed.\n                           // console.log( 'Editor is ready to use!', editor );\n                        } }\n                        onChange={ ( event, editor ) => {\n                            const data = editor.getData();\n                           // console.log( { event, editor, data } );\n                           setSynopsis(data)\n                        } }\n                        onBlur={ ( event, editor ) => {\n                          const data = editor.getData();\n                            console.log( 'Blur.', editor );\n                            setSynopsis(data)\n                        } }\n                        onFocus={ ( event, editor ) => {\n                            console.log( 'Focus.', editor );\n                        } }\n                    />\n                  </Form.Group>\n                  </Col>\n                  </Form.Row>\n                <Button type=\"submit\">{Object.keys(props.cd).length > 0 ?\"Update CD\" :\"Create CD\"}</Button>\n              </Form> \n            </section>\n          </Col>\n        </Row> \n      </Container>\n    </>\n  );\n};\nfunction mapStateToProps(state) {\n    \n  return {\n    allPresentations:state.AllPresentationsReducer,\n    categories:state.musicReducer.categories,\n    cd:state.cdReducer,\n    allCds:state.cdsReducer,\n    lastCdId:_.orderBy(state.cdsReducer,\"id\",\"desc\").map((cd,i)=>{\n\n      return i === 0 ? cd:\"\"\n    })\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({mainAction}, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCd);\n"]},"metadata":{},"sourceType":"module"}