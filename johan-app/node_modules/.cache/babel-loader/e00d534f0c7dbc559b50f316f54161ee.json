{"ast":null,"code":"import { ACTIONS } from 'redux/actions/types.js';\nimport { mainAction } from \"redux/actions/index.actions\";\nimport _ from \"lodash\";\nconst initialState = {};\nexport default function postsReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.LOAD_POSTS:\n      {\n        fetch('http://localhost:3001/api/loadPosts').then(data => data.json()).then(res => {\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_POSTS_SUCCESS, res.data));\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_POSTS_FAIL, err)));\n        return state;\n      }\n\n    case ACTIONS.LOAD_POSTS_SUCCESS:\n      {\n        let stateCopy = [];\n        let postImages = [];\n        fetch('http://localhost:3001/api/loadPostImages').then(data => data.json()).then(res => {\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_IMAGES_SUCCESS, res.data));\n          postImages = res.data;\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_IMAGES_FAIL, err)));\n        console.log(postImages);\n        return action.payload;\n      }\n\n    case ACTIONS.LOAD_POSTS_FAIL:\n      {\n        return state;\n      }\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johandemeij-master/johan-app/src/redux/reducers/posts.reducer.js"],"names":["ACTIONS","mainAction","_","initialState","postsReducer","state","action","type","LOAD_POSTS","fetch","then","data","json","res","asyncDispatch","LOAD_POSTS_SUCCESS","catch","err","LOAD_POSTS_FAIL","stateCopy","postImages","LOAD_POST_IMAGES_SUCCESS","LOAD_POST_IMAGES_FAIL","console","log","payload"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,eAAe,SAASC,YAAT,CAAuBC,KAAK,GAAGF,YAA/B,EAA6CG,MAA7C,EAAqD;AAChE,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKP,OAAO,CAACQ,UAAb;AAAyB;AAExBC,QAAAA,KAAK,CAAC,qCAAD,CAAL,CACEC,IADF,CACQC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADjB,EAEEF,IAFF,CAEQG,GAAD,IAAS;AAIbP,UAAAA,MAAM,CAACQ,aAAP,CAAqBb,UAAU,CAACD,OAAO,CAACe,kBAAT,EAA4BF,GAAG,CAACF,IAAhC,CAA/B;AACD,SAPF,EAOIK,KAPJ,CAOUC,GAAG,IAAIX,MAAM,CAACQ,aAAP,CAAqBb,UAAU,CAACD,OAAO,CAACkB,eAAT,EAAyBD,GAAzB,CAA/B,CAPjB;AASC,eAAOZ,KAAP;AACD;;AACD,SAAKL,OAAO,CAACe,kBAAb;AAAiC;AAC/B,YAAII,SAAS,GAAG,EAAhB;AACA,YAAIC,UAAU,GAAG,EAAjB;AACAX,QAAAA,KAAK,CAAC,0CAAD,CAAL,CACKC,IADL,CACWC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADpB,EAEKF,IAFL,CAEWG,GAAD,IAAS;AAEbP,UAAAA,MAAM,CAACQ,aAAP,CAAqBb,UAAU,CAACD,OAAO,CAACqB,wBAAT,EAAkCR,GAAG,CAACF,IAAtC,CAA/B;AAEAS,UAAAA,UAAU,GAAGP,GAAG,CAACF,IAAjB;AACD,SAPL,EAOOK,KAPP,CAOaC,GAAG,IAAIX,MAAM,CAACQ,aAAP,CAAqBb,UAAU,CAACD,OAAO,CAACsB,qBAAT,EAA+BL,GAA/B,CAA/B,CAPpB;AAQIM,QAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AAGJ,eAAOd,MAAM,CAACmB,OAAd;AACD;;AACD,SAAKzB,OAAO,CAACkB,eAAb;AAA8B;AAE5B,eAAOb,KAAP;AACD;;AAED;AACE,aAAO,EACL,GAAGA;AADE,OAAP;AArCJ;AAyCD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport _ from \"lodash\"\n\nconst initialState = {};\nexport default function postsReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_POSTS: {\n        \n       fetch('http://localhost:3001/api/loadPosts')\n        .then((data) => data.json())\n        .then((res) => {\n          \n           \n\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_POSTS_SUCCESS,res.data))\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_POSTS_FAIL,err)))\n       \n        return state\n      }\n      case ACTIONS.LOAD_POSTS_SUCCESS: {\n        let stateCopy = []\n        let postImages = [];\n        fetch('http://localhost:3001/api/loadPostImages')\n            .then((data) => data.json())\n            .then((res) => {\n              \n              action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_IMAGES_SUCCESS,res.data))\n\n              postImages = res.data\n            }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_IMAGES_FAIL,err)))\n            console.log(postImages)\n\n\n        return action.payload\n      }\n      case ACTIONS.LOAD_POSTS_FAIL: {\n\n        return state\n      }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}