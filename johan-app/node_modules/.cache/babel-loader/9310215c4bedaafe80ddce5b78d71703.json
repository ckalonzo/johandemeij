{"ast":null,"code":"import { ACTIONS } from 'redux/actions/types.js';\nimport { mainAction } from \"redux/actions/index.actions\";\nconst initialState = {\n  categories: [\"Compositions\", \"Amstel Classics\", \"Music for the Theatre\", \"Symphony Orchestra\", \"The Music of S&oslash;ren Hyldgaard\", \"Solo Concertos\"]\n};\nexport default function musicReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.LOAD_MUSIC:\n      {\n        fetch('http://localhost:3001/api/loadMusic').then(data => data.json()).then(res => {\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_SUCCESS, res.data));\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_FAIL, err)));\n        return state;\n      }\n\n    case ACTIONS.LOAD_MUSIC_SUCCESS:\n      {\n        return action.payload;\n      }\n\n    case ACTIONS.LOAD_MUSIC_FAIL:\n      {\n        return state;\n      }\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johandemeij-master/johan-app/src/redux/reducers/music.reducer.js"],"names":["ACTIONS","mainAction","initialState","categories","musicReducer","state","action","type","LOAD_MUSIC","fetch","then","data","json","res","asyncDispatch","LOAD_MUSIC_SUCCESS","catch","err","LOAD_MUSIC_FAIL","payload"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAC,CAAC,cAAD,EAAgB,iBAAhB,EAAkC,uBAAlC,EAA0D,oBAA1D,EAA+E,qCAA/E,EAAqH,gBAArH;AADM,CAArB;AAGA,eAAe,SAASC,YAAT,CAAuBC,KAAK,GAAGH,YAA/B,EAA6CI,MAA7C,EAAqD;AAChE,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKP,OAAO,CAACQ,UAAb;AAAyB;AACxBC,QAAAA,KAAK,CAAC,qCAAD,CAAL,CACEC,IADF,CACQC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADjB,EAEEF,IAFF,CAEQG,GAAD,IAAS;AACbP,UAAAA,MAAM,CAACQ,aAAP,CAAqBb,UAAU,CAACD,OAAO,CAACe,kBAAT,EAA4BF,GAAG,CAACF,IAAhC,CAA/B;AACD,SAJF,EAIIK,KAJJ,CAIUC,GAAG,IAAIX,MAAM,CAACQ,aAAP,CAAqBb,UAAU,CAACD,OAAO,CAACkB,eAAT,EAAyBD,GAAzB,CAA/B,CAJjB;AAMC,eAAOZ,KAAP;AACD;;AACD,SAAKL,OAAO,CAACe,kBAAb;AAAiC;AAC/B,eAAOT,MAAM,CAACa,OAAd;AACD;;AACD,SAAKnB,OAAO,CAACkB,eAAb;AAA8B;AAE5B,eAAOb,KAAP;AACD;;AAED;AACE,aAAO,EACL,GAAGA;AADE,OAAP;AApBJ;AAwBD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\n\nconst initialState = {\n    categories:[\"Compositions\",\"Amstel Classics\",\"Music for the Theatre\",\"Symphony Orchestra\",\"The Music of S&oslash;ren Hyldgaard\",\"Solo Concertos\"]\n};\nexport default function musicReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_MUSIC: {\n       fetch('http://localhost:3001/api/loadMusic')\n        .then((data) => data.json())\n        .then((res) => {\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_SUCCESS,res.data))\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_FAIL,err)))\n\n        return state\n      }\n      case ACTIONS.LOAD_MUSIC_SUCCESS: {\n        return action.payload\n      }\n      case ACTIONS.LOAD_MUSIC_FAIL: {\n\n        return state\n      }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}