{"ast":null,"code":"import { ACTIONS } from 'redux/actions/types.js';\nimport { mainAction } from \"redux/actions/index.actions\";\nconst initialState = {};\nexport default function cdsReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.LOAD_CDS:\n      {\n        fetch(' https://johandemeji.com/api/loadCds').then(data => data.json()).then(res => {\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_CDS_SUCCESS, res.data));\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_CDS_FAIL, err)));\n        return state;\n      }\n\n    case ACTIONS.LOAD_CDS_SUCCESS:\n      {\n        return action.payload;\n      }\n\n    case ACTIONS.LOAD_CDS_FAIL:\n      {\n        return state;\n      }\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/cds.reducer.js"],"names":["ACTIONS","mainAction","initialState","cdsReducer","state","action","type","LOAD_CDS","fetch","then","data","json","res","asyncDispatch","LOAD_CDS_SUCCESS","catch","err","LOAD_CDS_FAIL","payload"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,eAAe,SAASC,UAAT,CAAqBC,KAAK,GAAGF,YAA7B,EAA2CG,MAA3C,EAAmD;AAC9D,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKN,OAAO,CAACO,QAAb;AAAuB;AACtBC,QAAAA,KAAK,CAAC,sCAAD,CAAL,CACEC,IADF,CACQC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADjB,EAEEF,IAFF,CAEQG,GAAD,IAAS;AACbP,UAAAA,MAAM,CAACQ,aAAP,CAAqBZ,UAAU,CAACD,OAAO,CAACc,gBAAT,EAA0BF,GAAG,CAACF,IAA9B,CAA/B;AACD,SAJF,EAIIK,KAJJ,CAIUC,GAAG,IAAIX,MAAM,CAACQ,aAAP,CAAqBZ,UAAU,CAACD,OAAO,CAACiB,aAAT,EAAuBD,GAAvB,CAA/B,CAJjB;AAMC,eAAOZ,KAAP;AACD;;AACD,SAAKJ,OAAO,CAACc,gBAAb;AAA+B;AAC7B,eAAOT,MAAM,CAACa,OAAd;AACD;;AACD,SAAKlB,OAAO,CAACiB,aAAb;AAA4B;AAE1B,eAAOb,KAAP;AACD;;AAED;AACE,aAAO,EACL,GAAGA;AADE,OAAP;AApBJ;AAwBD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\n\nconst initialState = {};\nexport default function cdsReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_CDS: {\n       fetch(' https://johandemeji.com/api/loadCds')\n        .then((data) => data.json())\n        .then((res) => {\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_CDS_SUCCESS,res.data))\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_CDS_FAIL,err)))\n\n        return state\n      }\n      case ACTIONS.LOAD_CDS_SUCCESS: {\n        return action.payload\n      }\n      case ACTIONS.LOAD_CDS_FAIL: {\n\n        return state\n      }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}