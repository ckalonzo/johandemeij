{"ast":null,"code":"import _objectSpread from\"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";import{db}from\"../../firebase\";import _ from\"lodash\";var initialState={};export default function catalogueReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.LOAD_MUSIC_CATALOGUE:{db.collection(\"musicalbums\").get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){return doc.data();});action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_CATALOGUE_SUCCESS,data));});return state;}case ACTIONS.LOAD_MUSIC_CATALOGUE_SUCCESS:{return action.payload;}case ACTIONS.LOAD_MUSIC_CATALOGUE_FAIL:{return state;}case ACTIONS.CREATE_CATALOGUE:{console.log(action);var stateCopy=_.cloneDeep(action.payload);db.collection(\"musicalbums\").add(stateCopy).then(function(docRef){console.log(docRef);stateCopy._id=docRef.id;action.asyncDispatch(mainAction(ACTIONS.CREATE_CATALOGUE_SUCCESS,stateCopy));});return state;}case ACTIONS.CREATE_CATALOGUE_SUCCESS:{return action.payload;}case ACTIONS.DELETE_CATALOGUE:{db.collection(\"musicalbums\").where('id','==',action.payload).get().then(function(querySnapshot){querySnapshot.forEach(function(doc){return doc.ref.delete();});action.asyncDispatch(mainAction(ACTIONS.DELETE_CATALOGUE_SUCCESS,[]));});return state;}case ACTIONS.DELETE_CATALOGUE_SUCCESS:{action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_CATALOGUE,[]));return state;}case ACTIONS.DELETE_CATALOGUE_FAIL:{return state;}case ACTIONS.LOAD_CATALOGUE:{db.collection(\"musicalbums\").where(\"id\",'==',action.payload).get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){return doc.data();});action.asyncDispatch(mainAction.apply(void 0,[ACTIONS.LOAD_CATALOGUE_SUCCESS].concat(_toConsumableArray(data))));});return state;}case ACTIONS.LOAD_CATALOGUE_SUCCESS:{return action.payload?action.payload:state;}case ACTIONS.LOAD_CATALOGUE_FAIL:{return state;}case ACTIONS.UPDATE_CATALOGUE:{var _stateCopy=_.cloneDeep(action.payload);var _id=console.log(_stateCopy.id);if(_stateCopy.id)db.collection(\"musicalbums\").where(\"id\",'==',_stateCopy.id).get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){_id=doc.id;return doc.data();});db.collection(\"musicalbums\").doc(_id).update(_stateCopy).then(function(){action.asyncDispatch(mainAction(ACTIONS.UPDATE_CATALOGUE_SUCCESS,_stateCopy));});});return state;}case ACTIONS.UPDATE_CATALOGUE_SUCCESS:{return state;}case ACTIONS.UPDATE_CATALOGUE_FAIL:{return state;}default:return _objectSpread({},state);}}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/musicCatalogue.reducer.js"],"names":["ACTIONS","mainAction","db","_","initialState","catalogueReducer","state","action","type","LOAD_MUSIC_CATALOGUE","collection","get","then","querySnapshot","data","docs","map","doc","asyncDispatch","LOAD_MUSIC_CATALOGUE_SUCCESS","payload","LOAD_MUSIC_CATALOGUE_FAIL","CREATE_CATALOGUE","console","log","stateCopy","cloneDeep","add","docRef","_id","id","CREATE_CATALOGUE_SUCCESS","DELETE_CATALOGUE","where","forEach","ref","delete","DELETE_CATALOGUE_SUCCESS","DELETE_CATALOGUE_FAIL","LOAD_CATALOGUE","LOAD_CATALOGUE_SUCCESS","LOAD_CATALOGUE_FAIL","UPDATE_CATALOGUE","update","UPDATE_CATALOGUE_SUCCESS","UPDATE_CATALOGUE_FAIL"],"mappings":"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","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { db } from \"../../firebase\";\nimport _ from \"lodash\"\nconst initialState = {};\nexport default function catalogueReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_MUSIC_CATALOGUE: {\n      db.collection(\"musicalbums\")\n      .get()\n      .then(querySnapshot => {\n        const data = querySnapshot.docs.map(doc => doc.data());\n        action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_CATALOGUE_SUCCESS,data))\n      });\n\n\n        return state\n      }\n      case ACTIONS.LOAD_MUSIC_CATALOGUE_SUCCESS: {\n        return action.payload\n      }\n      case ACTIONS.LOAD_MUSIC_CATALOGUE_FAIL: {\n\n        return state\n      }\n      case ACTIONS.CREATE_CATALOGUE:{\n        console.log(action)\n        let stateCopy = _.cloneDeep(action.payload)\n      \n        db.collection(\"musicalbums\")\n          .add(stateCopy)\n          .then(function(docRef){\n            console.log(docRef)\n            stateCopy._id = docRef.id\n            action.asyncDispatch(mainAction(ACTIONS.CREATE_CATALOGUE_SUCCESS,stateCopy))\n          });\n          return state\n      }\n      case ACTIONS.CREATE_CATALOGUE_SUCCESS: {\n        return action.payload\n      }\n      case ACTIONS.DELETE_CATALOGUE:{\n        db.collection(\"musicalbums\")\n        .where('id','==',action.payload)\n         .get()\n         .then((querySnapshot) => {\n           querySnapshot.forEach((doc)=> doc.ref.delete())\n           action.asyncDispatch(mainAction(ACTIONS.DELETE_CATALOGUE_SUCCESS,[]))\n         });\n        return state\n      }\n      case ACTIONS.DELETE_CATALOGUE_SUCCESS:{\n        action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_CATALOGUE,[]))\n        return state\n      }\n      case ACTIONS.DELETE_CATALOGUE_FAIL:{\n        return state\n      }\n      case ACTIONS.LOAD_CATALOGUE:{\n        db.collection(\"musicalbums\")\n        .where(\"id\",'==',action.payload)\n          .get()\n          .then(querySnapshot => {\n            const data = querySnapshot.docs.map(doc => doc.data());\n            action.asyncDispatch(mainAction(ACTIONS.LOAD_CATALOGUE_SUCCESS,...data))\n          });\n        return state\n      }\n      case ACTIONS.LOAD_CATALOGUE_SUCCESS:{\n        \n        return action.payload ? action.payload : state\n      }\n      case ACTIONS.LOAD_CATALOGUE_FAIL:{\n        return state\n      }\n      case ACTIONS.UPDATE_CATALOGUE:{\n        let stateCopy = _.cloneDeep(action.payload)\n        let _id = \n        console.log(stateCopy.id)\n        if(stateCopy.id)\n        db.collection(\"musicalbums\")\n        .where(\"id\",'==',stateCopy.id)\n          .get()\n          .then(querySnapshot => {\n            const data = querySnapshot.docs.map(doc => {\n              _id = doc.id\n              return doc.data()});\n           db.collection(\"musicalbums\").doc(_id)\n            .update(stateCopy).then(()=>{\n              action.asyncDispatch(mainAction(ACTIONS.UPDATE_CATALOGUE_SUCCESS,stateCopy))\n            });\n          });\n       \n        return state\n      }\n      case ACTIONS.UPDATE_CATALOGUE_SUCCESS:{\n        return state\n      }\n      case ACTIONS.UPDATE_CATALOGUE_FAIL:{\n        return state\n      }\n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}