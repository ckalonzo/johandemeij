{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/WEB/johandemeij/johan-app/src/components/dashboard/NewPublication.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Form, Container, Row, Col, Button } from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport SideNav from \"components/dashboard/SideNav\";\nimport { mainAction } from \"redux/actions/index.actions\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport _ from \"lodash\";\nimport PublicationImage from \"components/dashboard/PublicationImage\";\nimport Loading from \"components/shared/Loading\";\nimport PresentationMusic from \"components/dashboard/PresentationMusic\";\n\nconst NewPublication = props => {\n  const [loading, setLoading] = useState(false);\n  const [validated, setValidated] = useState(false);\n  const [field_cdName, setCdName] = useState();\n  const [field_subTitle, setSubTitle] = useState();\n  const [field_composer, setComposer] = useState();\n  const [field_instrumentation, setInstrumentation] = useState();\n  const [field_synopsis, setSynopsis] = useState();\n  const [field_totalTime, setTotalTime] = useState();\n  const [field_category, setCategory] = useState();\n  const [field_codes, setCodes] = useState(props.presentation.synopsis);\n  const [field_grade, setGrade] = useState();\n  const [field_cd, setCd] = useState();\n  const [field_otherCd, setOtherCd] = useState();\n  const [field_score, setScore] = useState();\n  const [field_audio, setAudio] = useState();\n  const [field_video, setVideo] = useState();\n  useEffect(() => {\n    // Update the document title using the browser API\n    window.scrollTo(0, 0);\n    props.actions.mainAction(ACTIONS.LOAD_ALL_PRESENTATIONS, []);\n    props.actions.mainAction(ACTIONS.LOAD_CDS, []);\n    let publicationId = props.match.params.id;\n    if (publicationId) props.actions.mainAction(ACTIONS.LOAD_PRESENTATION, publicationId); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let testArray = [];\n    let lastItem = Object.values(props.allPresentations).map((item, i) => {\n      return testArray.push({\n        id: parseInt(item.id, 10)\n      });\n    });\n    let publicationItem = {\n      id: (_.orderBy(testArray, \"id\", \"desc\")[0].id + 1).toString(),\n      cdName: field_cdName ? field_cdName : \"\",\n      subTitle: field_subTitle ? field_subTitle : \"\",\n      composer: field_composer ? field_composer : \"\",\n      instrumentation: field_instrumentation ? field_instrumentation : \"\",\n      synopsis: field_synopsis ? field_synopsis : \"\",\n      totalTime: field_totalTime ? field_totalTime : \"\",\n      category: field_category ? field_category : \"\",\n      codes: field_codes ? field_codes : \"\",\n      grade: field_grade ? field_grade : \"\",\n      cd: field_cd ? field_cd : \"\",\n      otherCd: field_otherCd ? field_otherCd : \"\",\n      score: field_score ? field_score : \"\",\n      audio: field_audio ? field_audio : \"\",\n      video: field_video ? field_video : \"\"\n    };\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n    props.actions.mainAction(ACTIONS.CREATE_NEW_PUBLICATION, publicationItem);\n    props.history.push(\"/dashboard/publications/edit/\" + (_.orderBy(testArray, \"id\", \"desc\")[0].id + 1));\n  };\n\n  const handleUpdate = async event => {\n    event.preventDefault();\n    let publicationItem = {\n      _id: props.presentation._id,\n      id: props.presentation.id,\n      cdName: document.getElementById(\"cdName\").value,\n      subTitle: document.getElementById(\"subtitle\").value,\n      composer: document.getElementById(\"composer\").value,\n      instrumentation: document.getElementById(\"instrumentation\").value,\n      synopsis: field_synopsis,\n      totalTime: document.getElementById(\"totalTime\").value,\n      category: document.getElementById(\"category\").value,\n      codes: document.getElementById(\"codes\").value,\n      grade: document.getElementById(\"grade\").value,\n      cd: document.getElementById(\"cd\").value,\n      otherCd: document.getElementById(\"otherCD\").value,\n      score: document.getElementById(\"score\").value,\n      audio: document.getElementById(\"audio\").value,\n      video: document.getElementById(\"video\").value,\n      frontCaption: document.getElementById(\"frontCaption\").value,\n      backCaption: document.getElementById(\"backCaption\").value\n    };\n    const input = document.querySelector(\"form:first-child input\");\n    const nativeInputValueSetter = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, \"value\").set;\n    nativeInputValueSetter.call(input, \"\");\n    const inputEvent = new Event(\"input\", {\n      bubbles: true\n    });\n    input.dispatchEvent(inputEvent);\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n\n    window.scrollTo(0, 0);\n    setValidated(true);\n    setLoading(true);\n    props.actions.mainAction(ACTIONS.UPDATE_PUBLICATION, publicationItem); //props.history.push('/dashboard/publications/edit/'+props.presentation.id)\n  };\n\n  const renderPublicationImage = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PublicationImage, {\n      docId: props.presentation._id,\n      ID: props.presentation.id,\n      image: props.presentation.frontCover,\n      caption: props.presentation.frontCaption,\n      type: \"front\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(PublicationImage, {\n      docId: props.presentation._id,\n      ID: props.presentation.id,\n      image: props.presentation.backCover,\n      caption: props.presentation.backCaption,\n      type: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    className: \"dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SideNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: \"10\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, Object.keys(props.presentation).length > 0 ? renderPublicationImage() : \"\", props.match.params.id > 0 ? /*#__PURE__*/React.createElement(PresentationMusic, {\n    ID: props.match.params.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }) : \"\", loading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"section\", {\n    id: \"product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: Object.keys(props.presentation).length > 0 ? handleUpdate : handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"cdName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: props.presentation.cdName,\n    onChange: e => setCdName(e.target.value),\n    onBlur: e => setCdName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }, \"Please provide a name.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }, \"Looks good!\")), \" \"), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, \"Sub Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: props.presentation.subTitle,\n    onChange: e => setSubTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, \"Please provide a Sub title.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }\n  }, \"Looks good!\")))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"composer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, \"Composer\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: props.presentation.composer,\n    onChange: e => setComposer(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  }, \"Please provide a composer.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"instrumentation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 25\n    }\n  }, \"Instrumentaion\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: props.presentation.instrumentation,\n    onChange: e => setInstrumentation(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }\n  }, \"Please provide a instrumentaion.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 25\n    }\n  }, \"Looks good!\")))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"totalTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 25\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: props.presentation.totalTime,\n    onChange: e => setTotalTime(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 25\n    }\n  }, \"Please provide a product time.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 25\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"codes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }, \"codes\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: props.presentation.codes,\n    onChange: e => setCodes(e.target.value),\n    onBlur: e => setCodes(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 25\n    }\n  }, \"Please provide a product description.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 25\n    }\n  }, \"Looks good!\")))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"cd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 25\n    }\n  }, \"CD\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    as: \"select\",\n    onChange: e => setCd(e.target.value),\n    onBlur: e => setCd(e.target.value),\n    defaultValue: field_cd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 27\n    }\n  }, \"SELECT A CD\"), Object.values(_.orderBy(props.allCds ? props.allCds : [], \"cd_name\", \"asc\")).map(CD => {\n    if (CD.id === props.presentation.cd) return /*#__PURE__*/React.createElement(\"option\", {\n      key: CD.id,\n      value: CD.id,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 33\n      }\n    }, CD.cd_name);\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: CD.id,\n      value: CD.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 31\n      }\n    }, CD.cd_name);\n  })), \" \", /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 25\n    }\n  }, \"Please provide a CD.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 25\n    }\n  }, \"Looks good!\")))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"grade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 25\n    }\n  }, \"Grade\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: props.presentation.grade,\n    onChange: e => setGrade(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 25\n    }\n  }, \"Please provide a grade.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 25\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"otherCD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 25\n    }\n  }, \"otherCD\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    as: \"select\",\n    onChange: e => setOtherCd(e.target.value),\n    onBlur: e => setOtherCd(e.target.value),\n    defaultValue: field_otherCd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 27\n    }\n  }, \"SELECT A CD\"), Object.values(_.orderBy(props.allCds ? props.allCds : [], \"cd_name\", \"asc\")).map(CD => {\n    if (CD.id === props.presentation.otherCd) return /*#__PURE__*/React.createElement(\"option\", {\n      key: CD.id,\n      value: CD.id,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 33\n      }\n    }, CD.cd_name);\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: CD.id,\n      value: CD.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 31\n      }\n    }, CD.cd_name);\n  })), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 25\n    }\n  }, \"Please provide a cd.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 25\n    }\n  }, \"Looks good!\")))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"score\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 25\n    }\n  }, \"Score\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: props.presentation.score,\n    onChange: e => setScore(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 25\n    }\n  }, \"Please provide a score.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 25\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"audio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 25\n    }\n  }, \"Audio\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: props.presentation.audio,\n    onChange: e => setAudio(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 25\n    }\n  }, \"Please provide audo.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 25\n    }\n  }, \"Looks good!\")))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 25\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    onChange: e => setCategory(e.target.value),\n    onBlur: e => setCategory(e.target.value),\n    defaultValue: parseInt(props.presentation.category, 10),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 27\n    }\n  }), props.presentation.category > 0 ? /*#__PURE__*/React.createElement(\"option\", {\n    defaultValue: props.presentation.category,\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 29\n    }\n  }, props.categories.filter(category => category.id === parseInt(props.presentation.category, 10)).map(category => category.name)) : \"\", props.categories.map(category => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: category.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 31\n      }\n    }, category.name);\n  })), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 25\n    }\n  }, \"Please select a category.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 25\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 25\n    }\n  }, \"Video\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"3\",\n    onChange: e => setVideo(e.target.value),\n    defaultValue: props.presentation.video,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 25\n    }\n  }, \"Please provide a video.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 25\n    }\n  }, \"Looks good!\")))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CKEditor, {\n    editor: ClassicEditor,\n    data: props.presentation.synopsis ? props.presentation.synopsis : field_synopsis,\n    toolbar: (\"heading\", \"|\", \"bold\", \"italic\", \"link\", \"bulletedList\", \"numberedList\", \"blockQuote\"),\n    onInit: editor => {// You can store the \"editor\" and use when it is needed.\n      // console.log( 'Editor is ready to use!', editor );\n    },\n    onChange: (event, editor) => {\n      const data = editor.getData(); // console.log( { event, editor, data } );\n\n      setSynopsis(data ? data : props.presentation.synopsis);\n    },\n    onBlur: (event, editor) => {\n      const data = editor.getData();\n      console.log(\"Blur.\", editor);\n      setSynopsis(data ? data : props.presentation.synopsis);\n    },\n    onFocus: (event, editor) => {\n      console.log(\"Focus.\", editor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 19\n    }\n  }, Object.keys(props.presentation).length > 0 ? \"Update Publication\" : \"Create Publication\"), \" \", /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 19\n    }\n  }, \"Delete Publication\")))))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    allPresentations: _.orderBy(state.AllPresentationsReducer, \"id\", \"asc\"),\n    categories: state.musicReducer.categories,\n    presentation: state.presentationReducer,\n    presentationImages: state.postImagesReducer,\n    allCds: state.cdsReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      mainAction\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPublication);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/WEB/johandemeij/johan-app/src/components/dashboard/NewPublication.jsx"],"names":["React","useEffect","useState","connect","bindActionCreators","Form","Container","Row","Col","Button","ACTIONS","SideNav","mainAction","CKEditor","ClassicEditor","_","PublicationImage","Loading","PresentationMusic","NewPublication","props","loading","setLoading","validated","setValidated","field_cdName","setCdName","field_subTitle","setSubTitle","field_composer","setComposer","field_instrumentation","setInstrumentation","field_synopsis","setSynopsis","field_totalTime","setTotalTime","field_category","setCategory","field_codes","setCodes","presentation","synopsis","field_grade","setGrade","field_cd","setCd","field_otherCd","setOtherCd","field_score","setScore","field_audio","setAudio","field_video","setVideo","window","scrollTo","actions","LOAD_ALL_PRESENTATIONS","LOAD_CDS","publicationId","match","params","id","LOAD_PRESENTATION","handleSubmit","event","preventDefault","testArray","lastItem","Object","values","allPresentations","map","item","i","push","parseInt","publicationItem","orderBy","toString","cdName","subTitle","composer","instrumentation","totalTime","category","codes","grade","cd","otherCd","score","audio","video","form","currentTarget","checkValidity","stopPropagation","CREATE_NEW_PUBLICATION","history","handleUpdate","_id","document","getElementById","value","frontCaption","backCaption","input","querySelector","nativeInputValueSetter","getOwnPropertyDescriptor","HTMLInputElement","prototype","set","call","inputEvent","Event","bubbles","dispatchEvent","UPDATE_PUBLICATION","renderPublicationImage","frontCover","backCover","span","keys","length","e","target","allCds","CD","cd_name","categories","filter","name","editor","data","getData","console","log","mapStateToProps","state","AllPresentationsReducer","musicReducer","presentationReducer","presentationImages","postImagesReducer","cdsReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,MAApC,QAAkD,iBAAlD;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;;AACA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACuB,YAAD,EAAeC,SAAf,IAA4BxB,QAAQ,EAA1C;AACA,QAAM,CAACyB,cAAD,EAAiBC,WAAjB,IAAgC1B,QAAQ,EAA9C;AACA,QAAM,CAAC2B,cAAD,EAAiBC,WAAjB,IAAgC5B,QAAQ,EAA9C;AACA,QAAM,CAAC6B,qBAAD,EAAwBC,kBAAxB,IAA8C9B,QAAQ,EAA5D;AACA,QAAM,CAAC+B,cAAD,EAAiBC,WAAjB,IAAgChC,QAAQ,EAA9C;AACA,QAAM,CAACiC,eAAD,EAAkBC,YAAlB,IAAkClC,QAAQ,EAAhD;AACA,QAAM,CAACmC,cAAD,EAAiBC,WAAjB,IAAgCpC,QAAQ,EAA9C;AACA,QAAM,CAACqC,WAAD,EAAcC,QAAd,IAA0BtC,QAAQ,CAACkB,KAAK,CAACqB,YAAN,CAAmBC,QAApB,CAAxC;AACA,QAAM,CAACC,WAAD,EAAcC,QAAd,IAA0B1C,QAAQ,EAAxC;AACA,QAAM,CAAC2C,QAAD,EAAWC,KAAX,IAAoB5C,QAAQ,EAAlC;AACA,QAAM,CAAC6C,aAAD,EAAgBC,UAAhB,IAA8B9C,QAAQ,EAA5C;AACA,QAAM,CAAC+C,WAAD,EAAcC,QAAd,IAA0BhD,QAAQ,EAAxC;AACA,QAAM,CAACiD,WAAD,EAAcC,QAAd,IAA0BlD,QAAQ,EAAxC;AACA,QAAM,CAACmD,WAAD,EAAcC,QAAd,IAA0BpD,QAAQ,EAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAsD,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACApC,IAAAA,KAAK,CAACqC,OAAN,CAAc7C,UAAd,CAAyBF,OAAO,CAACgD,sBAAjC,EAAyD,EAAzD;AACAtC,IAAAA,KAAK,CAACqC,OAAN,CAAc7C,UAAd,CAAyBF,OAAO,CAACiD,QAAjC,EAA2C,EAA3C;AACA,QAAIC,aAAa,GAAGxC,KAAK,CAACyC,KAAN,CAAYC,MAAZ,CAAmBC,EAAvC;AACA,QAAIH,aAAJ,EACExC,KAAK,CAACqC,OAAN,CAAc7C,UAAd,CAAyBF,OAAO,CAACsD,iBAAjC,EAAoDJ,aAApD,EAPY,CAQd;AACD,GATQ,EASN,EATM,CAAT;;AAUA,QAAMK,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAcnD,KAAK,CAACoD,gBAApB,EAAsCC,GAAtC,CAA0C,CAACC,IAAD,EAAOC,CAAP,KAAa;AACpE,aAAOP,SAAS,CAACQ,IAAV,CAAe;AAAEb,QAAAA,EAAE,EAAEc,QAAQ,CAACH,IAAI,CAACX,EAAN,EAAU,EAAV;AAAd,OAAf,CAAP;AACD,KAFc,CAAf;AAIA,QAAIe,eAAe,GAAG;AACpBf,MAAAA,EAAE,EAAE,CAAChD,CAAC,CAACgE,OAAF,CAAUX,SAAV,EAAqB,IAArB,EAA2B,MAA3B,EAAmC,CAAnC,EAAsCL,EAAtC,GAA2C,CAA5C,EAA+CiB,QAA/C,EADgB;AAEpBC,MAAAA,MAAM,EAAExD,YAAY,GAAGA,YAAH,GAAkB,EAFlB;AAGpByD,MAAAA,QAAQ,EAAEvD,cAAc,GAAGA,cAAH,GAAoB,EAHxB;AAIpBwD,MAAAA,QAAQ,EAAEtD,cAAc,GAAGA,cAAH,GAAoB,EAJxB;AAKpBuD,MAAAA,eAAe,EAAErD,qBAAqB,GAAGA,qBAAH,GAA2B,EAL7C;AAMpBW,MAAAA,QAAQ,EAAET,cAAc,GAAGA,cAAH,GAAoB,EANxB;AAOpBoD,MAAAA,SAAS,EAAElD,eAAe,GAAGA,eAAH,GAAqB,EAP3B;AAQpBmD,MAAAA,QAAQ,EAAEjD,cAAc,GAAGA,cAAH,GAAoB,EARxB;AASpBkD,MAAAA,KAAK,EAAEhD,WAAW,GAAGA,WAAH,GAAiB,EATf;AAUpBiD,MAAAA,KAAK,EAAE7C,WAAW,GAAGA,WAAH,GAAiB,EAVf;AAWpB8C,MAAAA,EAAE,EAAE5C,QAAQ,GAAGA,QAAH,GAAc,EAXN;AAYpB6C,MAAAA,OAAO,EAAE3C,aAAa,GAAGA,aAAH,GAAmB,EAZrB;AAapB4C,MAAAA,KAAK,EAAE1C,WAAW,GAAGA,WAAH,GAAiB,EAbf;AAcpB2C,MAAAA,KAAK,EAAEzC,WAAW,GAAGA,WAAH,GAAiB,EAdf;AAepB0C,MAAAA,KAAK,EAAExC,WAAW,GAAGA,WAAH,GAAiB;AAff,KAAtB;AAkBA,UAAMyC,IAAI,GAAG5B,KAAK,CAAC6B,aAAnB;;AACA,QAAID,IAAI,CAACE,aAAL,OAAyB,KAA7B,EAAoC;AAClC9B,MAAAA,KAAK,CAAC+B,eAAN;AACD;;AACDzE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAJ,IAAAA,KAAK,CAACqC,OAAN,CAAc7C,UAAd,CAAyBF,OAAO,CAACwF,sBAAjC,EAAyDpB,eAAzD;AACA1D,IAAAA,KAAK,CAAC+E,OAAN,CAAcvB,IAAd,CACE,mCACG7D,CAAC,CAACgE,OAAF,CAAUX,SAAV,EAAqB,IAArB,EAA2B,MAA3B,EAAmC,CAAnC,EAAsCL,EAAtC,GAA2C,CAD9C,CADF;AAID,GAnCD;;AAoCA,QAAMqC,YAAY,GAAG,MAAOlC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIW,eAAe,GAAG;AACpBuB,MAAAA,GAAG,EAAEjF,KAAK,CAACqB,YAAN,CAAmB4D,GADJ;AAEpBtC,MAAAA,EAAE,EAAE3C,KAAK,CAACqB,YAAN,CAAmBsB,EAFH;AAGpBkB,MAAAA,MAAM,EAAEqB,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAHtB;AAIpBtB,MAAAA,QAAQ,EAAEoB,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAJ1B;AAKpBrB,MAAAA,QAAQ,EAAEmB,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAL1B;AAMpBpB,MAAAA,eAAe,EAAEkB,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2CC,KANxC;AAOpB9D,MAAAA,QAAQ,EAAET,cAPU;AAQpBoD,MAAAA,SAAS,EAAEiB,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAR5B;AASpBlB,MAAAA,QAAQ,EAAEgB,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAT1B;AAUpBjB,MAAAA,KAAK,EAAEe,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAVpB;AAWpBhB,MAAAA,KAAK,EAAEc,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAXpB;AAYpBf,MAAAA,EAAE,EAAEa,QAAQ,CAACC,cAAT,CAAwB,IAAxB,EAA8BC,KAZd;AAapBd,MAAAA,OAAO,EAAEY,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAbxB;AAcpBb,MAAAA,KAAK,EAAEW,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAdpB;AAepBZ,MAAAA,KAAK,EAAEU,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAfpB;AAgBpBX,MAAAA,KAAK,EAAES,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAhBpB;AAiBpBC,MAAAA,YAAY,EAAEH,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,KAjBlC;AAkBpBE,MAAAA,WAAW,EAAEJ,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC;AAlBhC,KAAtB;AAoBA,UAAMG,KAAK,GAAGL,QAAQ,CAACM,aAAT,CAAuB,wBAAvB,CAAd;AACA,UAAMC,sBAAsB,GAAGvC,MAAM,CAACwC,wBAAP,CAC7BvD,MAAM,CAACwD,gBAAP,CAAwBC,SADK,EAE7B,OAF6B,EAG7BC,GAHF;AAIAJ,IAAAA,sBAAsB,CAACK,IAAvB,CAA4BP,KAA5B,EAAmC,EAAnC;AAEA,UAAMQ,UAAU,GAAG,IAAIC,KAAJ,CAAU,OAAV,EAAmB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAnB,CAAnB;AACAV,IAAAA,KAAK,CAACW,aAAN,CAAoBH,UAApB;AACA,UAAMrB,IAAI,GAAG5B,KAAK,CAAC6B,aAAnB;;AACA,QAAID,IAAI,CAACE,aAAL,OAAyB,KAA7B,EAAoC;AAClC9B,MAAAA,KAAK,CAAC+B,eAAN;AACD;;AACD1C,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACAhC,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,IAAAA,KAAK,CAACqC,OAAN,CAAc7C,UAAd,CAAyBF,OAAO,CAAC6G,kBAAjC,EAAqDzC,eAArD,EAtCoC,CAuCpC;AACD,GAxCD;;AAyCA,QAAM0C,sBAAsB,GAAG,MAAM;AACnC,wBACE,uDACE,oBAAC,gBAAD;AACE,MAAA,KAAK,EAAEpG,KAAK,CAACqB,YAAN,CAAmB4D,GAD5B;AAEE,MAAA,EAAE,EAAEjF,KAAK,CAACqB,YAAN,CAAmBsB,EAFzB;AAGE,MAAA,KAAK,EAAE3C,KAAK,CAACqB,YAAN,CAAmBgF,UAH5B;AAIE,MAAA,OAAO,EAAErG,KAAK,CAACqB,YAAN,CAAmBgE,YAJ9B;AAKE,MAAA,IAAI,EAAC,OALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE,oBAAC,gBAAD;AACE,MAAA,KAAK,EAAErF,KAAK,CAACqB,YAAN,CAAmB4D,GAD5B;AAEE,MAAA,EAAE,EAAEjF,KAAK,CAACqB,YAAN,CAAmBsB,EAFzB;AAGE,MAAA,KAAK,EAAE3C,KAAK,CAACqB,YAAN,CAAmBiF,SAH5B;AAIE,MAAA,OAAO,EAAEtG,KAAK,CAACqB,YAAN,CAAmBiE,WAJ9B;AAKE,MAAA,IAAI,EAAC,MALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAkBD,GAnBD;;AAoBA,sBACE,uDACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEiB,MAAAA,IAAI,EAAE;AAAR,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEA,MAAAA,IAAI,EAAE;AAAR,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrD,MAAM,CAACsD,IAAP,CAAYxG,KAAK,CAACqB,YAAlB,EAAgCoF,MAAhC,GAAyC,CAAzC,GACGL,sBAAsB,EADzB,GAEG,EAHN,EAIGpG,KAAK,CAACyC,KAAN,CAAYC,MAAZ,CAAmBC,EAAnB,GAAwB,CAAxB,gBACC,oBAAC,iBAAD;AAAmB,IAAA,EAAE,EAAE3C,KAAK,CAACyC,KAAN,CAAYC,MAAZ,CAAmBC,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,EAPJ,EASG1C,OAAO,gBACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,gBAGN;AAAS,IAAA,EAAE,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,SAAS,EAAEE,SAFb;AAGE,IAAA,QAAQ,EACN+C,MAAM,CAACsD,IAAP,CAAYxG,KAAK,CAACqB,YAAlB,EAAgCoF,MAAhC,GAAyC,CAAzC,GACIzB,YADJ,GAEInC,YANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEzD,GAAhB;AAAqB,IAAA,SAAS,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,EAFd;AAGE,IAAA,YAAY,EAAEY,KAAK,CAACqB,YAAN,CAAmBwC,MAHnC;AAIE,IAAA,QAAQ,EAAG6C,CAAD,IAAOpG,SAAS,CAACoG,CAAC,CAACC,MAAF,CAASvB,KAAV,CAJ5B;AAKE,IAAA,MAAM,EAAGsB,CAAD,IAAOpG,SAAS,CAACoG,CAAC,CAACC,MAAF,CAASvB,KAAV,CAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eASE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BATF,eAYE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAZF,CADF,EAgBgB,GAhBhB,CADF,eAmBE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEhG,GAAhB;AAAqB,IAAA,SAAS,EAAC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,EAFd;AAGE,IAAA,YAAY,EAAEY,KAAK,CAACqB,YAAN,CAAmByC,QAHnC;AAIE,IAAA,QAAQ,EAAG4C,CAAD,IAAOlG,WAAW,CAACkG,CAAC,CAACC,MAAF,CAASvB,KAAV,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCARF,eAWE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,CADF,CAnBF,CATF,eA8CE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEhG,GAAhB;AAAqB,IAAA,SAAS,EAAC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,EAFd;AAGE,IAAA,YAAY,EAAEY,KAAK,CAACqB,YAAN,CAAmB0C,QAHnC;AAIE,IAAA,QAAQ,EAAG2C,CAAD,IAAOhG,WAAW,CAACgG,CAAC,CAACC,MAAF,CAASvB,KAAV,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCARF,eAWE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,CADF,CADF,eAkBE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,eAEE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEhG,GAAhB;AAAqB,IAAA,SAAS,EAAC,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,EAFd;AAGE,IAAA,YAAY,EAAEY,KAAK,CAACqB,YAAN,CAAmB2C,eAHnC;AAIE,IAAA,QAAQ,EAAG0C,CAAD,IAAO9F,kBAAkB,CAAC8F,CAAC,CAACC,MAAF,CAASvB,KAAV,CAJrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCARF,eAWE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,CAFF,CAlBF,CA9CF,eAmFE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEhG,GAAhB;AAAqB,IAAA,SAAS,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,EAFd;AAGE,IAAA,YAAY,EAAEY,KAAK,CAACqB,YAAN,CAAmB4C,SAHnC;AAIE,IAAA,QAAQ,EAAGyC,CAAD,IAAO1F,YAAY,CAAC0F,CAAC,CAACC,MAAF,CAASvB,KAAV,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCARF,eAWE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,CADF,CADF,eAkBE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEhG,GAAhB;AAAqB,IAAA,SAAS,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,EAFd;AAGE,IAAA,YAAY,EAAEY,KAAK,CAACqB,YAAN,CAAmB8C,KAHnC;AAIE,IAAA,QAAQ,EAAGuC,CAAD,IAAOtF,QAAQ,CAACsF,CAAC,CAACC,MAAF,CAASvB,KAAV,CAJ3B;AAKE,IAAA,MAAM,EAAGsB,CAAD,IAAOtF,QAAQ,CAACsF,CAAC,CAACC,MAAF,CAASvB,KAAV,CALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eASE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CATF,eAYE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAZF,CADF,CAlBF,CAnFF,eAwHE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEhG,GAAhB;AAAqB,IAAA,SAAS,EAAC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,EAAE,EAAC,QAFL;AAGE,IAAA,QAAQ,EAAGsH,CAAD,IAAOhF,KAAK,CAACgF,CAAC,CAACC,MAAF,CAASvB,KAAV,CAHxB;AAIE,IAAA,MAAM,EAAGsB,CAAD,IAAOhF,KAAK,CAACgF,CAAC,CAACC,MAAF,CAASvB,KAAV,CAJtB;AAKE,IAAA,YAAY,EAAE3D,QALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,EAQGyB,MAAM,CAACC,MAAP,CACCxD,CAAC,CAACgE,OAAF,CACE3D,KAAK,CAAC4G,MAAN,GAAe5G,KAAK,CAAC4G,MAArB,GAA8B,EADhC,EAEE,SAFF,EAGE,KAHF,CADD,EAMCvD,GAND,CAMMwD,EAAD,IAAQ;AACZ,QAAIA,EAAE,CAAClE,EAAH,KAAU3C,KAAK,CAACqB,YAAN,CAAmBgD,EAAjC,EACE,oBACE;AAAQ,MAAA,GAAG,EAAEwC,EAAE,CAAClE,EAAhB;AAAoB,MAAA,KAAK,EAAEkE,EAAE,CAAClE,EAA9B;AAAkC,MAAA,QAAQ,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGkE,EAAE,CAACC,OADN,CADF;AAKF,wBACE;AAAQ,MAAA,GAAG,EAAED,EAAE,CAAClE,EAAhB;AAAoB,MAAA,KAAK,EAAEkE,EAAE,CAAClE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGkE,EAAE,CAACC,OADN,CADF;AAKD,GAlBA,CARH,CAFF,EA6BkB,GA7BlB,eA8BE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BA9BF,eAiCE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAjCF,CADF,CADF,CAxHF,eAiKE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE1H,GAAhB;AAAqB,IAAA,SAAS,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,EAFd;AAGE,IAAA,YAAY,EAAEY,KAAK,CAACqB,YAAN,CAAmB+C,KAHnC;AAIE,IAAA,QAAQ,EAAGsC,CAAD,IAAOlF,QAAQ,CAACkF,CAAC,CAACC,MAAF,CAASvB,KAAV,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BARF,eAWE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,CADF,CADF,eAkBE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEhG,GAAhB;AAAqB,IAAA,SAAS,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,EAAE,EAAC,QAFL;AAGE,IAAA,QAAQ,EAAGsH,CAAD,IAAO9E,UAAU,CAAC8E,CAAC,CAACC,MAAF,CAASvB,KAAV,CAH7B;AAIE,IAAA,MAAM,EAAGsB,CAAD,IAAO9E,UAAU,CAAC8E,CAAC,CAACC,MAAF,CAASvB,KAAV,CAJ3B;AAKE,IAAA,YAAY,EAAEzD,aALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,EAQGuB,MAAM,CAACC,MAAP,CACCxD,CAAC,CAACgE,OAAF,CACE3D,KAAK,CAAC4G,MAAN,GAAe5G,KAAK,CAAC4G,MAArB,GAA8B,EADhC,EAEE,SAFF,EAGE,KAHF,CADD,EAMCvD,GAND,CAMMwD,EAAD,IAAQ;AACZ,QAAIA,EAAE,CAAClE,EAAH,KAAU3C,KAAK,CAACqB,YAAN,CAAmBiD,OAAjC,EACE,oBACE;AAAQ,MAAA,GAAG,EAAEuC,EAAE,CAAClE,EAAhB;AAAoB,MAAA,KAAK,EAAEkE,EAAE,CAAClE,EAA9B;AAAkC,MAAA,QAAQ,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGkE,EAAE,CAACC,OADN,CADF;AAKF,wBACE;AAAQ,MAAA,GAAG,EAAED,EAAE,CAAClE,EAAhB;AAAoB,MAAA,KAAK,EAAEkE,EAAE,CAAClE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGkE,EAAE,CAACC,OADN,CADF;AAKD,GAlBA,CARH,CAFF,eA8BE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BA9BF,eAiCE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAjCF,CADF,CAlBF,CAjKF,eA2NE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE1H,GAAhB;AAAqB,IAAA,SAAS,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,EAFd;AAGE,IAAA,YAAY,EAAEY,KAAK,CAACqB,YAAN,CAAmBkD,KAHnC;AAIE,IAAA,QAAQ,EAAGmC,CAAD,IAAO5E,QAAQ,CAAC4E,CAAC,CAACC,MAAF,CAASvB,KAAV,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BARF,eAWE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,CADF,CADF,eAkBE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEhG,GAAhB;AAAqB,IAAA,SAAS,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,EAFd;AAGE,IAAA,YAAY,EAAEY,KAAK,CAACqB,YAAN,CAAmBmD,KAHnC;AAIE,IAAA,QAAQ,EAAGkC,CAAD,IAAO1E,QAAQ,CAAC0E,CAAC,CAACC,MAAF,CAASvB,KAAV,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BARF,eAWE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,CADF,CAlBF,CA3NF,eA+PE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEhG,GAAhB;AAAqB,IAAA,SAAS,EAAC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,QAAQ,EAAGsH,CAAD,IAAOxF,WAAW,CAACwF,CAAC,CAACC,MAAF,CAASvB,KAAV,CAF9B;AAGE,IAAA,MAAM,EAAGsB,CAAD,IAAOxF,WAAW,CAACwF,CAAC,CAACC,MAAF,CAASvB,KAAV,CAH5B;AAIE,IAAA,YAAY,EAAE3B,QAAQ,CACpBzD,KAAK,CAACqB,YAAN,CAAmB6C,QADC,EAEpB,EAFoB,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUGlE,KAAK,CAACqB,YAAN,CAAmB6C,QAAnB,GAA8B,CAA9B,gBACC;AACE,IAAA,YAAY,EAAElE,KAAK,CAACqB,YAAN,CAAmB6C,QADnC;AAEE,IAAA,QAAQ,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGlE,KAAK,CAAC+G,UAAN,CACEC,MADF,CAEI9C,QAAD,IACEA,QAAQ,CAACvB,EAAT,KACAc,QAAQ,CAACzD,KAAK,CAACqB,YAAN,CAAmB6C,QAApB,EAA8B,EAA9B,CAJb,EAMEb,GANF,CAMOa,QAAD,IAAcA,QAAQ,CAAC+C,IAN7B,CAJH,CADD,GAcC,EAxBJ,EA0BGjH,KAAK,CAAC+G,UAAN,CAAiB1D,GAAjB,CAAsBa,QAAD,IAAc;AAClC,wBACE;AAAQ,MAAA,KAAK,EAAEA,QAAQ,CAACvB,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGuB,QAAQ,CAAC+C,IADZ,CADF;AAKD,GANA,CA1BH,CAFF,eAoCE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCApCF,eAuCE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAvCF,CADF,CADF,eA8CE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE7H,GAAhB;AAAqB,IAAA,SAAS,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,GAFP;AAGE,IAAA,QAAQ,EAAGsH,CAAD,IAAOxE,QAAQ,CAACwE,CAAC,CAACC,MAAF,CAASvB,KAAV,CAH3B;AAIE,IAAA,YAAY,EAAEpF,KAAK,CAACqB,YAAN,CAAmBoD,KAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BARF,eAWE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,CADF,CA9CF,CA/PF,eA+TE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAErF,GAAhB;AAAqB,IAAA,SAAS,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,MAAM,EAAEM,aADV;AAEE,IAAA,IAAI,EACFM,KAAK,CAACqB,YAAN,CAAmBC,QAAnB,GACItB,KAAK,CAACqB,YAAN,CAAmBC,QADvB,GAEIT,cALR;AAOE,IAAA,OAAO,GACJ,WACD,GADC,EAED,MAFC,EAGD,QAHC,EAID,MAJC,EAKD,cALC,EAMD,cANC,EAOD,YARK,CAPT;AAiBE,IAAA,MAAM,EAAGqG,MAAD,IAAY,CAClB;AACA;AACD,KApBH;AAqBE,IAAA,QAAQ,EAAE,CAACpE,KAAD,EAAQoE,MAAR,KAAmB;AAC3B,YAAMC,IAAI,GAAGD,MAAM,CAACE,OAAP,EAAb,CAD2B,CAE3B;;AACAtG,MAAAA,WAAW,CACTqG,IAAI,GAAGA,IAAH,GAAUnH,KAAK,CAACqB,YAAN,CAAmBC,QADxB,CAAX;AAGD,KA3BH;AA4BE,IAAA,MAAM,EAAE,CAACwB,KAAD,EAAQoE,MAAR,KAAmB;AACzB,YAAMC,IAAI,GAAGD,MAAM,CAACE,OAAP,EAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,MAArB;AACApG,MAAAA,WAAW,CACTqG,IAAI,GAAGA,IAAH,GAAUnH,KAAK,CAACqB,YAAN,CAAmBC,QADxB,CAAX;AAGD,KAlCH;AAmCE,IAAA,OAAO,EAAE,CAACwB,KAAD,EAAQoE,MAAR,KAAmB;AAC1BG,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,MAAtB;AACD,KArCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CA/TF,eA0WE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhE,MAAM,CAACsD,IAAP,CAAYxG,KAAK,CAACqB,YAAlB,EAAgCoF,MAAhC,GAAyC,CAAzC,GACG,oBADH,GAEG,oBAHN,CA1WF,EA8WY,GA9WZ,eA+WE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BA/WF,CADF,CAZJ,CAJF,CADF,CADF,CADF;AA4YD,CAzgBD;;AA0gBA,SAASc,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLpE,IAAAA,gBAAgB,EAAEzD,CAAC,CAACgE,OAAF,CAAU6D,KAAK,CAACC,uBAAhB,EAAyC,IAAzC,EAA+C,KAA/C,CADb;AAELV,IAAAA,UAAU,EAAES,KAAK,CAACE,YAAN,CAAmBX,UAF1B;AAGL1F,IAAAA,YAAY,EAAEmG,KAAK,CAACG,mBAHf;AAILC,IAAAA,kBAAkB,EAAEJ,KAAK,CAACK,iBAJrB;AAKLjB,IAAAA,MAAM,EAAEY,KAAK,CAACM;AALT,GAAP;AAOD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACL3F,IAAAA,OAAO,EAAErD,kBAAkB,CAAC;AAAEQ,MAAAA;AAAF,KAAD,EAAiBwI,QAAjB;AADtB,GAAP;AAGD;;AAED,eAAejJ,OAAO,CAACwI,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6ChI,cAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Form, Container, Row, Col, Button } from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport SideNav from \"components/dashboard/SideNav\";\nimport { mainAction } from \"redux/actions/index.actions\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport _ from \"lodash\";\nimport PublicationImage from \"components/dashboard/PublicationImage\";\nimport Loading from \"components/shared/Loading\";\nimport PresentationMusic from \"components/dashboard/PresentationMusic\";\nconst NewPublication = (props) => {\n  const [loading, setLoading] = useState(false);\n  const [validated, setValidated] = useState(false);\n  const [field_cdName, setCdName] = useState();\n  const [field_subTitle, setSubTitle] = useState();\n  const [field_composer, setComposer] = useState();\n  const [field_instrumentation, setInstrumentation] = useState();\n  const [field_synopsis, setSynopsis] = useState();\n  const [field_totalTime, setTotalTime] = useState();\n  const [field_category, setCategory] = useState();\n  const [field_codes, setCodes] = useState(props.presentation.synopsis);\n  const [field_grade, setGrade] = useState();\n  const [field_cd, setCd] = useState();\n  const [field_otherCd, setOtherCd] = useState();\n  const [field_score, setScore] = useState();\n  const [field_audio, setAudio] = useState();\n  const [field_video, setVideo] = useState();\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    window.scrollTo(0, 0);\n    props.actions.mainAction(ACTIONS.LOAD_ALL_PRESENTATIONS, []);\n    props.actions.mainAction(ACTIONS.LOAD_CDS, []);\n    let publicationId = props.match.params.id;\n    if (publicationId)\n      props.actions.mainAction(ACTIONS.LOAD_PRESENTATION, publicationId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let testArray = [];\n    let lastItem = Object.values(props.allPresentations).map((item, i) => {\n      return testArray.push({ id: parseInt(item.id, 10) });\n    });\n\n    let publicationItem = {\n      id: (_.orderBy(testArray, \"id\", \"desc\")[0].id + 1).toString(),\n      cdName: field_cdName ? field_cdName : \"\",\n      subTitle: field_subTitle ? field_subTitle : \"\",\n      composer: field_composer ? field_composer : \"\",\n      instrumentation: field_instrumentation ? field_instrumentation : \"\",\n      synopsis: field_synopsis ? field_synopsis : \"\",\n      totalTime: field_totalTime ? field_totalTime : \"\",\n      category: field_category ? field_category : \"\",\n      codes: field_codes ? field_codes : \"\",\n      grade: field_grade ? field_grade : \"\",\n      cd: field_cd ? field_cd : \"\",\n      otherCd: field_otherCd ? field_otherCd : \"\",\n      score: field_score ? field_score : \"\",\n      audio: field_audio ? field_audio : \"\",\n      video: field_video ? field_video : \"\",\n    };\n\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    setValidated(true);\n    props.actions.mainAction(ACTIONS.CREATE_NEW_PUBLICATION, publicationItem);\n    props.history.push(\n      \"/dashboard/publications/edit/\" +\n        (_.orderBy(testArray, \"id\", \"desc\")[0].id + 1)\n    );\n  };\n  const handleUpdate = async (event) => {\n    event.preventDefault();\n    let publicationItem = {\n      _id: props.presentation._id,\n      id: props.presentation.id,\n      cdName: document.getElementById(\"cdName\").value,\n      subTitle: document.getElementById(\"subtitle\").value,\n      composer: document.getElementById(\"composer\").value,\n      instrumentation: document.getElementById(\"instrumentation\").value,\n      synopsis: field_synopsis,\n      totalTime: document.getElementById(\"totalTime\").value,\n      category: document.getElementById(\"category\").value,\n      codes: document.getElementById(\"codes\").value,\n      grade: document.getElementById(\"grade\").value,\n      cd: document.getElementById(\"cd\").value,\n      otherCd: document.getElementById(\"otherCD\").value,\n      score: document.getElementById(\"score\").value,\n      audio: document.getElementById(\"audio\").value,\n      video: document.getElementById(\"video\").value,\n      frontCaption: document.getElementById(\"frontCaption\").value,\n      backCaption: document.getElementById(\"backCaption\").value,\n    };\n    const input = document.querySelector(\"form:first-child input\");\n    const nativeInputValueSetter = Object.getOwnPropertyDescriptor(\n      window.HTMLInputElement.prototype,\n      \"value\"\n    ).set;\n    nativeInputValueSetter.call(input, \"\");\n\n    const inputEvent = new Event(\"input\", { bubbles: true });\n    input.dispatchEvent(inputEvent);\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    window.scrollTo(0, 0);\n    setValidated(true);\n    setLoading(true);\n    props.actions.mainAction(ACTIONS.UPDATE_PUBLICATION, publicationItem);\n    //props.history.push('/dashboard/publications/edit/'+props.presentation.id)\n  };\n  const renderPublicationImage = () => {\n    return (\n      <>\n        <PublicationImage\n          docId={props.presentation._id}\n          ID={props.presentation.id}\n          image={props.presentation.frontCover}\n          caption={props.presentation.frontCaption}\n          type=\"front\"\n        />\n        <PublicationImage\n          docId={props.presentation._id}\n          ID={props.presentation.id}\n          image={props.presentation.backCover}\n          caption={props.presentation.backCaption}\n          type=\"back\"\n        />\n      </>\n    );\n  };\n  return (\n    <>\n      <Container className=\"dashboard\">\n        <Row>\n          <Col lg={{ span: 2 }}>\n            <SideNav />\n          </Col>\n          <Col lg={{ span: \"10\" }}>\n            {Object.keys(props.presentation).length > 0\n              ? renderPublicationImage()\n              : \"\"}\n            {props.match.params.id > 0 ? (\n              <PresentationMusic ID={props.match.params.id} />\n            ) : (\n              \"\"\n            )}\n            {loading ? (\n              <Loading />\n            ) : (\n              <section id=\"product\">\n                <Form\n                  noValidate\n                  validated={validated}\n                  onSubmit={\n                    Object.keys(props.presentation).length > 0\n                      ? handleUpdate\n                      : handleSubmit\n                  }\n                >\n                  <Form.Row>\n                    <Col lg=\"6\">\n                      <Form.Group as={Col} controlId=\"cdName\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"\"\n                          defaultValue={props.presentation.cdName}\n                          onChange={(e) => setCdName(e.target.value)}\n                          onBlur={(e) => setCdName(e.target.value)}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please provide a name.\n                        </Form.Control.Feedback>\n                        <Form.Control.Feedback>\n                          Looks good!\n                        </Form.Control.Feedback>\n                      </Form.Group>{\" \"}\n                    </Col>\n                    <Col lg=\"6\">\n                      <Form.Group as={Col} controlId=\"subtitle\">\n                        <Form.Label>Sub Title</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"\"\n                          defaultValue={props.presentation.subTitle}\n                          onChange={(e) => setSubTitle(e.target.value)}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please provide a Sub title.\n                        </Form.Control.Feedback>\n                        <Form.Control.Feedback>\n                          Looks good!\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                    </Col>\n                  </Form.Row>\n                  <Form.Row>\n                    <Col lg=\"6\">\n                      <Form.Group as={Col} controlId=\"composer\">\n                        <Form.Label>Composer</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"\"\n                          defaultValue={props.presentation.composer}\n                          onChange={(e) => setComposer(e.target.value)}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please provide a composer.\n                        </Form.Control.Feedback>\n                        <Form.Control.Feedback>\n                          Looks good!\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                    </Col>\n                    <Col lg=\"6\">\n                      {\" \"}\n                      <Form.Group as={Col} controlId=\"instrumentation\">\n                        <Form.Label>Instrumentaion</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"\"\n                          defaultValue={props.presentation.instrumentation}\n                          onChange={(e) => setInstrumentation(e.target.value)}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please provide a instrumentaion.\n                        </Form.Control.Feedback>\n                        <Form.Control.Feedback>\n                          Looks good!\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                    </Col>\n                  </Form.Row>\n                  <Form.Row>\n                    <Col lg=\"6\">\n                      <Form.Group as={Col} controlId=\"totalTime\">\n                        <Form.Label>Time</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"\"\n                          defaultValue={props.presentation.totalTime}\n                          onChange={(e) => setTotalTime(e.target.value)}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please provide a product time.\n                        </Form.Control.Feedback>\n                        <Form.Control.Feedback>\n                          Looks good!\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                    </Col>\n                    <Col lg=\"6\">\n                      <Form.Group as={Col} controlId=\"codes\">\n                        <Form.Label>codes</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"\"\n                          defaultValue={props.presentation.codes}\n                          onChange={(e) => setCodes(e.target.value)}\n                          onBlur={(e) => setCodes(e.target.value)}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please provide a product description.\n                        </Form.Control.Feedback>\n                        <Form.Control.Feedback>\n                          Looks good!\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                    </Col>\n                  </Form.Row>\n                  <Form.Row>\n                    <Col lg=\"12\">\n                      <Form.Group as={Col} controlId=\"cd\">\n                        <Form.Label>CD</Form.Label>\n                        <Form.Control\n                          required\n                          as=\"select\"\n                          onChange={(e) => setCd(e.target.value)}\n                          onBlur={(e) => setCd(e.target.value)}\n                          defaultValue={field_cd}\n                        >\n                          <option value=\"\">SELECT A CD</option>\n                          {Object.values(\n                            _.orderBy(\n                              props.allCds ? props.allCds : [],\n                              \"cd_name\",\n                              \"asc\"\n                            )\n                          ).map((CD) => {\n                            if (CD.id === props.presentation.cd)\n                              return (\n                                <option key={CD.id} value={CD.id} selected>\n                                  {CD.cd_name}\n                                </option>\n                              );\n                            return (\n                              <option key={CD.id} value={CD.id}>\n                                {CD.cd_name}\n                              </option>\n                            );\n                          })}\n                        </Form.Control>{\" \"}\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please provide a CD.\n                        </Form.Control.Feedback>\n                        <Form.Control.Feedback>\n                          Looks good!\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                    </Col>\n                  </Form.Row>\n                  <Form.Row>\n                    <Col lg=\"6\">\n                      <Form.Group as={Col} controlId=\"grade\">\n                        <Form.Label>Grade</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"\"\n                          defaultValue={props.presentation.grade}\n                          onChange={(e) => setGrade(e.target.value)}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please provide a grade.\n                        </Form.Control.Feedback>\n                        <Form.Control.Feedback>\n                          Looks good!\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                    </Col>\n                    <Col lg=\"6\">\n                      <Form.Group as={Col} controlId=\"otherCD\">\n                        <Form.Label>otherCD</Form.Label>\n                        <Form.Control\n                          required\n                          as=\"select\"\n                          onChange={(e) => setOtherCd(e.target.value)}\n                          onBlur={(e) => setOtherCd(e.target.value)}\n                          defaultValue={field_otherCd}\n                        >\n                          <option value=\"\">SELECT A CD</option>\n                          {Object.values(\n                            _.orderBy(\n                              props.allCds ? props.allCds : [],\n                              \"cd_name\",\n                              \"asc\"\n                            )\n                          ).map((CD) => {\n                            if (CD.id === props.presentation.otherCd)\n                              return (\n                                <option key={CD.id} value={CD.id} selected>\n                                  {CD.cd_name}\n                                </option>\n                              );\n                            return (\n                              <option key={CD.id} value={CD.id}>\n                                {CD.cd_name}\n                              </option>\n                            );\n                          })}\n                        </Form.Control>\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please provide a cd.\n                        </Form.Control.Feedback>\n                        <Form.Control.Feedback>\n                          Looks good!\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                    </Col>\n                  </Form.Row>\n                  <Form.Row>\n                    <Col lg=\"6\">\n                      <Form.Group as={Col} controlId=\"score\">\n                        <Form.Label>Score</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"\"\n                          defaultValue={props.presentation.score}\n                          onChange={(e) => setScore(e.target.value)}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please provide a score.\n                        </Form.Control.Feedback>\n                        <Form.Control.Feedback>\n                          Looks good!\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                    </Col>\n                    <Col lg=\"6\">\n                      <Form.Group as={Col} controlId=\"audio\">\n                        <Form.Label>Audio</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"\"\n                          defaultValue={props.presentation.audio}\n                          onChange={(e) => setAudio(e.target.value)}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please provide audo.\n                        </Form.Control.Feedback>\n                        <Form.Control.Feedback>\n                          Looks good!\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                    </Col>\n                  </Form.Row>\n                  <Form.Row>\n                    <Col lg=\"6\">\n                      <Form.Group as={Col} controlId=\"category\">\n                        <Form.Label>Category</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          onChange={(e) => setCategory(e.target.value)}\n                          onBlur={(e) => setCategory(e.target.value)}\n                          defaultValue={parseInt(\n                            props.presentation.category,\n                            10\n                          )}\n                        >\n                          <option value=\"\"></option>\n                          {props.presentation.category > 0 ? (\n                            <option\n                              defaultValue={props.presentation.category}\n                              selected\n                            >\n                              {props.categories\n                                .filter(\n                                  (category) =>\n                                    category.id ===\n                                    parseInt(props.presentation.category, 10)\n                                )\n                                .map((category) => category.name)}\n                            </option>\n                          ) : (\n                            \"\"\n                          )}\n                          {props.categories.map((category) => {\n                            return (\n                              <option value={category.id}>\n                                {category.name}\n                              </option>\n                            );\n                          })}\n                        </Form.Control>\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please select a category.\n                        </Form.Control.Feedback>\n                        <Form.Control.Feedback>\n                          Looks good!\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                    </Col>\n                    <Col lg=\"6\">\n                      <Form.Group as={Col} controlId=\"video\">\n                        <Form.Label>Video</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          rows=\"3\"\n                          onChange={(e) => setVideo(e.target.value)}\n                          defaultValue={props.presentation.video}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          Please provide a video.\n                        </Form.Control.Feedback>\n                        <Form.Control.Feedback>\n                          Looks good!\n                        </Form.Control.Feedback>\n                      </Form.Group>\n                    </Col>\n                  </Form.Row>\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"content\">\n                      <CKEditor\n                        editor={ClassicEditor}\n                        data={\n                          props.presentation.synopsis\n                            ? props.presentation.synopsis\n                            : field_synopsis\n                        }\n                        toolbar={\n                          (\"heading\",\n                          \"|\",\n                          \"bold\",\n                          \"italic\",\n                          \"link\",\n                          \"bulletedList\",\n                          \"numberedList\",\n                          \"blockQuote\")\n                        }\n                        onInit={(editor) => {\n                          // You can store the \"editor\" and use when it is needed.\n                          // console.log( 'Editor is ready to use!', editor );\n                        }}\n                        onChange={(event, editor) => {\n                          const data = editor.getData();\n                          // console.log( { event, editor, data } );\n                          setSynopsis(\n                            data ? data : props.presentation.synopsis\n                          );\n                        }}\n                        onBlur={(event, editor) => {\n                          const data = editor.getData();\n                          console.log(\"Blur.\", editor);\n                          setSynopsis(\n                            data ? data : props.presentation.synopsis\n                          );\n                        }}\n                        onFocus={(event, editor) => {\n                          console.log(\"Focus.\", editor);\n                        }}\n                      />\n                    </Form.Group>\n                  </Form.Row>\n                  <Button type=\"submit\">\n                    {Object.keys(props.presentation).length > 0\n                      ? \"Update Publication\"\n                      : \"Create Publication\"}\n                  </Button>{\" \"}\n                  <Button>Delete Publication</Button>\n                </Form>\n              </section>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\nfunction mapStateToProps(state) {\n  return {\n    allPresentations: _.orderBy(state.AllPresentationsReducer, \"id\", \"asc\"),\n    categories: state.musicReducer.categories,\n    presentation: state.presentationReducer,\n    presentationImages: state.postImagesReducer,\n    allCds: state.cdsReducer,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({ mainAction }, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPublication);\n"]},"metadata":{},"sourceType":"module"}