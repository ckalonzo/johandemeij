{"ast":null,"code":"import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";import{db}from\"../../firebase\";import _ from'lodash';var initialState={};export default function postsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.LOAD_POSTS:{var stateCopy='';//=======================================================\ndb.collection(\"posts\").where(\"showPost\",'==','1').orderBy('postDate','desc').get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){return doc.data();});stateCopy=data;//=======================================================\ndb.collection(\"postimages\").get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){return doc.data();});stateCopy.map(function(post,i){return stateCopy[i].image=data.filter(function(image){return image.albumID===stateCopy[i].ID;});});action.asyncDispatch(mainAction(ACTIONS.LOAD_POSTS_SUCCESS,stateCopy));});//========================================================\n});return state;}case ACTIONS.LOAD_POSTS_SUCCESS:{return action.payload;}case ACTIONS.LOAD_POSTS_FAIL:{return state;}case ACTIONS.LOAD_DASHBOARD_POSTS:{fetch('http://127.0.0.1:5021/api/loadAllPosts').then(function(data){return data.json();}).then(function(res){action.asyncDispatch(mainAction(ACTIONS.LOAD_DASHBOARD_POSTS_SUCCESS,res.data));}).catch(function(err){return action.asyncDispatch(mainAction(ACTIONS.LOAD_DASHBOARD_POSTS_FAIL,err));});return state;}case ACTIONS.LOAD_DASHBOARD_POSTS_SUCCESS:{var _stateCopy=action.payload;var imageName=[];fetch('http://127.0.0.1:5021/api/loadPostImages').then(function(data){return data.json();}).then(function(res){action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_IMAGES_SUCCESS,res.data));imageName=_stateCopy.map(function(post){post.image=Object.values(res.data).filter(function(image){return image.albumID===post.ID;}).map(function(postImage){return postImage;});});}).catch(function(err){return action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_IMAGES_FAIL,err));});return _stateCopy;}case ACTIONS.LOAD_DASHBOARD_POSTS_FAIL:{return state;}default:return state;}}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/posts.reducer.js"],"names":["ACTIONS","mainAction","db","_","initialState","postsReducer","state","action","type","LOAD_POSTS","stateCopy","collection","where","orderBy","get","then","querySnapshot","data","docs","map","doc","post","i","image","filter","albumID","ID","asyncDispatch","LOAD_POSTS_SUCCESS","payload","LOAD_POSTS_FAIL","LOAD_DASHBOARD_POSTS","fetch","json","res","LOAD_DASHBOARD_POSTS_SUCCESS","catch","err","LOAD_DASHBOARD_POSTS_FAIL","imageName","LOAD_POST_IMAGES_SUCCESS","Object","values","postImage","LOAD_POST_IMAGES_FAIL"],"mappings":"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","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { db } from \"../../firebase\";\nimport _ from 'lodash'\nconst initialState = {};\nexport default function postsReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_POSTS: {\n      let stateCopy = ''\n       //=======================================================\n      db.collection(\"posts\")\n      .where(\"showPost\",'==','1')\n      .orderBy('postDate','desc')\n      .get()\n      .then(querySnapshot => {\n        const data = querySnapshot.docs.map(doc => doc.data());\n        stateCopy = data;\n\n        //=======================================================\n          db.collection(\"postimages\")\n          .get()\n          .then(querySnapshot => {\n            const data = querySnapshot.docs.map(doc => doc.data());\n            stateCopy.map((post,i)=>{\n            return stateCopy[i].image = data.filter(image => image.albumID === stateCopy[i].ID)\n            })\n            action.asyncDispatch(mainAction(ACTIONS.LOAD_POSTS_SUCCESS,stateCopy))\n          });\n        //========================================================\n      });\n        return state\n      }\n      case ACTIONS.LOAD_POSTS_SUCCESS: {\n\n        return action.payload\n      }\n      case ACTIONS.LOAD_POSTS_FAIL: {\n\n        return state\n      }\n      case ACTIONS.LOAD_DASHBOARD_POSTS: {\n        \n        fetch('http://127.0.0.1:5021/api/loadAllPosts')\n         .then((data) => data.json())\n         .then((res) => {\n           action.asyncDispatch(mainAction(ACTIONS.LOAD_DASHBOARD_POSTS_SUCCESS,res.data))\n         }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_DASHBOARD_POSTS_FAIL,err)))\n        \n         return state\n       }\n       case ACTIONS.LOAD_DASHBOARD_POSTS_SUCCESS: {\n         let stateCopy = action.payload\n         let imageName = []\n         fetch('http://127.0.0.1:5021/api/loadPostImages')\n             .then((data) => data.json())\n             .then((res) => {\n               action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_IMAGES_SUCCESS,res.data))\n               imageName = stateCopy.map(post => {\n                 post.image = Object.values(res.data).filter(image => image.albumID === post.ID).map(postImage =>{\n                   return postImage\n                 })\n   \n               })\n             }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_IMAGES_FAIL,err)))\n             \n         return stateCopy\n       }\n       case ACTIONS.LOAD_DASHBOARD_POSTS_FAIL: {\n \n         return state\n       }\n      default: \n        return state\n        \n    }\n  }"]},"metadata":{},"sourceType":"module"}