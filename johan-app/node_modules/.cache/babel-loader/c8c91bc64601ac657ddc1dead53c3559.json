{"ast":null,"code":"import _objectSpread from\"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";import{db}from\"../../firebase\";import _ from\"lodash\";var initialState={};export default function catalogueReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.LOAD_MUSIC_CATALOGUE:{db.collection(\"musicalbums\").orderBy(\"catalogueNumber\",\"asc\").get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){return doc.data();});action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_CATALOGUE_SUCCESS,data));});return state;}case ACTIONS.LOAD_MUSIC_CATALOGUE_SUCCESS:{return action.payload;}case ACTIONS.LOAD_MUSIC_CATALOGUE_FAIL:{return state;}case ACTIONS.CREATE_CATALOGUE:{console.log(action);var stateCopy=_.cloneDeep(action.payload);db.collection(\"musicalbums\").add(stateCopy).then(function(docRef){console.log(docRef);stateCopy._id=docRef.id;action.asyncDispatch(mainAction(ACTIONS.CREATE_CATALOGUE_SUCCESS,stateCopy));});return state;}case ACTIONS.CREATE_CATALOGUE_SUCCESS:{return action.payload;}case ACTIONS.DELETE_CATALOGUE:{db.collection(\"musicalbums\").where('id','==',action.payload).get().then(function(querySnapshot){querySnapshot.forEach(function(doc){return doc.ref.delete();});action.asyncDispatch(mainAction(ACTIONS.DELETE_CATALOGUE_SUCCESS,[]));});return state;}case ACTIONS.DELETE_CATALOGUE_SUCCESS:{action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_CATALOGUE,[]));return state;}case ACTIONS.DELETE_CATALOGUE_FAIL:{return state;}case ACTIONS.LOAD_CATALOGUE:{db.collection(\"musicalbums\").where(\"id\",'==',action.payload).get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){return doc.data();});action.asyncDispatch(mainAction.apply(void 0,[ACTIONS.LOAD_CATALOGUE_SUCCESS].concat(_toConsumableArray(data))));});return state;}case ACTIONS.LOAD_CATALOGUE_SUCCESS:{return action.payload?action.payload:state;}case ACTIONS.LOAD_CATALOGUE_FAIL:{return state;}case ACTIONS.UPDATE_CATALOGUE:{var _stateCopy=_.cloneDeep(action.payload);if(_stateCopy.id)db.collection(\"musicalbums\").where(\"id\",'==',_stateCopy.id).get().then(function(querySnapshot){var _id='';var data=querySnapshot.docs.map(function(doc){_id=doc.id;return doc.data();});db.collection(\"musicalbums\").doc(_id).update(_stateCopy).then(function(){console.log(data);action.asyncDispatch(mainAction(ACTIONS.UPDATE_CATALOGUE_SUCCESS,_stateCopy));});});return state;}case ACTIONS.UPDATE_CATALOGUE_SUCCESS:{return state;}case ACTIONS.UPDATE_CATALOGUE_FAIL:{return state;}default:return _objectSpread({},state);}}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/musicCatalogue.reducer.js"],"names":["ACTIONS","mainAction","db","_","initialState","catalogueReducer","state","action","type","LOAD_MUSIC_CATALOGUE","collection","orderBy","get","then","querySnapshot","data","docs","map","doc","asyncDispatch","LOAD_MUSIC_CATALOGUE_SUCCESS","payload","LOAD_MUSIC_CATALOGUE_FAIL","CREATE_CATALOGUE","console","log","stateCopy","cloneDeep","add","docRef","_id","id","CREATE_CATALOGUE_SUCCESS","DELETE_CATALOGUE","where","forEach","ref","delete","DELETE_CATALOGUE_SUCCESS","DELETE_CATALOGUE_FAIL","LOAD_CATALOGUE","LOAD_CATALOGUE_SUCCESS","LOAD_CATALOGUE_FAIL","UPDATE_CATALOGUE","update","UPDATE_CATALOGUE_SUCCESS","UPDATE_CATALOGUE_FAIL"],"mappings":"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","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { db } from \"../../firebase\";\nimport _ from \"lodash\"\nconst initialState = {};\nexport default function catalogueReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_MUSIC_CATALOGUE: {\n      db.collection(\"musicalbums\")\n      .orderBy(\"catalogueNumber\",\"asc\")\n      .get()\n      .then(querySnapshot => {\n        const data = querySnapshot.docs.map(doc => doc.data());\n        action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_CATALOGUE_SUCCESS,data))\n      });\n\n\n        return state\n      }\n      case ACTIONS.LOAD_MUSIC_CATALOGUE_SUCCESS: {\n        return action.payload\n      }\n      case ACTIONS.LOAD_MUSIC_CATALOGUE_FAIL: {\n\n        return state\n      }\n      case ACTIONS.CREATE_CATALOGUE:{\n        console.log(action)\n        let stateCopy = _.cloneDeep(action.payload)\n      \n        db.collection(\"musicalbums\")\n          .add(stateCopy)\n          .then(function(docRef){\n            console.log(docRef)\n            stateCopy._id = docRef.id\n            action.asyncDispatch(mainAction(ACTIONS.CREATE_CATALOGUE_SUCCESS,stateCopy))\n          });\n          return state\n      }\n      case ACTIONS.CREATE_CATALOGUE_SUCCESS: {\n        return action.payload\n      }\n      case ACTIONS.DELETE_CATALOGUE:{\n        db.collection(\"musicalbums\")\n        .where('id','==',action.payload)\n         .get()\n         .then((querySnapshot) => {\n           querySnapshot.forEach((doc)=> doc.ref.delete())\n           action.asyncDispatch(mainAction(ACTIONS.DELETE_CATALOGUE_SUCCESS,[]))\n         });\n        return state\n      }\n      case ACTIONS.DELETE_CATALOGUE_SUCCESS:{\n        action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_CATALOGUE,[]))\n        return state\n      }\n      case ACTIONS.DELETE_CATALOGUE_FAIL:{\n        return state\n      }\n      case ACTIONS.LOAD_CATALOGUE:{\n        db.collection(\"musicalbums\")\n        .where(\"id\",'==',action.payload)\n          .get()\n          .then(querySnapshot => {\n            const data = querySnapshot.docs.map(doc => doc.data());\n            action.asyncDispatch(mainAction(ACTIONS.LOAD_CATALOGUE_SUCCESS,...data))\n          });\n        return state\n      }\n      case ACTIONS.LOAD_CATALOGUE_SUCCESS:{\n        \n        return action.payload ? action.payload : state\n      }\n      case ACTIONS.LOAD_CATALOGUE_FAIL:{\n        return state\n      }\n      case ACTIONS.UPDATE_CATALOGUE:{\n        let stateCopy = _.cloneDeep(action.payload)\n        \n        if(stateCopy.id)\n        db.collection(\"musicalbums\")\n        .where(\"id\",'==',stateCopy.id)\n          .get()\n          .then(querySnapshot => {\n            let _id = ''\n            const data = querySnapshot.docs.map(doc => {\n              _id = doc.id\n              return doc.data()});\n           db.collection(\"musicalbums\").doc(_id)\n            .update(stateCopy).then(()=>{\n              console.log(data)\n              action.asyncDispatch(mainAction(ACTIONS.UPDATE_CATALOGUE_SUCCESS,stateCopy))\n            });\n          });\n       \n        return state\n      }\n      case ACTIONS.UPDATE_CATALOGUE_SUCCESS:{\n        return state\n      }\n      case ACTIONS.UPDATE_CATALOGUE_FAIL:{\n        return state\n      }\n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}