{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/websites/johandemeij-master/johan-app/src/components/dashboard/PostImage.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { mainAction } from \"redux/actions/index.actions\";\n\nconst ProfileImage = () => {\n  const [selectedFile, setSelectedFile] = useState();\n  const [uploadStatus, setUploadStatus] = useState(false);\n  const [caption, setCaption] = useState(props.postImage.caption);\n  const [disabled, setDisabled] = useState(false);\n  const [file, setFile] = useState();\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `Johan De Meij | Edit Post`;\n    props.actions.mainAction(ACTIONS.LOAD_POST_IMAGES, []); //if(props.postImages)\n\n    let image = Object.values(props.postImages).filter(postImage => postImage.albumID === ID);\n    props.actions.mainAction(ACTIONS.LOAD_POST_IMAGE, {\n      image,\n      ID\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    id: \"images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleImageSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 4\n    },\n    className: \"post-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: selectedFile ? selectedFile : \"/images/missing.png\",\n    onClick: e => selecteImageToUpload(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 4\n    },\n    className: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, \"Caption\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: caption,\n    onChange: e => setCaption(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Please provide a caption.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Looks good!\")))), /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 4\n    },\n    className: \"action-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }\n  }, renderUploadButtons(), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"post-image\",\n    onChange: e => onChangeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 85\n    }\n  })))));\n};\n\nconst handleImageSubmit = e => {};\n\nconst uploadImage = () => {\n  props.actions.mainAction(ACTIONS.UPLOAD_IMAGE, file);\n  setUploadStatus(true);\n};\n\nconst onChangeHandler = e => {\n  setSelectedFile(window.URL.createObjectURL(e.target.files[0]));\n  setFile(e.target.files[0]);\n};\n\nconst renderUploadButtons = () => {\n  if (selectedFile && !uploadStatus) return /*#__PURE__*/React.createElement(Button, {\n    variant: \"dark\",\n    onClick: () => uploadImage(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }\n  }, \"upload\");\n  return /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: e => selecteImageToUpload(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }\n  }, \"change image\");\n};\n\nconst selecteImageToUpload = e => {\n  document.querySelector('input#post-image').click();\n};\n\nexport default ProfileImage;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johandemeij-master/johan-app/src/components/dashboard/PostImage.jsx"],"names":["React","useEffect","useState","mainAction","ProfileImage","selectedFile","setSelectedFile","uploadStatus","setUploadStatus","caption","setCaption","props","postImage","disabled","setDisabled","file","setFile","document","title","actions","ACTIONS","LOAD_POST_IMAGES","image","Object","values","postImages","filter","albumID","ID","LOAD_POST_IMAGE","validated","handleImageSubmit","span","e","selecteImageToUpload","Col","target","value","renderUploadButtons","onChangeHandler","uploadImage","UPLOAD_IMAGE","window","URL","createObjectURL","files","querySelector","click"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { mainAction } from \"redux/actions/index.actions\"\n\nconst ProfileImage = () => {\n    const [selectedFile,setSelectedFile] = useState()\n    const [uploadStatus,setUploadStatus] = useState(false)\n    const [caption,setCaption] = useState(props.postImage.caption)\n    const [disabled,setDisabled] = useState(false)\n    const [file,setFile] = useState()\n    useEffect(() => {\n        // Update the document title using the browser API\n        document.title = `Johan De Meij | Edit Post`;\n        props.actions.mainAction(ACTIONS.LOAD_POST_IMAGES,[])\n        //if(props.postImages)\n        let image = Object.values(props.postImages).filter(postImage => postImage.albumID === ID)\n        props.actions.mainAction(ACTIONS.LOAD_POST_IMAGE,{image,ID})\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, []);\n    return(\n        <section id=\"images\">\n          <Form noValidate validated={validated} onSubmit={handleImageSubmit}>\n            <Row>\n            <Col lg={{span:4}} className=\"post-image\">\n              <img src={selectedFile ? selectedFile :\"/images/missing.png\"}  onClick={(e)=>selecteImageToUpload(e)} />\n            </Col>\n             <Col lg={{span:4}} className=\"caption\">\n             <Form.Row>\n                  <Form.Group as={Col}  controlId=\"caption\">\n                    <Form.Label>Caption</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"\"\n                      defaultValue={caption}\n                      onChange={e => setCaption(e.target.value)}\n                      \n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a caption.\n                      </Form.Control.Feedback>\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Form.Group>\n                  </Form.Row>\n               </Col>\n               <Col lg={{span:4}}  className=\"action-button\">{renderUploadButtons()}<input type=\"file\" id=\"post-image\" onChange={(e)=>onChangeHandler(e)}/></Col>\n               </Row>\n            </Form>\n          </section>\n    )\n}\nconst handleImageSubmit = (e) => {\n\n}\nconst uploadImage = () => {\n    props.actions.mainAction(ACTIONS.UPLOAD_IMAGE,file)\n    setUploadStatus(true)\n  }\n  const onChangeHandler = (e) => {\n    setSelectedFile(window.URL.createObjectURL(e.target.files[0]))\n    setFile(e.target.files[0])\n  } \n\n  const renderUploadButtons = () => {\n    if(selectedFile && !uploadStatus)\n    return <Button variant=\"dark\" onClick={()=>uploadImage()}>upload</Button>\n    return <Button variant=\"primary\" onClick={(e)=>selecteImageToUpload(e)}>change image</Button>\n  }\n  const selecteImageToUpload = (e) => {\n    document.querySelector('input#post-image').click()\n  }\n\n  export default ProfileImage"]},"metadata":{},"sourceType":"module"}