{"ast":null,"code":"export const asyncDispatchMiddleware = store => next => action => {\n  let syncActivityFinished = false;\n  let actionQueue = [];\n\n  function flushQueue() {\n    actionQueue.forEach(a => {\n      store.dispatch(a);\n    }); // flush queue\n\n    actionQueue = [];\n  }\n\n  function asyncDispatch(asyncAction, param) {\n    if (!param) {\n      actionQueue = actionQueue.concat([asyncAction]);\n    } else {\n      actionQueue = actionQueue.concat([asyncAction]);\n    }\n\n    if (syncActivityFinished) {\n      flushQueue();\n    }\n  }\n\n  const actionWithAsyncDispatch = Object.assign({}, action, {\n    asyncDispatch\n  });\n  next(actionWithAsyncDispatch);\n  syncActivityFinished = true;\n  flushQueue();\n};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johandemeij-master/johan-app/src/utils/reducerAsyncHelper.js"],"names":["asyncDispatchMiddleware","store","next","action","syncActivityFinished","actionQueue","flushQueue","forEach","a","dispatch","asyncDispatch","asyncAction","param","concat","actionWithAsyncDispatch","Object","assign"],"mappings":"AAAA,OAAO,MAAMA,uBAAuB,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AAC9D,MAAIC,oBAAoB,GAAG,KAA3B;AACA,MAAIC,WAAW,GAAG,EAAlB;;AAEA,WAASC,UAAT,GAAsB;AACpBD,IAAAA,WAAW,CAACE,OAAZ,CAAoBC,CAAC,IAAI;AACvBP,MAAAA,KAAK,CAACQ,QAAN,CAAeD,CAAf;AACD,KAFD,EADoB,CAGhB;;AACJH,IAAAA,WAAW,GAAG,EAAd;AACD;;AAED,WAASK,aAAT,CAAuBC,WAAvB,EAAoCC,KAApC,EAA2C;AACzC,QAAI,CAACA,KAAL,EAAW;AACTP,MAAAA,WAAW,GAAGA,WAAW,CAACQ,MAAZ,CAAmB,CAACF,WAAD,CAAnB,CAAd;AACD,KAFD,MAEO;AACLN,MAAAA,WAAW,GAAGA,WAAW,CAACQ,MAAZ,CAAmB,CAACF,WAAD,CAAnB,CAAd;AACD;;AAED,QAAIP,oBAAJ,EAA0B;AACxBE,MAAAA,UAAU;AACX;AACF;;AAED,QAAMQ,uBAAuB,GACzBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBb,MAAlB,EAA0B;AAAEO,IAAAA;AAAF,GAA1B,CADJ;AAGAR,EAAAA,IAAI,CAACY,uBAAD,CAAJ;AACAV,EAAAA,oBAAoB,GAAG,IAAvB;AACAE,EAAAA,UAAU;AACX,CA7BI","sourcesContent":["export const asyncDispatchMiddleware = store => next => action => {\n    let syncActivityFinished = false;\n    let actionQueue = [];\n  \n    function flushQueue() {\n      actionQueue.forEach(a => {\n        store.dispatch(a)\n      }); // flush queue\n      actionQueue = [];\n    }\n  \n    function asyncDispatch(asyncAction, param) {\n      if (!param){\n        actionQueue = actionQueue.concat([asyncAction]);\n      } else {\n        actionQueue = actionQueue.concat([asyncAction]);\n      }\n      \n      if (syncActivityFinished) {\n        flushQueue();\n      }\n    }\n  \n    const actionWithAsyncDispatch =\n        Object.assign({}, action, { asyncDispatch });\n  \n    next(actionWithAsyncDispatch);\n    syncActivityFinished = true;\n    flushQueue();\n  };   "]},"metadata":{},"sourceType":"module"}