{"ast":null,"code":"import _objectSpread from\"/Users/carlkalonzo/Documents/DEV/johandemeij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";import{updateEvent}from\"API/indexAPI\";import{db}from\"../../firebase\";import _ from'lodash';var initialState={};export default function eventsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.LOAD_EVENTS:{db.collection(\"events\").where(\"id\",'==','53').get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){return doc.data();});action.asyncDispatch(mainAction(ACTIONS.LOAD_EVENT_SUCCESS,data));});return state;}case ACTIONS.LOAD_EVENTS_SUCCESS:{return action.payload;}case ACTIONS.LOAD_EVENTS_FAIL:{return state;}case ACTIONS.LOAD_EVENT:{db.collection(\"events\").where(\"id\",'==','53').get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){return doc.data();});action.asyncDispatch(mainAction(ACTIONS.LOAD_EVENT_SUCCESS,data));});return state;}case ACTIONS.LOAD_EVENT_SUCCESS:{return action.payload;}case ACTIONS.LOAD_EVENT_FAIL:{return state;}case ACTIONS.UPDATE_EVENT:{db.collection(\"events\").doc(\"aa193720-9482-11ea-9b06-bd9ba17d908b\").update(action.payload).then(function(){action.asyncDispatch(mainAction(ACTIONS.UPDATE_EVENT_SUCCESS,action.payload));});return state;}case ACTIONS.UPDATE_EVENT_SUCCESS:{return state;}case ACTIONS.UPDATE_EVENT_FAIL:{return state;}default:return _objectSpread({},state);}}","map":{"version":3,"sources":["/Users/carlkalonzo/Documents/DEV/johandemeij/johan-app/src/redux/reducers/events.reducer.js"],"names":["ACTIONS","mainAction","updateEvent","db","_","initialState","eventsReducer","state","action","type","LOAD_EVENTS","collection","where","get","then","querySnapshot","data","docs","map","doc","asyncDispatch","LOAD_EVENT_SUCCESS","LOAD_EVENTS_SUCCESS","payload","LOAD_EVENTS_FAIL","LOAD_EVENT","LOAD_EVENT_FAIL","UPDATE_EVENT","update","UPDATE_EVENT_SUCCESS","UPDATE_EVENT_FAIL"],"mappings":"4KAAA,OAASA,OAAT,KAAwB,wBAAxB,CACA,OAASC,UAAT,KAA2B,6BAA3B,CACA,OAAQC,WAAR,KAA0B,cAA1B,CACA,OAASC,EAAT,KAAmB,gBAAnB,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CACA,GAAMC,CAAAA,YAAY,CAAG,EAArB,CACA,cAAe,SAASC,CAAAA,aAAT,EAAsD,IAA9BC,CAAAA,KAA8B,2DAAtBF,YAAsB,IAARG,CAAAA,MAAQ,2CACjE,OAAQA,MAAM,CAACC,IAAf,EAEE,IAAKT,CAAAA,OAAO,CAACU,WAAb,CAA0B,CACxBP,EAAE,CAACQ,UAAH,CAAc,QAAd,EACAC,KADA,CACM,IADN,CACW,IADX,CACgB,IADhB,EAECC,GAFD,GAGCC,IAHD,CAGM,SAAAC,aAAa,CAAI,CACrB,GAAMC,CAAAA,IAAI,CAAGD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAuB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACH,IAAJ,EAAJ,EAA1B,CAAb,CACAR,MAAM,CAACY,aAAP,CAAqBnB,UAAU,CAACD,OAAO,CAACqB,kBAAT,CAA4BL,IAA5B,CAA/B,EACD,CAND,EAOA,MAAOT,CAAAA,KAAP,CACD,CACD,IAAKP,CAAAA,OAAO,CAACsB,mBAAb,CAAkC,CAChC,MAAOd,CAAAA,MAAM,CAACe,OAAd,CACD,CACD,IAAKvB,CAAAA,OAAO,CAACwB,gBAAb,CAA+B,CAE7B,MAAOjB,CAAAA,KAAP,CACD,CACD,IAAKP,CAAAA,OAAO,CAACyB,UAAb,CAAwB,CACtBtB,EAAE,CAACQ,UAAH,CAAc,QAAd,EACAC,KADA,CACM,IADN,CACW,IADX,CACgB,IADhB,EAECC,GAFD,GAGCC,IAHD,CAGM,SAAAC,aAAa,CAAI,CACrB,GAAMC,CAAAA,IAAI,CAAGD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAuB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACH,IAAJ,EAAJ,EAA1B,CAAb,CACAR,MAAM,CAACY,aAAP,CAAqBnB,UAAU,CAACD,OAAO,CAACqB,kBAAT,CAA4BL,IAA5B,CAA/B,EACD,CAND,EAQA,MAAOT,CAAAA,KAAP,CACD,CACD,IAAKP,CAAAA,OAAO,CAACqB,kBAAb,CAAgC,CAC9B,MAAOb,CAAAA,MAAM,CAACe,OAAd,CACD,CACD,IAAKvB,CAAAA,OAAO,CAAC0B,eAAb,CAA6B,CAC3B,MAAOnB,CAAAA,KAAP,CACD,CACD,IAAKP,CAAAA,OAAO,CAAC2B,YAAb,CAA2B,CACzBxB,EAAE,CAACQ,UAAH,CAAc,QAAd,EAAwBQ,GAAxB,CAA4B,sCAA5B,EACCS,MADD,CACQpB,MAAM,CAACe,OADf,EACwBT,IADxB,CAC6B,UAAI,CAC9BN,MAAM,CAACY,aAAP,CAAqBnB,UAAU,CAACD,OAAO,CAAC6B,oBAAT,CAA8BrB,MAAM,CAACe,OAArC,CAA/B,EACF,CAHD,EAIA,MAAOhB,CAAAA,KAAP,CACD,CACD,IAAKP,CAAAA,OAAO,CAAC6B,oBAAb,CAAmC,CACjC,MAAOtB,CAAAA,KAAP,CACD,CACD,IAAKP,CAAAA,OAAO,CAAC8B,iBAAb,CAAgC,CAE9B,MAAOvB,CAAAA,KAAP,CACD,CAED,QACE,wBACKA,KADL,EApDJ,CAwDD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport {updateEvent} from \"API/indexAPI\"\nimport { db } from \"../../firebase\";\nimport _ from 'lodash'\nconst initialState = {};\nexport default function eventsReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_EVENTS: {\n        db.collection(\"events\")\n       .where(\"id\",'==','53')\n        .get()\n        .then(querySnapshot => {\n          const data = querySnapshot.docs.map(doc => doc.data());\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_EVENT_SUCCESS,data))\n        });\n        return state\n      }\n      case ACTIONS.LOAD_EVENTS_SUCCESS: {\n        return action.payload\n      }\n      case ACTIONS.LOAD_EVENTS_FAIL: {\n\n        return state\n      }\n      case ACTIONS.LOAD_EVENT:{\n        db.collection(\"events\")\n       .where(\"id\",'==','53')\n        .get()\n        .then(querySnapshot => {\n          const data = querySnapshot.docs.map(doc => doc.data());\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_EVENT_SUCCESS,data))\n        });\n\n        return state\n      }\n      case ACTIONS.LOAD_EVENT_SUCCESS:{\n        return action.payload\n      }\n      case ACTIONS.LOAD_EVENT_FAIL:{\n        return state\n      }\n      case ACTIONS.UPDATE_EVENT: {\n        db.collection(\"events\").doc(\"aa193720-9482-11ea-9b06-bd9ba17d908b\")\n        .update(action.payload).then(()=>{\n           action.asyncDispatch(mainAction(ACTIONS.UPDATE_EVENT_SUCCESS,action.payload))\n        });\n        return state\n      }\n      case ACTIONS.UPDATE_EVENT_SUCCESS: {\n        return state\n      }\n      case ACTIONS.UPDATE_EVENT_FAIL: {\n\n        return state\n      }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}