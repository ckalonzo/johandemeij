{"ast":null,"code":"import { ACTIONS } from 'redux/actions/types.js';\nimport { mainAction } from \"redux/actions/index.actions\";\nimport { db } from \"../../firebase\";\nimport _ from \"lodash\";\nconst initialState = {};\nexport default function pageReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.LOAD_PAGE:\n      {\n        db.collection(\"pages\").where('id', '==', action.payload).get().then(snapshop => {\n          const data = snapshot.docs.map(doc => {\n            return doc.data();\n          });\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_PAGE_SUCCESS, data));\n        });\n        return state;\n      }\n\n    case ACTIONS.LOAD_PAGE_SUCCESS:\n      {\n        return action.payload;\n      }\n\n    case ACTIONS.LOAD_PAGES:\n      {\n        return state;\n      }\n\n    case ACTIONS.LOAD_PAGES_SUCCESS:\n      {\n        return state;\n      }\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/Users/laurakalonzo/Documents/DEV/johandemeij/johan-app/src/redux/reducers/pages.reducer.js"],"names":["ACTIONS","mainAction","db","_","initialState","pageReducer","state","action","type","LOAD_PAGE","collection","where","payload","get","then","snapshop","data","snapshot","docs","map","doc","asyncDispatch","LOAD_PAGE_SUCCESS","LOAD_PAGES","LOAD_PAGES_SUCCESS"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,EAAT,QAAkB,gBAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,MAAMC,YAAY,GAAG,EAArB;AAGA,eAAe,SAASC,WAAT,CAAsBC,KAAK,GAAGF,YAA9B,EAA4CG,MAA5C,EAAoD;AAC/D,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKR,OAAO,CAACS,SAAb;AAAwB;AACtBP,QAAAA,EAAE,CAACQ,UAAH,CAAc,OAAd,EACCC,KADD,CACO,IADP,EACY,IADZ,EACiBJ,MAAM,CAACK,OADxB,EAECC,GAFD,GAGCC,IAHD,CAGOC,QAAD,IAAc;AAChB,gBAAMC,IAAI,GAAGC,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,GAAG,IAAI;AAAC,mBAAOA,GAAG,CAACJ,IAAJ,EAAP;AAAkB,WAA5C,CAAb;AACAT,UAAAA,MAAM,CAACc,aAAP,CAAqBpB,UAAU,CAACD,OAAO,CAACsB,iBAAT,EAA2BN,IAA3B,CAA/B;AACH,SAND;AAOA,eAAOV,KAAP;AACD;;AACD,SAAMN,OAAO,CAACsB,iBAAd;AAAiC;AAE/B,eAAOf,MAAM,CAACK,OAAd;AACD;;AACD,SAAKZ,OAAO,CAACuB,UAAb;AAAyB;AACvB,eAAOjB,KAAP;AACD;;AACD,SAAMN,OAAO,CAACwB,kBAAd;AAAkC;AAEhC,eAAOlB,KAAP;AACD;;AAED;AACE,aAAO,EACL,GAAGA;AADE,OAAP;AAzBJ;AA6BD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { db} from \"../../firebase\";\nimport _ from \"lodash\"\nconst initialState = {\n   \n};\nexport default function pageReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_PAGE: {\n        db.collection(\"pages\")\n        .where('id','==',action.payload)\n        .get()\n        .then((snapshop) => {\n            const data = snapshot.docs.map(doc => {return doc.data()});\n            action.asyncDispatch(mainAction(ACTIONS.LOAD_PAGE_SUCCESS,data))\n        })\n        return state\n      }\n      case  ACTIONS.LOAD_PAGE_SUCCESS: {\n     \n        return action.payload\n      }\n      case ACTIONS.LOAD_PAGES: {\n        return state\n      }\n      case  ACTIONS.LOAD_PAGES_SUCCESS: {\n     \n        return state\n      }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}