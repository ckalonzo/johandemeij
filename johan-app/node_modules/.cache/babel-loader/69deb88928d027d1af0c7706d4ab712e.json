{"ast":null,"code":"import { ACTIONS } from 'redux/actions/types.js';\nimport { mainAction } from \"redux/actions/index.actions\";\nimport _ from \"lodash\";\nconst initialState = {};\nexport default function postsReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.LOAD_POSTS:\n      {\n        let stateCopy = _.cloneDeep(state);\n\n        fetch('http://localhost:3001/api/loadPosts').then(data => data.json()).then(res => {\n          fetch('http://localhost:3001/api/loadPostImages').then(data => data.json()).then(res => {\n            action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_IMAGES_SUCCESS, res.data));\n          }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_IMAGES_FAIL, err)));\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_POSTS_SUCCESS, res.data));\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_POSTS_FAIL, err)));\n        return stateCopy;\n      }\n\n    case ACTIONS.LOAD_POSTS_SUCCESS:\n      {\n        console.log(state);\n        return action.payload;\n      }\n\n    case ACTIONS.LOAD_POSTS_FAIL:\n      {\n        return state;\n      }\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johandemeij-master/johan-app/src/redux/reducers/posts.reducer.js"],"names":["ACTIONS","mainAction","_","initialState","postsReducer","state","action","type","LOAD_POSTS","stateCopy","cloneDeep","fetch","then","data","json","res","asyncDispatch","LOAD_POST_IMAGES_SUCCESS","catch","err","LOAD_POST_IMAGES_FAIL","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAIL","console","log","payload"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,eAAe,SAASC,YAAT,CAAuBC,KAAK,GAAGF,YAA/B,EAA6CG,MAA7C,EAAqD;AAChE,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKP,OAAO,CAACQ,UAAb;AAAyB;AACvB,YAAIC,SAAS,GAAGP,CAAC,CAACQ,SAAF,CAAYL,KAAZ,CAAhB;;AACDM,QAAAA,KAAK,CAAC,qCAAD,CAAL,CACEC,IADF,CACQC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADjB,EAEEF,IAFF,CAEQG,GAAD,IAAS;AAEXJ,UAAAA,KAAK,CAAC,0CAAD,CAAL,CACCC,IADD,CACOC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADhB,EAECF,IAFD,CAEOG,GAAD,IAAS;AACbT,YAAAA,MAAM,CAACU,aAAP,CAAqBf,UAAU,CAACD,OAAO,CAACiB,wBAAT,EAAkCF,GAAG,CAACF,IAAtC,CAA/B;AACD,WAJD,EAIGK,KAJH,CAISC,GAAG,IAAIb,MAAM,CAACU,aAAP,CAAqBf,UAAU,CAACD,OAAO,CAACoB,qBAAT,EAA+BD,GAA/B,CAA/B,CAJhB;AAMFb,UAAAA,MAAM,CAACU,aAAP,CAAqBf,UAAU,CAACD,OAAO,CAACqB,kBAAT,EAA4BN,GAAG,CAACF,IAAhC,CAA/B;AACD,SAXF,EAWIK,KAXJ,CAWUC,GAAG,IAAIb,MAAM,CAACU,aAAP,CAAqBf,UAAU,CAACD,OAAO,CAACsB,eAAT,EAAyBH,GAAzB,CAA/B,CAXjB;AAaC,eAAOV,SAAP;AACD;;AACD,SAAKT,OAAO,CAACqB,kBAAb;AAAiC;AAC/BE,QAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAZ;AACA,eAAOC,MAAM,CAACmB,OAAd;AACD;;AACD,SAAKzB,OAAO,CAACsB,eAAb;AAA8B;AAE5B,eAAOjB,KAAP;AACD;;AAED;AACE,aAAO,EACL,GAAGA;AADE,OAAP;AA7BJ;AAiCD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport _ from \"lodash\"\n\nconst initialState = {};\nexport default function postsReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_POSTS: {\n        let stateCopy = _.cloneDeep(state)\n       fetch('http://localhost:3001/api/loadPosts')\n        .then((data) => data.json())\n        .then((res) => {\n          \n            fetch('http://localhost:3001/api/loadPostImages')\n            .then((data) => data.json())\n            .then((res) => {\n              action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_IMAGES_SUCCESS,res.data))\n            }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_IMAGES_FAIL,err)))\n\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_POSTS_SUCCESS,res.data))\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_POSTS_FAIL,err)))\n       \n        return stateCopy\n      }\n      case ACTIONS.LOAD_POSTS_SUCCESS: {\n        console.log(state)\n        return action.payload\n      }\n      case ACTIONS.LOAD_POSTS_FAIL: {\n\n        return state\n      }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}