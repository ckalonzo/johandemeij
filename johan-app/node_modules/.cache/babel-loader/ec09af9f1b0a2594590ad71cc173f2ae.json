{"ast":null,"code":"import _objectSpread from\"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";import{db,storageRef,ref,storage}from\"../../firebase\";import _ from\"lodash\";import{updatePresentationImage}from\"API/indexAPI\";var initialState={};export default function presentationReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.DELETE_PRESENTATION_IMAGE:{var presentation={};if(action.payload.imageType===\"frontCover\"){presentation={frontCover:\"\",frontCaption:\"\"};}else{presentation={backCover:\"\",backCaption:\"\"};}db.collection(\"presentations\").doc(action.payload.docId).update(presentation).then(function(){db.collection(\"postimages\").where('albumID','==',action.payload.ID).where('cover','==',action.payload.imageType).get().then(function(querySnapshot){console.log(querySnapshot.docs);querySnapshot.forEach(function(doc){console.log(doc.ref.id,doc.ref.parent,doc.ref.path);doc.ref.delete();});action.asyncDispatch(mainAction(ACTIONS.DELETE_PRESENTATION_IMAGE_SUCCESS,action.payload));});});return state;}case ACTIONS.DELETE_PRESENTATION_IMAGE_SUCCESS:{var postImageRef=storage.ref('posts/'+action.payload.name);postImageRef.delete().then(function(){return console.log(\"file deleted\");});action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION,action.payload.ID));return state;}case ACTIONS.DELETE_PRESENTATION_IMAGE_FAIL:{return action.payload;}case ACTIONS.CREATE_NEW_PUBLICATION:{var stateCopy=_.cloneDeep(action.payload);db.collection(\"presentations\").add(stateCopy).then(function(docRef){stateCopy._id=docRef.id;db.collection(\"presentations\").doc(docRef.id).update({_id:docRef.id}).then(function(){action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_PUBLICATION_SUCCESS,stateCopy));});});return stateCopy;}case ACTIONS.CREATE_NEW_PUBLICATION_SUCCESS:{return action.payload;}case ACTIONS.CREATE_NEW_PUBLICATION_FAIL:{return state;}case ACTIONS.LOAD_PRESENTATION:{var _stateCopy=_.cloneDeep(state);var _id='';db.collection(\"presentations\").where(\"id\",\"==\",action.payload).get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){//  _id=doc.id\nreturn doc.data();});_stateCopy=data;//  stateCopy[0]._id = _id\naction.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION_SUCCESS,data));});return state;}case ACTIONS.LOAD_PRESENTATION_SUCCESS:{return action.payload.length>0?action.payload[0]:[];}case ACTIONS.LOAD_PRESENTATION_FAIL:{return state;}case ACTIONS.UPDATE_PUBLICATION:{console.log(action);db.collection(\"presentations\").doc(action.payload._id).update(action.payload).then(function(){action.asyncDispatch(mainAction(ACTIONS.UPDATE_PUBLICATION_SUCCESS,action.payload));});return state;}case ACTIONS.UPDATE_PUBLICATION_SUCCESS:{var _stateCopy2=_.cloneDeep(state);action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION,_stateCopy2.id));return _objectSpread({state:state},action.payload);}case ACTIONS.UPDATE_PUBLICATION_FAIL:{return state;}case ACTIONS.UPDATE_PRESENTATION_IMAGE:{var _stateCopy3=_.cloneDeep(action.payload);var image=_stateCopy3.image;updatePresentationImage(image).then(function(json){if(json.status!==404||json.status!==500){action.asyncDispatch(mainAction(ACTIONS.UPDATE_PRESENTATION_IMAGE_SUCCESS,{submitted:_stateCopy3,json:json}));}else{action.asyncDispatch(mainAction(ACTIONS.UPDATE_PRESENTATION_IMAGE_FAIL,json.response.message));}}).catch(function(err){return action.asyncDispatch(mainAction(ACTIONS.UPDATE_PRESENTATION_IMAGE_FAIL,err));});return state;}case ACTIONS.UPDATE_PRESENTATION_IMAGE_SUCCESS:{var _stateCopy4=_.cloneDeep(state);var newImage={_id:action.payload.submitted._id,albumID:action.payload.submitted.albumID,caption:action.payload.submitted.caption,cover:action.payload.submitted.cover,imageName:action.payload.json.data.filename,updatedAt:Date.now()};_stateCopy4.currentID=action.payload.submitted.albumID;action.asyncDispatch(mainAction(ACTIONS.UPDATE_POST_IMAGE,newImage));return _stateCopy4;}case ACTIONS.UPDATE_PRESENTATION_IMAGE_FAIL:{return state;}case ACTIONS.UPLOAD_PRESENTATION_IMAGE:{console.log(action);var _image={albumID:action.payload.albumID,caption:action.payload.caption?action.payload.caption:\"\",cover:action.payload.cover?action.payload.cover:\"\",imageName:action.payload.image.name};var _presentation={};if(action.payload.cover===\"frontCover\"){_presentation={frontCover:action.payload.image.name,frontCaption:action.payload.caption?action.payload.caption:\"\"};}else{_presentation={backCover:action.payload.image.name,backCaption:action.payload.caption?action.payload.caption:\"\"};}db.collection(\"presentations\").doc(action.payload.docId).update(_presentation).then(function(){db.collection(\"postimages\").doc().set(_image).then(function(){action.asyncDispatch(mainAction(ACTIONS.UPLOAD_PRESENTATION_IMAGE_SUCCESS,action.payload));});});return state;}case ACTIONS.UPLOAD_PRESENTATION_IMAGE_SUCCESS:{var _postImageRef=storage.ref('posts/'+action.payload.image.name).put(action.payload.image);_postImageRef.on('state_changed',function(snapshot){//progress function\n},function(error){//error\nconsole.log(error);},function(){//complete\nstorage.ref('/posts').child(action.payload.image.name).getDownloadURL().then(function(url){console.log(url);action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION,action.payload.albumID));});});return state;}case ACTIONS.UPLOAD_PRESENTATION_IMAGE_FAIL:{return state;}case ACTIONS.UPDATE_PRESENTATION_IMAGE:{console.log(action);var _image2='';if(action.submitted.cover===\"frontCover\"){_image2={frontCover:action.json.data.filename,frontCaption:action.submitted.caption};}else{_image2={backCover:action.json.data.filename,backCaption:action.submitted.caption};}action.asyncDispatch(mainAction(ACTIONS.UPDATE_PUBLICATION,_image2));return state;}default:return _objectSpread({},state);}}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/presentation.reducer.js"],"names":["ACTIONS","mainAction","db","storageRef","ref","storage","_","updatePresentationImage","initialState","presentationReducer","state","action","type","DELETE_PRESENTATION_IMAGE","presentation","payload","imageType","frontCover","frontCaption","backCover","backCaption","collection","doc","docId","update","then","where","ID","get","querySnapshot","console","log","docs","forEach","id","parent","path","delete","asyncDispatch","DELETE_PRESENTATION_IMAGE_SUCCESS","postImageRef","name","LOAD_PRESENTATION","DELETE_PRESENTATION_IMAGE_FAIL","CREATE_NEW_PUBLICATION","stateCopy","cloneDeep","add","docRef","_id","CREATE_NEW_PUBLICATION_SUCCESS","CREATE_NEW_PUBLICATION_FAIL","data","map","LOAD_PRESENTATION_SUCCESS","length","LOAD_PRESENTATION_FAIL","UPDATE_PUBLICATION","UPDATE_PUBLICATION_SUCCESS","UPDATE_PUBLICATION_FAIL","UPDATE_PRESENTATION_IMAGE","image","json","status","UPDATE_PRESENTATION_IMAGE_SUCCESS","submitted","UPDATE_PRESENTATION_IMAGE_FAIL","response","message","catch","err","newImage","albumID","caption","cover","imageName","filename","updatedAt","Date","now","currentID","UPDATE_POST_IMAGE","UPLOAD_PRESENTATION_IMAGE","set","UPLOAD_PRESENTATION_IMAGE_SUCCESS","put","on","snapshot","error","child","getDownloadURL","url","UPLOAD_PRESENTATION_IMAGE_FAIL"],"mappings":"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","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { db, storageRef , ref,storage} from \"../../firebase\";\nimport  _ from \"lodash\"\nimport {updatePresentationImage} from \"API/indexAPI\"\nconst initialState = {};\nexport default function presentationReducer (state = initialState, action) {\n    switch (action.type) {\n      case ACTIONS.DELETE_PRESENTATION_IMAGE:{\n        let presentation= {}\n        if(action.payload.imageType === \"frontCover\"){\n         presentation = {\n           frontCover : \"\",\n           frontCaption:\"\",\n         }\n        } else {\n          presentation = {\n            backCover : \"\",\n            backCaption:\"\",\n          }\n        }\n\n       db.collection(\"presentations\").doc(action.payload.docId)\n       .update(presentation).then(()=>{   \n\n          db.collection(\"postimages\")\n          .where('albumID','==',action.payload.ID)\n          .where('cover','==',action.payload.imageType)\n           .get()\n           .then((querySnapshot) => {\n            console.log(querySnapshot.docs)\n            querySnapshot.forEach((doc)=>{\n               console.log(doc.ref.id,doc.ref.parent,doc.ref.path)\n               doc.ref.delete()\n              })\n            action.asyncDispatch(mainAction(ACTIONS.DELETE_PRESENTATION_IMAGE_SUCCESS,action.payload))\n           });\n       });\n\n        \n        return state\n      }  \n      case ACTIONS.DELETE_PRESENTATION_IMAGE_SUCCESS:{\n        let postImageRef = storage.ref('posts/'+action.payload.name)\n        postImageRef.delete().then(()=>console.log(\"file deleted\"));\n        action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION,action.payload.ID))\n        return state\n      }  \n      case ACTIONS.DELETE_PRESENTATION_IMAGE_FAIL:{\n        \n        return action.payload\n      }  \n        case ACTIONS.CREATE_NEW_PUBLICATION: {\n          let stateCopy = _.cloneDeep(action.payload)\n      \n          db.collection(\"presentations\")\n            .add(stateCopy)\n            .then(function(docRef){\n              stateCopy._id = docRef.id\n              db.collection(\"presentations\")\n              .doc(docRef.id)\n              .update({_id:docRef.id}).then(()=>{\n                action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_PUBLICATION_SUCCESS,stateCopy))\n              });\n             \n            });\n        return stateCopy\n        }\n        case ACTIONS.CREATE_NEW_PUBLICATION_SUCCESS: {\n        return action.payload\n        }\n        case ACTIONS.CREATE_NEW_PUBLICATION_FAIL: {\n        return state\n        }\n        case ACTIONS.LOAD_PRESENTATION: {\n        let stateCopy = _.cloneDeep(state)\n        let _id = ''\n            db.collection(\"presentations\")\n            .where(\"id\",\"==\",action.payload)\n            .get()\n            .then(querySnapshot => {\n              const data = querySnapshot.docs.map(doc => {\n              //  _id=doc.id\n                return doc.data()});\n              stateCopy = data\n            //  stateCopy[0]._id = _id\n              action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION_SUCCESS,data))\n            });\n            return state\n        }\n        case  ACTIONS.LOAD_PRESENTATION_SUCCESS:{\n            \n            return action.payload.length > 0 ? action.payload[0]:[]\n        }\n        case  ACTIONS.LOAD_PRESENTATION_FAIL:{\n            return state\n        }\n        \n        case ACTIONS.UPDATE_PUBLICATION:{\n      console.log(action)\n        db.collection(\"presentations\")\n        .doc(action.payload._id)\n        .update(action.payload).then(()=>{\n          action.asyncDispatch(mainAction(ACTIONS.UPDATE_PUBLICATION_SUCCESS,action.payload))\n        });\n        return state\n        }\n        case ACTIONS.UPDATE_PUBLICATION_SUCCESS:{\n        let stateCopy = _.cloneDeep(state)\n        action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION,stateCopy.id))\n        return {state,...action.payload}\n        }\n        case ACTIONS.UPDATE_PUBLICATION_FAIL:{\n        return state\n        }\n        case ACTIONS.UPDATE_PRESENTATION_IMAGE:{\n            let stateCopy = _.cloneDeep(action.payload)\n             let image = stateCopy.image\n             updatePresentationImage(image).then((json)=>{\n    \n              if(json.status!==404 || json.status!==500) {\n                action.asyncDispatch(mainAction(ACTIONS.UPDATE_PRESENTATION_IMAGE_SUCCESS,{submitted:stateCopy,json}))\n              } else {\n                action.asyncDispatch(mainAction(ACTIONS.UPDATE_PRESENTATION_IMAGE_FAIL,json.response.message))\n              }\n            }).catch(err => action.asyncDispatch(mainAction(ACTIONS.UPDATE_PRESENTATION_IMAGE_FAIL,err)))\n          \n            return state\n        }\n        case ACTIONS.UPDATE_PRESENTATION_IMAGE_SUCCESS:{\n              let stateCopy = _.cloneDeep(state)\n              \n              let newImage = {\n                _id:action.payload.submitted._id,\n                albumID:action.payload.submitted.albumID,\n                caption:action.payload.submitted.caption,\n                cover:action.payload.submitted.cover,\n                imageName:action.payload.json.data.filename,\n                updatedAt:Date.now()\n              }\n              stateCopy.currentID = action.payload.submitted.albumID\n              action.asyncDispatch(mainAction( ACTIONS.UPDATE_POST_IMAGE,newImage))\n            return stateCopy\n        }\n        case ACTIONS.UPDATE_PRESENTATION_IMAGE_FAIL:{\n            return state\n        }\n        case ACTIONS.UPLOAD_PRESENTATION_IMAGE:{\n         console.log(action)\n          let image = {\n            albumID: action.payload.albumID,\n            caption: action.payload.caption ? action.payload.caption :\"\",\n            cover: action.payload.cover ? action.payload.cover:\"\",\n            imageName:action.payload.image.name\n          }\n          let presentation= {}\n          if(action.payload.cover === \"frontCover\"){\n           presentation = {\n             frontCover : action.payload.image.name,\n             frontCaption:action.payload.caption ? action.payload.caption :\"\",\n           }\n          } else {\n            presentation = {\n              backCover : action.payload.image.name,\n              backCaption:action.payload.caption ? action.payload.caption :\"\",\n            }\n          }\n\n        db.collection(\"presentations\").doc(action.payload.docId)\n        .update(presentation).then(()=>{   \n            db.collection(\"postimages\")\n            .doc()\n            .set(image)\n            .then(() => {\n              action.asyncDispatch(mainAction(ACTIONS.UPLOAD_PRESENTATION_IMAGE_SUCCESS,action.payload))\n            });\n\n\n        });\n\n        \n         \n          return state\n        }\n        case ACTIONS.UPLOAD_PRESENTATION_IMAGE_SUCCESS:{\n          let postImageRef = storage.ref('posts/'+action.payload.image.name).put(action.payload.image);\n          postImageRef.on('state_changed',(snapshot)=>{\n            //progress function\n          },(error)=>{\n            //error\n            console.log(error)\n          },()=>{\n            //complete\n            storage.ref('/posts').child(action.payload.image.name).getDownloadURL().then(url=>{\n              console.log(url)\n              action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION,action.payload.albumID))\n            })\n          })\n          return state\n        }\n        case ACTIONS.UPLOAD_PRESENTATION_IMAGE_FAIL:{\n          return state\n        }\n        case ACTIONS.UPDATE_PRESENTATION_IMAGE:{\n          console.log(action)\n          let image = ''\n          if(action.submitted.cover === \"frontCover\") {\n            image = {\n              frontCover:action.json.data.filename,\n              frontCaption:action.submitted.caption \n            }\n          } else {\n            image = {\n              backCover:action.json.data.filename,\n              backCaption:action.submitted.caption \n            }\n          }\n          action.asyncDispatch(mainAction( ACTIONS.UPDATE_PUBLICATION,image))\n          return state\n        }\n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}