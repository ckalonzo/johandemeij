{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/components/shared/List.jsx\";\nimport React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport ReactHtmlParser from 'react-html-parser';\n\nvar customParseFormat = require('dayjs/plugin/customParseFormat');\n\ndayjs.extend(customParseFormat);\n\nconst List = props => {\n  const renderList = props => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      className: \"agenda-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: {\n        span: 10\n      },\n      lg: {\n        span: 11\n      },\n      className: \"agenda-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"orchestra\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, props.orchestra), props.conductor ? ReactHtmlParser(`<div class=\"conductor\">Conductor: ${props.conductor}</div>`) : '', /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/music/profile/\" + props.cd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 36\n      }\n    }, props.title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, `${dayjs(props.month, 'MMMM', true)} ${props.day} ${props.year} ${props.time}`, \" \", `${props.city} ${props.country}`))), /*#__PURE__*/React.createElement(Col, {\n      md: {\n        span: 2\n      },\n      lg: {\n        span: 1\n      },\n      className: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, `${props.day}`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, `${dayjs(props.month, 'MMMM', true)}`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, `${props.year}`)))));\n  };\n\n  return props.orchestra ? renderList(props) : null;\n};\n\nexport default List;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/components/shared/List.jsx"],"names":["React","Col","Row","Link","dayjs","ReactHtmlParser","customParseFormat","require","extend","List","props","renderList","span","orchestra","conductor","cd","title","month","day","year","time","city","country"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,SAAQC,IAAR,QAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AACA,IAAIC,iBAAiB,GAAGC,OAAO,CAAC,gCAAD,CAA/B;;AACAH,KAAK,CAACI,MAAN,CAAaF,iBAAb;;AACA,MAAMG,IAAI,GAAIC,KAAD,IAAW;AACrB,QAAMC,UAAU,GAAID,KAAD,IAAW;AAC7B,wBAAQ,uDACJ,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAACE,QAAAA,IAAI,EAAC;AAAN,OAAT;AAAoB,MAAA,EAAE,EAAE;AAACA,QAAAA,IAAI,EAAC;AAAN,OAAxB;AAAmC,MAAA,SAAS,EAAC,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BF,KAAK,CAACG,SAAlC,CADJ,EAEKH,KAAK,CAACI,SAAN,GAAiBT,eAAe,CAAE,qCAAoCK,KAAK,CAACI,SAAU,QAAtD,CAAhC,GAA+F,EAFpG,eAGI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuB,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,oBAAkBJ,KAAK,CAACK,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCL,KAAK,CAACM,KAA7C,CAAvB,CAHJ,eAKI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,GAAEZ,KAAK,CAACM,KAAK,CAACO,KAAP,EAAa,MAAb,EAAoB,IAApB,CAA0B,IAAGP,KAAK,CAACQ,GAAI,IAAGR,KAAK,CAACS,IAAK,IAAGT,KAAK,CAACU,IAAK,EAAtG,OAA2G,GAAEV,KAAK,CAACW,IAAK,IAAGX,KAAK,CAACY,OAAQ,EAAzI,CALJ,CAFA,CADA,eAYA,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAACV,QAAAA,IAAI,EAAC;AAAN,OAAT;AAAmB,MAAA,EAAE,EAAE;AAACA,QAAAA,IAAI,EAAC;AAAN,OAAvB;AAAiC,MAAA,SAAS,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuB,GAAEF,KAAK,CAACQ,GAAI,EAAnC,CADJ,eAEI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,GAAEd,KAAK,CAACM,KAAK,CAACO,KAAP,EAAa,MAAb,EAAoB,IAApB,CAA0B,EAA1D,CAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,GAAEP,KAAK,CAACS,IAAK,EAArC,CAHJ,CADA,CAZA,CADI,CAAR;AAsBA,GAvBD;;AAwBA,SAAOT,KAAK,CAACG,SAAN,GAAkBF,UAAU,CAACD,KAAD,CAA5B,GAAoC,IAA3C;AACF,CA1BD;;AA2BA,eAAeD,IAAf","sourcesContent":["import React from \"react\"\nimport {Col, Row} from \"react-bootstrap\"\nimport {Link } from \"react-router-dom\"\nimport dayjs from \"dayjs\"\nimport ReactHtmlParser from 'react-html-parser';\nvar customParseFormat = require('dayjs/plugin/customParseFormat')\ndayjs.extend(customParseFormat)\nconst List = (props) => {\n   const renderList = (props) => {\n    return (<>\n        <Row className=\"agenda-list\">\n        <Col md={{span:10}} lg={{span:11}} className=\"agenda-info\">\n    \n        <div>\n            <div className=\"orchestra\">{props.orchestra}</div>\n            {props.conductor ?ReactHtmlParser(`<div class=\"conductor\">Conductor: ${props.conductor}</div>`):''}\n            <div className=\"title\"><Link to={\"/music/profile/\"+props.cd}>{props.title}</Link></div>\n            \n            <div className=\"location\">{`${dayjs(props.month,'MMMM',true)} ${props.day} ${props.year} ${props.time}`} {`${props.city} ${props.country}`}</div>\n        </div>\n    \n        </Col>\n        <Col md={{span:2}} lg={{span:1}} className=\"date\">\n        <div >\n            <div className=\"day\">{`${props.day}`}</div>\n            <div className=\"month\">{`${dayjs(props.month,'MMMM',true)}`}</div>\n            <div className=\"year\">{`${props.year}`}</div>\n            </div>\n        </Col>\n        </Row>\n        </>)\n   }\n   return props.orchestra ? renderList(props):null\n}\nexport default List"]},"metadata":{},"sourceType":"module"}