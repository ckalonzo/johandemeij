{"ast":null,"code":"import { ACTIONS } from 'redux/actions/types.js';\nimport { mainAction } from \"redux/actions/index.actions\";\nimport { uploadImage } from \"API/indexAPI\";\nconst initialState = {};\nexport default function postImageReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.UPLOAD_IMAGE:\n      {\n        uploadImage(action.payload).then(json => {\n          action.asyncDispatch(mainAction(ACTIONS.UPLOAD_IMAGE_SUCCESS, json));\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.UPLOAD_IMAGE_FAIL, err)));\n        return state;\n      }\n\n    case ACTIONS.UPLOAD_IMAGE_SUCCESS:\n      {\n        return {\n          state,\n          ...action.payload\n        };\n      }\n\n    case ACTIONS.UPLOAD_IMAGE_FAIL:\n      {\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johandemeij-master/johan-app/src/redux/reducers/postImage.reducer.js"],"names":["ACTIONS","mainAction","uploadImage","initialState","postImageReducer","state","action","type","UPLOAD_IMAGE","payload","then","json","asyncDispatch","UPLOAD_IMAGE_SUCCESS","catch","err","UPLOAD_IMAGE_FAIL"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAAQC,WAAR,QAA0B,cAA1B;AACA,MAAMC,YAAY,GAAG,EAArB;AACA,eAAe,SAASC,gBAAT,CAA2BC,KAAK,GAAGF,YAAnC,EAAiDG,MAAjD,EAAyD;AACpE,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKP,OAAO,CAACQ,YAAb;AAA0B;AACxBN,QAAAA,WAAW,CAACI,MAAM,CAACG,OAAR,CAAX,CAA4BC,IAA5B,CAAkCC,IAAD,IAAQ;AACvCL,UAAAA,MAAM,CAACM,aAAP,CAAqBX,UAAU,CAACD,OAAO,CAACa,oBAAT,EAA8BF,IAA9B,CAA/B;AACD,SAFD,EAEGG,KAFH,CAESC,GAAG,IAAIT,MAAM,CAACM,aAAP,CAAqBX,UAAU,CAACD,OAAO,CAACgB,iBAAT,EAA2BD,GAA3B,CAA/B,CAFhB;AAGA,eAAOV,KAAP;AACD;;AACD,SAAKL,OAAO,CAACa,oBAAb;AAAkC;AAEhC,eAAO;AAACR,UAAAA,KAAD;AAAO,aAAGC,MAAM,CAACG;AAAjB,SAAP;AACD;;AACD,SAAKT,OAAO,CAACgB,iBAAb;AAA+B;AAC7B,eAAOX,KAAP;AACD;;AACD;AACE,aAAOA,KAAP;AAhBJ;AAmBD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport {uploadImage} from \"API/indexAPI\"\nconst initialState = {};\nexport default function postImageReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.UPLOAD_IMAGE:{\n        uploadImage(action.payload).then((json)=>{\n          action.asyncDispatch(mainAction(ACTIONS.UPLOAD_IMAGE_SUCCESS,json))\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.UPLOAD_IMAGE_FAIL,err)))\n        return state\n      }\n      case ACTIONS.UPLOAD_IMAGE_SUCCESS:{\n        \n        return {state,...action.payload}\n      }\n      case ACTIONS.UPLOAD_IMAGE_FAIL:{\n        return state\n      }\n      default: \n        return state\n       \n    }\n  }"]},"metadata":{},"sourceType":"module"}