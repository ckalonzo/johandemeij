{"ast":null,"code":"import _objectSpread from\"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";import{db}from\"../../firebase\";var initialState={};export default function cdsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.LOAD_CDS:{db.collection(\"cds\").get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){return doc.data();});action.asyncDispatch(mainAction(ACTIONS.LOAD_CDS_SUCCESS,data));});return state;}case ACTIONS.LOAD_CDS_SUCCESS:{return action.payload;}case ACTIONS.LOAD_CDS_FAIL:{return state;}default:return _objectSpread({},state);}}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/cds.reducer.js"],"names":["ACTIONS","mainAction","db","initialState","cdsReducer","state","action","type","LOAD_CDS","collection","get","then","querySnapshot","data","docs","map","doc","asyncDispatch","LOAD_CDS_SUCCESS","payload","LOAD_CDS_FAIL"],"mappings":"gLAAA,OAASA,OAAT,KAAwB,wBAAxB,CACA,OAASC,UAAT,KAA2B,6BAA3B,CACA,OAASC,EAAT,KAAmB,gBAAnB,CACA,GAAMC,CAAAA,YAAY,CAAG,EAArB,CACA,cAAe,SAASC,CAAAA,UAAT,EAAmD,IAA9BC,CAAAA,KAA8B,2DAAtBF,YAAsB,IAARG,CAAAA,MAAQ,2CAC9D,OAAQA,MAAM,CAACC,IAAf,EAEE,IAAKP,CAAAA,OAAO,CAACQ,QAAb,CAAuB,CAErBN,EAAE,CAACO,UAAH,CAAc,KAAd,EACGC,GADH,GAEGC,IAFH,CAEQ,SAAAC,aAAa,CAAI,CACrB,GAAMC,CAAAA,IAAI,CAAGD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAuB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACH,IAAJ,EAAJ,EAA1B,CAAb,CACAP,MAAM,CAACW,aAAP,CAAqBhB,UAAU,CAACD,OAAO,CAACkB,gBAAT,CAA0BL,IAA1B,CAA/B,EACD,CALH,EAOA,MAAOR,CAAAA,KAAP,CACD,CACD,IAAKL,CAAAA,OAAO,CAACkB,gBAAb,CAA+B,CAC7B,MAAOZ,CAAAA,MAAM,CAACa,OAAd,CACD,CACD,IAAKnB,CAAAA,OAAO,CAACoB,aAAb,CAA4B,CAE1B,MAAOf,CAAAA,KAAP,CACD,CAED,QACE,wBACKA,KADL,EAtBJ,CA0BD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { db } from \"../../firebase\";\nconst initialState = {};\nexport default function cdsReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_CDS: {\n     \n        db.collection(\"cds\")\n          .get()\n          .then(querySnapshot => {\n            const data = querySnapshot.docs.map(doc => doc.data());\n            action.asyncDispatch(mainAction(ACTIONS.LOAD_CDS_SUCCESS,data))\n          });\n  \n        return state\n      }\n      case ACTIONS.LOAD_CDS_SUCCESS: {\n        return action.payload\n      }\n      case ACTIONS.LOAD_CDS_FAIL: {\n\n        return state\n      }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}