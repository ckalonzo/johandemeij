{"ast":null,"code":"import _objectSpread from\"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";import{database}from\"../../firebase\";import _ from'lodash';var initialState={};export default function agendaReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.CREATE_NEW_AGENDA:{var stateCopy=_.cloneDeep(action.payload);var _agendaRef=database.ref('agendas');_agendaRef.child(stateCopy.id).set(stateCopy).then(function(){action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_AGENDA_SUCCESS,stateCopy));}).catch(function(){action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_AGENDA_FAIL,{error:\"could not creat agenda\"}));});return stateCopy;}case ACTIONS.CREATE_NEW_AGENDA_SUCCESS:{return action.payload;}case ACTIONS.DELETE_AGENDA:{var _agendaRef2=database.ref('agendas/'+action.payload);_agendaRef2.remove();action.asyncDispatch(mainAction(ACTIONS.DELETE_AGENDA_SUCCESS,[]));return state;}case ACTIONS.DELETE_AGENDA_SUCCESS:{action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDAS,[]));return state;}case ACTIONS.LOAD_CD_AGENDA:{var d=new Date();var month=(d.getMonth()+1).toString();var agendaYearRef=database.ref('agendas').orderByChild('year').startAt('2020').endAt('2020');agendaYearRef.on('value',function(snap,i){var agendas=[];var data=snap.val();Object.values(data).map(function(agenda){agenda.date=\"\".concat(agenda.month,\"-\").concat(agenda.day,\"-\").concat(agenda.year);console.log(agenda.id,agenda.conductor);if(agenda.month>=month||agenda.month>=+month&&agenda.id>0)return agendas.push(agenda);});action.asyncDispatch(mainAction(ACTIONS.LOAD_CD_AGENDA_SUCCESS,agendas));});return state;}case ACTIONS.LOAD_CD_AGENDA_SUCCESS:{return _.orderBy(action.payload,['month','day'],['asc','asc']);}case ACTIONS.LOAD_CD_AGENDA_FAIL:{return state;}case ACTIONS.LOAD_AGENDAS:{var _d=new Date();var day=_d.getDay();var _month=(_d.getMonth()+1).toString();var year=_d.getFullYear().toString();var _agendaYearRef=database.ref('agendas').orderByChild('year').startAt('2020').endAt('2021');_agendaYearRef.on('value',function(snap,i){var agendas=[];var data=snap.val();Object.values(data).map(function(agenda){agenda.date=\"\".concat(agenda.month,\"-\").concat(agenda.day,\"-\").concat(agenda.year);agenda.month=+agenda.month;if(agenda.month>=_month&&agenda.cd!='')return agendas.push(agenda);});action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDAS_SUCCESS,_.orderBy(agendas,['month','day'],['asc','asc'])));});return state;}case ACTIONS.LOAD_AGENDAS_SUCCESS:{return action.payload;}case ACTIONS.LOAD_AGENDAS_FAIL:{return state;}case ACTIONS.LOAD_AGENDA:{var agendaRef=database.ref('agendas');agendaRef.child(action.payload).on('value',function(snap,i){var data=snap.val();setTimeout(function(){return action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDA_SUCCESS,data));},0);});return state;}case ACTIONS.LOAD_AGENDA_SUCCESS:{return action.payload;}case ACTIONS.LOAD_AGENDA_FAIL:{return state;}case ACTIONS.UPDATE_AGENDA:{var _agendaRef3=database.ref('agendas');_agendaRef3.child(action.payload.id).update(action.payload).then(function(){action.asyncDispatch(mainAction(ACTIONS.UPDATE_AGENDA_SUCCESS,action.payload));}).catch(function(){action.asyncDispatch(mainAction(ACTIONS.UPDATE_AGENDA_FAIL,{error:\"failed to update agenda\"}));});return state;}case ACTIONS.UPDATE_AGENDA_SUCCESS:{var _stateCopy=_.cloneDeep(action.payload);action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDA,_stateCopy.id));return _stateCopy;}case ACTIONS.UPDATE_AGENDA_FAIL:{return state;}default:return _objectSpread({},state);}}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/agenda.reducer.js"],"names":["ACTIONS","mainAction","database","_","initialState","agendaReducer","state","action","type","CREATE_NEW_AGENDA","stateCopy","cloneDeep","payload","agendaRef","ref","child","id","set","then","asyncDispatch","CREATE_NEW_AGENDA_SUCCESS","catch","CREATE_NEW_AGENDA_FAIL","error","DELETE_AGENDA","remove","DELETE_AGENDA_SUCCESS","LOAD_AGENDAS","LOAD_CD_AGENDA","d","Date","month","getMonth","toString","agendaYearRef","orderByChild","startAt","endAt","on","snap","i","agendas","data","val","Object","values","map","agenda","date","day","year","console","log","conductor","push","LOAD_CD_AGENDA_SUCCESS","orderBy","LOAD_CD_AGENDA_FAIL","getDay","getFullYear","cd","LOAD_AGENDAS_SUCCESS","LOAD_AGENDAS_FAIL","LOAD_AGENDA","setTimeout","LOAD_AGENDA_SUCCESS","LOAD_AGENDA_FAIL","UPDATE_AGENDA","update","UPDATE_AGENDA_SUCCESS","UPDATE_AGENDA_FAIL"],"mappings":"gLAAA,OAASA,OAAT,KAAwB,wBAAxB,CACA,OAASC,UAAT,KAA2B,6BAA3B,CACA,OAASC,QAAT,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CACA,GAAMC,CAAAA,YAAY,CAAG,EAArB,CAEA,cAAe,SAASC,CAAAA,aAAT,EAAsD,IAA9BC,CAAAA,KAA8B,2DAAtBF,YAAsB,IAARG,CAAAA,MAAQ,2CACnE,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKR,CAAAA,OAAO,CAACS,iBAAb,CAA+B,CAE9B,GAAIC,CAAAA,SAAS,CAAGP,CAAC,CAACQ,SAAF,CAAYJ,MAAM,CAACK,OAAnB,CAAhB,CACD,GAAMC,CAAAA,UAAS,CAAGX,QAAQ,CAACY,GAAT,CAAa,SAAb,CAAlB,CACAD,UAAS,CAACE,KAAV,CAAgBL,SAAS,CAACM,EAA1B,EAA8BC,GAA9B,CAAkCP,SAAlC,EAA6CQ,IAA7C,CAAkD,UAAI,CACpDX,MAAM,CAACY,aAAP,CAAqBlB,UAAU,CAACD,OAAO,CAACoB,yBAAT,CAAmCV,SAAnC,CAA/B,EACD,CAFD,EAGCW,KAHD,CAGO,UAAI,CACTd,MAAM,CAACY,aAAP,CAAqBlB,UAAU,CAACD,OAAO,CAACsB,sBAAT,CAAgC,CAACC,KAAK,CAAC,wBAAP,CAAhC,CAA/B,EACD,CALD,EAOA,MAAOb,CAAAA,SAAP,CACC,CACD,IAAKV,CAAAA,OAAO,CAACoB,yBAAb,CAAuC,CACvC,MAAOb,CAAAA,MAAM,CAACK,OAAd,CACC,CACD,IAAKZ,CAAAA,OAAO,CAACwB,aAAb,CAA2B,CACzB,GAAMX,CAAAA,WAAS,CAAGX,QAAQ,CAACY,GAAT,CAAa,WAAWP,MAAM,CAACK,OAA/B,CAAlB,CACAC,WAAS,CAACY,MAAV,GACAlB,MAAM,CAACY,aAAP,CAAqBlB,UAAU,CAACD,OAAO,CAAC0B,qBAAT,CAA+B,EAA/B,CAA/B,EAEF,MAAOpB,CAAAA,KAAP,CACC,CACD,IAAKN,CAAAA,OAAO,CAAC0B,qBAAb,CAAmC,CACnCnB,MAAM,CAACY,aAAP,CAAqBlB,UAAU,CAACD,OAAO,CAAC2B,YAAT,CAAsB,EAAtB,CAA/B,EACA,MAAOrB,CAAAA,KAAP,CACC,CACD,IAAKN,CAAAA,OAAO,CAAC4B,cAAb,CAA6B,CAC3B,GAAIC,CAAAA,CAAC,CAAG,GAAIC,CAAAA,IAAJ,EAAR,CACF,GAAIC,CAAAA,KAAK,CAAG,CAACF,CAAC,CAACG,QAAF,GAAe,CAAhB,EAAmBC,QAAnB,EAAZ,CACC,GAAIC,CAAAA,aAAa,CAAGhC,QAAQ,CAACY,GAAT,CAAa,SAAb,EAAwBqB,YAAxB,CAAqC,MAArC,EAA6CC,OAA7C,CAAqD,MAArD,EAA6DC,KAA7D,CAAmE,MAAnE,CAApB,CACAH,aAAa,CAACI,EAAd,CAAiB,OAAjB,CAAyB,SAACC,IAAD,CAAMC,CAAN,CAAU,CAEpC,GAAIC,CAAAA,OAAO,CAAG,EAAd,CACA,GAAMC,CAAAA,IAAI,CAAGH,IAAI,CAACI,GAAL,EAAb,CACAC,MAAM,CAACC,MAAP,CAAcH,IAAd,EAAoBI,GAApB,CAAwB,SAAAC,MAAM,CAAE,CAC9BA,MAAM,CAACC,IAAP,WAAiBD,MAAM,CAAChB,KAAxB,aAAiCgB,MAAM,CAACE,GAAxC,aAA+CF,MAAM,CAACG,IAAtD,EACAC,OAAO,CAACC,GAAR,CAAYL,MAAM,CAAC/B,EAAnB,CAAsB+B,MAAM,CAACM,SAA7B,EACA,GAAGN,MAAM,CAAChB,KAAP,EAAgBA,KAAhB,EAAyBgB,MAAM,CAAChB,KAAP,EAAgB,CAACA,KAAjB,EAA2BgB,MAAM,CAAC/B,EAAP,CAAY,CAAnE,CACA,MAAOyB,CAAAA,OAAO,CAACa,IAAR,CAAaP,MAAb,CAAP,CACD,CALD,EAMCxC,MAAM,CAACY,aAAP,CAAqBlB,UAAU,CAACD,OAAO,CAACuD,sBAAT,CAAgCd,OAAhC,CAA/B,EACA,CAXA,EAaD,MAAOnC,CAAAA,KAAP,CACC,CACD,IAAKN,CAAAA,OAAO,CAACuD,sBAAb,CAAqC,CACrC,MAAOpD,CAAAA,CAAC,CAACqD,OAAF,CAAUjD,MAAM,CAACK,OAAjB,CAAyB,CAAC,OAAD,CAAS,KAAT,CAAzB,CAAyC,CAAC,KAAD,CAAO,KAAP,CAAzC,CAAP,CACC,CACD,IAAKZ,CAAAA,OAAO,CAACyD,mBAAb,CAAkC,CAElC,MAAOnD,CAAAA,KAAP,CACC,CACD,IAAKN,CAAAA,OAAO,CAAC2B,YAAb,CAA2B,CAC3B,GAAIE,CAAAA,EAAC,CAAG,GAAIC,CAAAA,IAAJ,EAAR,CACA,GAAImB,CAAAA,GAAG,CAAGpB,EAAC,CAAC6B,MAAF,EAAV,CACA,GAAI3B,CAAAA,MAAK,CAAG,CAACF,EAAC,CAACG,QAAF,GAAe,CAAhB,EAAmBC,QAAnB,EAAZ,CACA,GAAIiB,CAAAA,IAAI,CAAGrB,EAAC,CAAC8B,WAAF,GAAgB1B,QAAhB,EAAX,CAEA,GAAMC,CAAAA,cAAa,CAAGhC,QAAQ,CAACY,GAAT,CAAa,SAAb,EAAwBqB,YAAxB,CAAqC,MAArC,EAA6CC,OAA7C,CAAqD,MAArD,EAA6DC,KAA7D,CAAmE,MAAnE,CAAtB,CACAH,cAAa,CAACI,EAAd,CAAiB,OAAjB,CAAyB,SAACC,IAAD,CAAMC,CAAN,CAAU,CAEpC,GAAIC,CAAAA,OAAO,CAAG,EAAd,CACA,GAAMC,CAAAA,IAAI,CAAGH,IAAI,CAACI,GAAL,EAAb,CACAC,MAAM,CAACC,MAAP,CAAcH,IAAd,EAAoBI,GAApB,CAAwB,SAAAC,MAAM,CAAE,CAC9BA,MAAM,CAACC,IAAP,WAAiBD,MAAM,CAAChB,KAAxB,aAAiCgB,MAAM,CAACE,GAAxC,aAA+CF,MAAM,CAACG,IAAtD,EACAH,MAAM,CAAChB,KAAP,CAAe,CAACgB,MAAM,CAAChB,KAAvB,CACA,GAAGgB,MAAM,CAAChB,KAAP,EAAgBA,MAAhB,EAAyBgB,MAAM,CAACa,EAAP,EAAY,EAAxC,CACC,MAAOnB,CAAAA,OAAO,CAACa,IAAR,CAAaP,MAAb,CAAP,CACF,CALD,EAMCxC,MAAM,CAACY,aAAP,CAAqBlB,UAAU,CAACD,OAAO,CAAC6D,oBAAT,CAA8B1D,CAAC,CAACqD,OAAF,CAAUf,OAAV,CAAkB,CAAC,OAAD,CAAS,KAAT,CAAlB,CAAkC,CAAC,KAAD,CAAO,KAAP,CAAlC,CAA9B,CAA/B,EACA,CAXA,EAYA,MAAOnC,CAAAA,KAAP,CACC,CACD,IAAKN,CAAAA,OAAO,CAAC6D,oBAAb,CAAkC,CAElC,MAAOtD,CAAAA,MAAM,CAACK,OAAd,CACC,CACD,IAAKZ,CAAAA,OAAO,CAAC8D,iBAAb,CAA+B,CAC/B,MAAOxD,CAAAA,KAAP,CACC,CACD,IAAKN,CAAAA,OAAO,CAAC+D,WAAb,CAAyB,CAGzB,GAAIlD,CAAAA,SAAS,CAAGX,QAAQ,CAACY,GAAT,CAAa,SAAb,CAAhB,CACCD,SAAS,CAACE,KAAV,CAAgBR,MAAM,CAACK,OAAvB,EAAgC0B,EAAhC,CAAmC,OAAnC,CAA2C,SAACC,IAAD,CAAMC,CAAN,CAAU,CACtD,GAAME,CAAAA,IAAI,CAAGH,IAAI,CAACI,GAAL,EAAb,CACAqB,UAAU,CAAC,iBAAKzD,CAAAA,MAAM,CAACY,aAAP,CAAqBlB,UAAU,CAACD,OAAO,CAACiE,mBAAT,CAA6BvB,IAA7B,CAA/B,CAAL,EAAD,CAA0E,CAA1E,CAAV,CAEC,CAJA,EAKD,MAAOpC,CAAAA,KAAP,CACC,CACD,IAAKN,CAAAA,OAAO,CAACiE,mBAAb,CAAiC,CACjC,MAAO1D,CAAAA,MAAM,CAACK,OAAd,CACC,CACD,IAAKZ,CAAAA,OAAO,CAACkE,gBAAb,CAA8B,CAC9B,MAAO5D,CAAAA,KAAP,CACC,CACD,IAAKN,CAAAA,OAAO,CAACmE,aAAb,CAA2B,CACzB,GAAMtD,CAAAA,WAAS,CAAGX,QAAQ,CAACY,GAAT,CAAa,SAAb,CAAlB,CACAD,WAAS,CAACE,KAAV,CAAgBR,MAAM,CAACK,OAAP,CAAeI,EAA/B,EAAmCoD,MAAnC,CAA0C7D,MAAM,CAACK,OAAjD,EACCM,IADD,CACM,UAAI,CACRX,MAAM,CAACY,aAAP,CAAqBlB,UAAU,CAACD,OAAO,CAACqE,qBAAT,CAA+B9D,MAAM,CAACK,OAAtC,CAA/B,EACD,CAHD,EAGGS,KAHH,CAGS,UAAI,CACXd,MAAM,CAACY,aAAP,CAAqBlB,UAAU,CAACD,OAAO,CAACsE,kBAAT,CAA4B,CAAC/C,KAAK,CAAC,yBAAP,CAA5B,CAA/B,EACD,CALD,EAMF,MAAOjB,CAAAA,KAAP,CACC,CACD,IAAKN,CAAAA,OAAO,CAACqE,qBAAb,CAAmC,CACnC,GAAI3D,CAAAA,UAAS,CAAGP,CAAC,CAACQ,SAAF,CAAYJ,MAAM,CAACK,OAAnB,CAAhB,CACAL,MAAM,CAACY,aAAP,CAAqBlB,UAAU,CAACD,OAAO,CAAC+D,WAAT,CAAqBrD,UAAS,CAACM,EAA/B,CAA/B,EACA,MAAON,CAAAA,UAAP,CACC,CACD,IAAKV,CAAAA,OAAO,CAACsE,kBAAb,CAAgC,CAEhC,MAAOhE,CAAAA,KAAP,CACC,CACD,QACE,wBACKA,KADL,EAvHJ,CA2HD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { database} from \"../../firebase\";\nimport _ from 'lodash'\nconst initialState = {\n};\nexport default function agendaReducer (state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.CREATE_NEW_AGENDA:{\n     \n     let stateCopy = _.cloneDeep(action.payload)\n    const agendaRef = database.ref('agendas')\n    agendaRef.child(stateCopy.id).set(stateCopy).then(()=>{\n      action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_AGENDA_SUCCESS,stateCopy))\n    })\n    .catch(()=>{\n      action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_AGENDA_FAIL,{error:\"could not creat agenda\"}))\n    });\n   \n    return stateCopy\n    }\n    case ACTIONS.CREATE_NEW_AGENDA_SUCCESS:{\n    return action.payload\n    }\n    case ACTIONS.DELETE_AGENDA:{\n      const agendaRef = database.ref('agendas/'+action.payload)\n      agendaRef.remove()\n      action.asyncDispatch(mainAction(ACTIONS.DELETE_AGENDA_SUCCESS,[]))\n  \n    return state\n    }  \n    case ACTIONS.DELETE_AGENDA_SUCCESS:{\n    action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDAS,[]))\n    return state\n    }  \n    case ACTIONS.LOAD_CD_AGENDA: {\n      let d = new Date();\n    let month = (d.getMonth() + 1).toString()\n     var agendaYearRef = database.ref('agendas').orderByChild('year').startAt('2020').endAt('2020')\n     agendaYearRef.on('value',(snap,i)=>{\n    \n    let agendas = []\n    const data = snap.val()\n    Object.values(data).map(agenda=>{\n      agenda.date = `${agenda.month}-${agenda.day}-${agenda.year}`\n      console.log(agenda.id,agenda.conductor)\n      if(agenda.month >= month || agenda.month >= +month  && agenda.id > 0)\n      return agendas.push(agenda)\n    })\n     action.asyncDispatch(mainAction(ACTIONS.LOAD_CD_AGENDA_SUCCESS,agendas))\n    })\n\n    return state\n    }\n    case ACTIONS.LOAD_CD_AGENDA_SUCCESS: {\n    return _.orderBy(action.payload,['month','day'],['asc','asc'])\n    }\n    case ACTIONS.LOAD_CD_AGENDA_FAIL: {\n\n    return state\n    }\n    case ACTIONS.LOAD_AGENDAS: {\n    let d = new Date();\n    let day = d.getDay();\n    let month = (d.getMonth() + 1).toString()\n    let year = d.getFullYear().toString();\n\n    const agendaYearRef = database.ref('agendas').orderByChild('year').startAt('2020').endAt('2021')\n    agendaYearRef.on('value',(snap,i)=>{\n   \n   let agendas = []\n   const data = snap.val()\n   Object.values(data).map(agenda=>{\n     agenda.date = `${agenda.month}-${agenda.day}-${agenda.year}`\n     agenda.month = +agenda.month\n     if(agenda.month >= month && agenda.cd !='')\n      return agendas.push(agenda)\n   })\n    action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDAS_SUCCESS,_.orderBy(agendas,['month','day'],['asc','asc'])))\n   })\n    return state\n    }\n    case ACTIONS.LOAD_AGENDAS_SUCCESS:{\n\n    return action.payload\n    }\n    case ACTIONS.LOAD_AGENDAS_FAIL:{\n    return state\n    }\n    case ACTIONS.LOAD_AGENDA:{\n\n\n    var agendaRef = database.ref('agendas')\n     agendaRef.child(action.payload).on('value',(snap,i)=>{\n    const data = snap.val()\n    setTimeout(() =>action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDA_SUCCESS,data)), 0);\n      \n    })\n    return state\n    }\n    case ACTIONS.LOAD_AGENDA_SUCCESS:{\n    return action.payload\n    }\n    case ACTIONS.LOAD_AGENDA_FAIL:{\n    return state\n    }\n    case ACTIONS.UPDATE_AGENDA:{\n      const agendaRef = database.ref('agendas')\n      agendaRef.child(action.payload.id).update(action.payload)\n      .then(()=>{\n        action.asyncDispatch(mainAction(ACTIONS.UPDATE_AGENDA_SUCCESS,action.payload))\n      }).catch(()=>{\n        action.asyncDispatch(mainAction(ACTIONS.UPDATE_AGENDA_FAIL,{error:\"failed to update agenda\"}))\n      })\n    return state\n    }\n    case ACTIONS.UPDATE_AGENDA_SUCCESS:{\n    let stateCopy = _.cloneDeep(action.payload)\n    action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDA,stateCopy.id))\n    return stateCopy\n    }\n    case ACTIONS.UPDATE_AGENDA_FAIL:{\n   \n    return state\n    }\n    default: \n      return {\n        ...state\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}