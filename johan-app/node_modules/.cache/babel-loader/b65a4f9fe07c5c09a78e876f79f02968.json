{"ast":null,"code":"import _objectSpread from\"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";import{database}from\"../../firebase\";import _ from'lodash';var initialState={};export default function agendaReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.CREATE_NEW_AGENDA:{console.log(action);var _agendaRef=database.ref('agendas/'+action.payload.id);_agendaRef.set(action.payload).then(function(){action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_AGENDA_SUCCESS,action.payload));}).catch(function(){action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_AGENDA_FAIL,{error:\"could not creat agenda\"}));});return state;}case ACTIONS.CREATE_NEW_AGENDA_SUCCESS:{return action.payload;}case ACTIONS.DELETE_AGENDA:{var _agendaRef2=database.ref('agendas/'+action.payload);_agendaRef2.remove();action.asyncDispatch(mainAction(ACTIONS.DELETE_AGENDA_SUCCESS,[]));return state;}case ACTIONS.DELETE_AGENDA_SUCCESS:{action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDAS,[]));return state;}case ACTIONS.LOAD_CD_AGENDA:{var d=new Date();var month=(d.getMonth()+1).toString();var agendaYearRef=database.ref('agendas').orderByChild('year').startAt('2020').endAt('2020');agendaYearRef.on('value',function(snap,i){var agendas=[];var data=snap.val();Object.values(data).map(function(agenda){agenda.date=\"\".concat(agenda.month,\"-\").concat(agenda.day,\"-\").concat(agenda.year);if(agenda.month>=month||agenda.month>=+month&&agenda.id>0)return agendas.push(agenda);});action.asyncDispatch(mainAction(ACTIONS.LOAD_CD_AGENDA_SUCCESS,agendas));});return state;}case ACTIONS.LOAD_CD_AGENDA_SUCCESS:{return _.orderBy(action.payload,['month','day'],['asc','asc']);}case ACTIONS.LOAD_CD_AGENDA_FAIL:{return state;}case ACTIONS.LOAD_AGENDAS:{var _d=new Date();var day=_d.getDay();var _month=(_d.getMonth()+1).toString();var year=_d.getFullYear().toString();var _agendaYearRef=database.ref('agendas').orderByChild('year').startAt('2020').endAt('2021');_agendaYearRef.on('value',function(snap,i){var agendas=[];var data=snap.val();Object.values(data).map(function(agenda){agenda.date=\"\".concat(agenda.month,\"-\").concat(agenda.day,\"-\").concat(agenda.year);agenda.month=+agenda.month;if(agenda.month>=_month&&agenda.cd!='')return agendas.push(agenda);});action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDAS_SUCCESS,_.orderBy(agendas,['month','day'],['asc','asc'])));});return state;}case ACTIONS.LOAD_AGENDAS_SUCCESS:{return action.payload;}case ACTIONS.LOAD_AGENDAS_FAIL:{return state;}case ACTIONS.LOAD_AGENDA:{var agendaRef=database.ref('agendas/'+action.payload);agendaRef.on('value',function(snap,i){var data=snap.val();if(data)action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDA_SUCCESS,_objectSpread({},data)));});var agendaRef=database.ref('agendas').orderByChild('id').startAt(action.payload).endAt(action.payload);agendaRef.on('child_added',function(snap,i){var data=snap.val();if(data)action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDA_SUCCESS,_objectSpread({},data)));});return state;}case ACTIONS.LOAD_AGENDA_SUCCESS:{return action.payload;}case ACTIONS.LOAD_AGENDA_FAIL:{return state;}case ACTIONS.UPDATE_AGENDA:{var _agendaRef3=database.ref('agendas');_agendaRef3.child(action.payload.id).update(action.payload).then(function(){action.asyncDispatch(mainAction(ACTIONS.UPDATE_AGENDA_SUCCESS,action.payload));}).catch(function(){action.asyncDispatch(mainAction(ACTIONS.UPDATE_AGENDA_FAIL,{error:\"failed to update agenda\"}));});return state;}case ACTIONS.UPDATE_AGENDA_SUCCESS:{var stateCopy=_.cloneDeep(action.payload);action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDA,stateCopy.id));return stateCopy;}case ACTIONS.UPDATE_AGENDA_FAIL:{return state;}default:return _objectSpread({},state);}}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/agenda.reducer.js"],"names":["ACTIONS","mainAction","database","_","initialState","agendaReducer","state","action","type","CREATE_NEW_AGENDA","console","log","agendaRef","ref","payload","id","set","then","asyncDispatch","CREATE_NEW_AGENDA_SUCCESS","catch","CREATE_NEW_AGENDA_FAIL","error","DELETE_AGENDA","remove","DELETE_AGENDA_SUCCESS","LOAD_AGENDAS","LOAD_CD_AGENDA","d","Date","month","getMonth","toString","agendaYearRef","orderByChild","startAt","endAt","on","snap","i","agendas","data","val","Object","values","map","agenda","date","day","year","push","LOAD_CD_AGENDA_SUCCESS","orderBy","LOAD_CD_AGENDA_FAIL","getDay","getFullYear","cd","LOAD_AGENDAS_SUCCESS","LOAD_AGENDAS_FAIL","LOAD_AGENDA","LOAD_AGENDA_SUCCESS","LOAD_AGENDA_FAIL","UPDATE_AGENDA","child","update","UPDATE_AGENDA_SUCCESS","UPDATE_AGENDA_FAIL","stateCopy","cloneDeep"],"mappings":"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","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { database} from \"../../firebase\";\nimport _ from 'lodash'\nconst initialState = {\n};\nexport default function agendaReducer (state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.CREATE_NEW_AGENDA:{\n      console.log(action)\n     \n     const agendaRef = database.ref('agendas/'+action.payload.id)\n    agendaRef.set(action.payload).then(()=>{\n      action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_AGENDA_SUCCESS,action.payload))\n    })\n    .catch(()=>{\n      action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_AGENDA_FAIL,{error:\"could not creat agenda\"}))\n    });\n   \n    return state\n    }\n    case ACTIONS.CREATE_NEW_AGENDA_SUCCESS:{\n    return action.payload\n    }\n    case ACTIONS.DELETE_AGENDA:{\n      const agendaRef = database.ref('agendas/'+action.payload)\n      agendaRef.remove()\n      action.asyncDispatch(mainAction(ACTIONS.DELETE_AGENDA_SUCCESS,[]))\n  \n    return state\n    }  \n    case ACTIONS.DELETE_AGENDA_SUCCESS:{\n    action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDAS,[]))\n    return state\n    }  \n    case ACTIONS.LOAD_CD_AGENDA: {\n      let d = new Date();\n    let month = (d.getMonth() + 1).toString()\n     var agendaYearRef = database.ref('agendas').orderByChild('year').startAt('2020').endAt('2020')\n     agendaYearRef.on('value',(snap,i)=>{\n    \n    let agendas = []\n    const data = snap.val()\n    Object.values(data).map(agenda=>{\n      agenda.date = `${agenda.month}-${agenda.day}-${agenda.year}`\n      if(agenda.month >= month || agenda.month >= +month  && agenda.id > 0)\n      return agendas.push(agenda)\n    })\n    \n     action.asyncDispatch(mainAction(ACTIONS.LOAD_CD_AGENDA_SUCCESS,agendas))\n    })\n\n    return state\n    }\n    case ACTIONS.LOAD_CD_AGENDA_SUCCESS: {\n    return _.orderBy(action.payload,['month','day'],['asc','asc'])\n    }\n    case ACTIONS.LOAD_CD_AGENDA_FAIL: {\n\n    return state\n    }\n    case ACTIONS.LOAD_AGENDAS: {\n    let d = new Date();\n    let day = d.getDay();\n    let month = (d.getMonth() + 1).toString()\n    let year = d.getFullYear().toString();\n\n    const agendaYearRef = database.ref('agendas').orderByChild('year').startAt('2020').endAt('2021')\n    agendaYearRef.on('value',(snap,i)=>{\n   \n   let agendas = []\n   const data = snap.val()\n   Object.values(data).map(agenda=>{\n     agenda.date = `${agenda.month}-${agenda.day}-${agenda.year}`\n     agenda.month = +agenda.month\n     if(agenda.month >= month && agenda.cd !='')\n      return agendas.push(agenda)\n   })\n    action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDAS_SUCCESS,_.orderBy(agendas,['month','day'],['asc','asc'])))\n   })\n    return state\n    }\n    case ACTIONS.LOAD_AGENDAS_SUCCESS:{\n\n    return action.payload\n    }\n    case ACTIONS.LOAD_AGENDAS_FAIL:{\n    return state\n    }\n    case ACTIONS.LOAD_AGENDA:{\n\n    var agendaRef = database.ref('agendas/'+action.payload)\n     agendaRef.on('value',(snap,i)=>{\n    const data = snap.val()\n    if(data)\n    action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDA_SUCCESS,{...data}))\n      \n    })\n    var agendaRef = database.ref('agendas').orderByChild('id').startAt(action.payload).endAt(action.payload)\n     agendaRef.on('child_added',(snap,i)=>{\n    const data = snap.val()\n    \n    if(data)\n    action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDA_SUCCESS,{...data}))\n      \n    })\n    return state\n    }\n    case ACTIONS.LOAD_AGENDA_SUCCESS:{\n    return action.payload\n    }\n    case ACTIONS.LOAD_AGENDA_FAIL:{\n    return state\n    }\n    case ACTIONS.UPDATE_AGENDA:{\n      const agendaRef = database.ref('agendas')\n      agendaRef.child(action.payload.id).update(action.payload)\n      .then(()=>{\n        action.asyncDispatch(mainAction(ACTIONS.UPDATE_AGENDA_SUCCESS,action.payload))\n      }).catch(()=>{\n        action.asyncDispatch(mainAction(ACTIONS.UPDATE_AGENDA_FAIL,{error:\"failed to update agenda\"}))\n      })\n    return state\n    }\n    case ACTIONS.UPDATE_AGENDA_SUCCESS:{\n    let stateCopy = _.cloneDeep(action.payload)\n    action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDA,stateCopy.id))\n    return stateCopy\n    }\n    case ACTIONS.UPDATE_AGENDA_FAIL:{\n   \n    return state\n    }\n    default: \n      return {\n        ...state\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}