{"ast":null,"code":"import { ACTIONS } from 'redux/actions/types.js';\nimport { mainAction } from \"redux/actions/index.actions\";\nimport _ from \"lodash\";\nconst initialState = {};\nexport default function AllAgendasReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.LOAD_ALL_AGENDAS:\n      {\n        console.log(action);\n\n        let stateCopy = _.cloneDeep(state);\n\n        fetch('http://localhost:3001/api/loadAllAgendas').then(data => data.json()).then(res => {\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_ALL_AGENDAS_SUCCESS, res.data));\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_ALL_AGENDAS_FAIL, err)));\n        return stateCopy;\n      }\n\n    case ACTIONS.LOAD_ALL_AGENDAS_SUCCESS:\n      {\n        console.log(action);\n        let stateCopy = [];\n\n        _.orderBy(action.payload, ['year', 'month', 'day'], ['desc', 'desc', 'desc']).map((agenda, index) => {\n          if (index <= 300) return stateCopy.push(agenda);\n        }); // stateCopy.total = action.payload.length;\n\n\n        return stateCopy;\n      }\n\n    case ACTIONS.LOAD_ALL_AGENDAS_FAIL:\n      {\n        return state;\n      }\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/allAgendas.reducer.js"],"names":["ACTIONS","mainAction","_","initialState","AllAgendasReducer","state","action","type","LOAD_ALL_AGENDAS","console","log","stateCopy","cloneDeep","fetch","then","data","json","res","asyncDispatch","LOAD_ALL_AGENDAS_SUCCESS","catch","err","LOAD_ALL_AGENDAS_FAIL","orderBy","payload","map","agenda","index","push"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,MAAMC,YAAY,GAAG,EAArB;AAEA,eAAe,SAASC,iBAAT,CAA4BC,KAAK,GAAGF,YAApC,EAAkDG,MAAlD,EAA0D;AACrE,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKP,OAAO,CAACQ,gBAAb;AAA+B;AAC7BC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;;AACA,YAAIK,SAAS,GAAGT,CAAC,CAACU,SAAF,CAAYP,KAAZ,CAAhB;;AACDQ,QAAAA,KAAK,CAAC,0CAAD,CAAL,CACEC,IADF,CACQC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADjB,EAEEF,IAFF,CAEQG,GAAD,IAAS;AACbX,UAAAA,MAAM,CAACY,aAAP,CAAqBjB,UAAU,CAACD,OAAO,CAACmB,wBAAT,EAAkCF,GAAG,CAACF,IAAtC,CAA/B;AACD,SAJF,EAIIK,KAJJ,CAIUC,GAAG,IAAIf,MAAM,CAACY,aAAP,CAAqBjB,UAAU,CAACD,OAAO,CAACsB,qBAAT,EAA+BD,GAA/B,CAA/B,CAJjB;AAMC,eAAOV,SAAP;AACD;;AACD,SAAKX,OAAO,CAACmB,wBAAb;AAAuC;AACrCV,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACD,YAAIK,SAAS,GAAG,EAAhB;;AAEAT,QAAAA,CAAC,CAACqB,OAAF,CAAUjB,MAAM,CAACkB,OAAjB,EAAyB,CAAC,MAAD,EAAQ,OAAR,EAAgB,KAAhB,CAAzB,EAAgD,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf,CAAhD,EAAwEC,GAAxE,CAA4E,CAACC,MAAD,EAAQC,KAAR,KAAgB;AAC1F,cAAGA,KAAK,IAAI,GAAZ,EACA,OAAOhB,SAAS,CAACiB,IAAV,CAAeF,MAAf,CAAP;AACD,SAHD,EAJsC,CAQxC;;;AAEG,eAAOf,SAAP;AACD;;AACD,SAAKX,OAAO,CAACsB,qBAAb;AAAoC;AAElC,eAAOjB,KAAP;AACD;;AACD;AACE,aAAO,EACL,GAAGA;AADE,OAAP;AA9BJ;AAkCD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport _ from \"lodash\"\nconst initialState = {\n};\nexport default function AllAgendasReducer (state = initialState, action) {\n    switch (action.type) {\n      \n      case ACTIONS.LOAD_ALL_AGENDAS: {\n        console.log(action)\n        let stateCopy = _.cloneDeep(state)\n       fetch('http://localhost:3001/api/loadAllAgendas')\n        .then((data) => data.json())\n        .then((res) => {\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_ALL_AGENDAS_SUCCESS,res.data))\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_ALL_AGENDAS_FAIL,err)))\n        \n        return stateCopy\n      }\n      case ACTIONS.LOAD_ALL_AGENDAS_SUCCESS: {\n        console.log(action)\n       let stateCopy = []\n\n       _.orderBy(action.payload,['year','month','day'],['desc','desc','desc']).map((agenda,index)=>{\n         if(index <= 300)\n         return stateCopy.push(agenda)\n       })\n     // stateCopy.total = action.payload.length;\n      \n        return stateCopy\n      }\n      case ACTIONS.LOAD_ALL_AGENDAS_FAIL: {\n\n        return state\n      }\n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}