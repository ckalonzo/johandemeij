{"ast":null,"code":"import _toConsumableArray from\"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";import{db}from\"../../firebase\";import _ from\"lodash\";var initialState={};export default function musicProfileReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.LOAD_MUSIC_PROFILE:{db.collection(\"presentations\").where(\"id\",'==',action.payload).get().then(function(querySnapshot){var mainData=[];var data=querySnapshot.docs.map(function(doc){return doc.data();});mainData=_objectSpread({},data);db.collection(\"presentationmusic\").where(\"pres_id\",'==',mainData[0].id).get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){return doc.data();});mainData[0].music=_objectSpread({},data);action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_PROFILE_SUCCESS,mainData[0]));});});return state;}case ACTIONS.LOAD_MUSIC_PROFILE_BY_ID:{db.collection(\"presentations\").where(\"id\",'==',action.payload).get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){return doc.data();});action.asyncDispatch(mainAction.apply(void 0,[ACTIONS.LOAD_MUSIC_PROFILE_SUCCESS].concat(_toConsumableArray(data))));});return state;}case ACTIONS.LOAD_MUSIC_PROFILE_SUCCESS:{var newData=_.cloneDeep(action.payload);return newData;}case ACTIONS.LOAD_MUSIC_PROFILE_FAIL:{return state;}default:return _objectSpread({},state);}}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/musicProfile.reducer.js"],"names":["ACTIONS","mainAction","db","_","initialState","musicProfileReducer","state","action","type","LOAD_MUSIC_PROFILE","collection","where","payload","get","then","querySnapshot","mainData","data","docs","map","doc","id","music","asyncDispatch","LOAD_MUSIC_PROFILE_SUCCESS","LOAD_MUSIC_PROFILE_BY_ID","newData","cloneDeep","LOAD_MUSIC_PROFILE_FAIL"],"mappings":"yWAAA,OAASA,OAAT,KAAwB,wBAAxB,CACA,OAASC,UAAT,KAA2B,6BAA3B,CACA,OAASC,EAAT,KAAmB,gBAAnB,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CACA,GAAMC,CAAAA,YAAY,CAAG,EAArB,CAGA,cAAe,SAASC,CAAAA,mBAAT,EAA4D,IAA9BC,CAAAA,KAA8B,2DAAtBF,YAAsB,IAARG,CAAAA,MAAQ,2CACvE,OAAQA,MAAM,CAACC,IAAf,EAEE,IAAKR,CAAAA,OAAO,CAACS,kBAAb,CAAiC,CAEjCP,EAAE,CAACQ,UAAH,CAAc,eAAd,EACEC,KADF,CACQ,IADR,CACa,IADb,CACkBJ,MAAM,CAACK,OADzB,EAEIC,GAFJ,GAGIC,IAHJ,CAGS,SAAAC,aAAa,CAAI,CACrB,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAMC,CAAAA,IAAI,CAAGF,aAAa,CAACG,IAAd,CAAmBC,GAAnB,CAAuB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACH,IAAJ,EAAJ,EAA1B,CAAb,CACAD,QAAQ,kBAAOC,IAAP,CAAR,CAEAf,EAAE,CAACQ,UAAH,CAAc,mBAAd,EACCC,KADD,CACO,SADP,CACiB,IADjB,CACsBK,QAAQ,CAAC,CAAD,CAAR,CAAYK,EADlC,EAEGR,GAFH,GAGGC,IAHH,CAGQ,SAAAC,aAAa,CAAI,CACrB,GAAME,CAAAA,IAAI,CAAGF,aAAa,CAACG,IAAd,CAAmBC,GAAnB,CAAuB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACH,IAAJ,EAAJ,EAA1B,CAAb,CACAD,QAAQ,CAAC,CAAD,CAAR,CAAYM,KAAZ,kBAAwBL,IAAxB,EACAV,MAAM,CAACgB,aAAP,CAAqBtB,UAAU,CAACD,OAAO,CAACwB,0BAAT,CAAoCR,QAAQ,CAAC,CAAD,CAA5C,CAA/B,EACD,CAPH,EAUD,CAlBJ,EAoBE,MAAOV,CAAAA,KAAP,CACD,CACD,IAAKN,CAAAA,OAAO,CAACyB,wBAAb,CAAsC,CACpCvB,EAAE,CAACQ,UAAH,CAAc,eAAd,EACAC,KADA,CACM,IADN,CACW,IADX,CACgBJ,MAAM,CAACK,OADvB,EAEEC,GAFF,GAGEC,IAHF,CAGO,SAAAC,aAAa,CAAI,CACrB,GAAME,CAAAA,IAAI,CAAGF,aAAa,CAACG,IAAd,CAAmBC,GAAnB,CAAuB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACH,IAAJ,EAAJ,EAA1B,CAAb,CACAV,MAAM,CAACgB,aAAP,CAAqBtB,UAAU,MAAV,SAAWD,OAAO,CAACwB,0BAAnB,4BAAiDP,IAAjD,GAArB,EACD,CANF,EAOA,MAAOX,CAAAA,KAAP,CACD,CAED,IAAKN,CAAAA,OAAO,CAACwB,0BAAb,CAAyC,CACvC,GAAIE,CAAAA,OAAO,CAAGvB,CAAC,CAACwB,SAAF,CAAYpB,MAAM,CAACK,OAAnB,CAAd,CACA,MAAOc,CAAAA,OAAP,CACD,CACD,IAAK1B,CAAAA,OAAO,CAAC4B,uBAAb,CAAsC,CAEpC,MAAOtB,CAAAA,KAAP,CACD,CAGD,QACE,wBACKA,KADL,EAhDJ,CAoDD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { db } from \"../../firebase\";\nimport _ from \"lodash\"\nconst initialState = {\n   \n};\nexport default function musicProfileReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_MUSIC_PROFILE: {\n      \n      db.collection(\"presentations\")\n       .where(\"id\",'==',action.payload)\n         .get()\n         .then(querySnapshot => {\n           let mainData = [];\n           const data = querySnapshot.docs.map(doc => doc.data());\n           mainData = {...data}\n\n           db.collection(\"presentationmusic\")\n           .where(\"pres_id\",'==',mainData[0].id)\n             .get()\n             .then(querySnapshot => {\n               const data = querySnapshot.docs.map(doc => doc.data());\n               mainData[0].music = {...data}\n               action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_PROFILE_SUCCESS,mainData[0]))\n             }); \n            \n          \n         });\n     \n        return state\n      }\n      case ACTIONS.LOAD_MUSIC_PROFILE_BY_ID:{\n        db.collection(\"presentations\")\n       .where(\"id\",'==',action.payload)\n         .get()\n         .then(querySnapshot => {\n           const data = querySnapshot.docs.map(doc => doc.data());\n           action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_PROFILE_SUCCESS,...data))\n         });\n        return state\n      }\n      \n      case ACTIONS.LOAD_MUSIC_PROFILE_SUCCESS: {\n        let newData = _.cloneDeep(action.payload)\n        return newData\n      }\n      case ACTIONS.LOAD_MUSIC_PROFILE_FAIL: {\n\n        return state\n      }\n      \n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}