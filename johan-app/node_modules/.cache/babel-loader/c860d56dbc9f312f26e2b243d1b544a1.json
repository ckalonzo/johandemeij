{"ast":null,"code":"import { ACTIONS } from 'redux/actions/types.js';\nimport { mainAction } from \"redux/actions/index.actions\";\nimport _ from \"lodash\";\nconst initialState = {\n  agendas: [],\n  agendaTotal: ''\n};\nexport default function agendaReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.LOAD_CD_AGENDA:\n      {\n        fetch('http://localhost:3001/api/loadAgendas').then(data => data.json()).then(res => {\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_CD_AGENDA_SUCCESS, res.data));\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_CD_AGENDA_FAIL, err)));\n        return state;\n      }\n\n    case ACTIONS.LOAD_CD_AGENDA_SUCCESS:\n      {\n        let stateCopy = state;\n\n        _.orderBy(action.payload, ['year', 'month', 'day'], ['desc', 'desc', 'desc']).map((agenda, index) => {\n          if (index <= 10) return stateCopy.agendas.push(agenda);\n        });\n\n        stateCopy.agendaTotal = action.payload.length;\n        return stateCopy;\n      }\n\n    case ACTIONS.LOAD_CD_AGENDA_FAIL:\n      {\n        return state;\n      }\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johandemeij-master/johan-app/src/redux/reducers/agenda.reducer.js"],"names":["ACTIONS","mainAction","_","initialState","agendas","agendaTotal","agendaReducer","state","action","type","LOAD_CD_AGENDA","fetch","then","data","json","res","asyncDispatch","LOAD_CD_AGENDA_SUCCESS","catch","err","LOAD_CD_AGENDA_FAIL","stateCopy","orderBy","payload","map","agenda","index","push","length"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAC,EADW;AAEnBC,EAAAA,WAAW,EAAC;AAFO,CAArB;AAIA,eAAe,SAASC,aAAT,CAAwBC,KAAK,GAAGJ,YAAhC,EAA8CK,MAA9C,EAAsD;AACjE,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKT,OAAO,CAACU,cAAb;AAA6B;AAC5BC,QAAAA,KAAK,CAAC,uCAAD,CAAL,CACEC,IADF,CACQC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADjB,EAEEF,IAFF,CAEQG,GAAD,IAAS;AACbP,UAAAA,MAAM,CAACQ,aAAP,CAAqBf,UAAU,CAACD,OAAO,CAACiB,sBAAT,EAAgCF,GAAG,CAACF,IAApC,CAA/B;AACD,SAJF,EAIIK,KAJJ,CAIUC,GAAG,IAAIX,MAAM,CAACQ,aAAP,CAAqBf,UAAU,CAACD,OAAO,CAACoB,mBAAT,EAA6BD,GAA7B,CAA/B,CAJjB;AAMC,eAAOZ,KAAP;AACD;;AACD,SAAKP,OAAO,CAACiB,sBAAb;AAAqC;AACpC,YAAII,SAAS,GAAGd,KAAhB;;AAEAL,QAAAA,CAAC,CAACoB,OAAF,CAAUd,MAAM,CAACe,OAAjB,EAAyB,CAAC,MAAD,EAAQ,OAAR,EAAgB,KAAhB,CAAzB,EAAgD,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf,CAAhD,EAAwEC,GAAxE,CAA4E,CAACC,MAAD,EAAQC,KAAR,KAAgB;AAC1F,cAAGA,KAAK,IAAI,EAAZ,EACA,OAAOL,SAAS,CAACjB,OAAV,CAAkBuB,IAAlB,CAAuBF,MAAvB,CAAP;AACD,SAHD;;AAIAJ,QAAAA,SAAS,CAAChB,WAAV,GAAwBG,MAAM,CAACe,OAAP,CAAeK,MAAvC;AACC,eAAOP,SAAP;AACD;;AACD,SAAKrB,OAAO,CAACoB,mBAAb;AAAkC;AAEhC,eAAOb,KAAP;AACD;;AAED;AACE,aAAO,EACL,GAAGA;AADE,OAAP;AA3BJ;AA+BD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport _ from \"lodash\"\nconst initialState = {\n  agendas:[],\n  agendaTotal:''\n};\nexport default function agendaReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_CD_AGENDA: {\n       fetch('http://localhost:3001/api/loadAgendas')\n        .then((data) => data.json())\n        .then((res) => {\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_CD_AGENDA_SUCCESS,res.data))\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_CD_AGENDA_FAIL,err)))\n\n        return state\n      }\n      case ACTIONS.LOAD_CD_AGENDA_SUCCESS: {\n       let stateCopy = state\n\n       _.orderBy(action.payload,['year','month','day'],['desc','desc','desc']).map((agenda,index)=>{\n         if(index <= 10)\n         return stateCopy.agendas.push(agenda)\n       })\n       stateCopy.agendaTotal = action.payload.length\n        return stateCopy\n      }\n      case ACTIONS.LOAD_CD_AGENDA_FAIL: {\n\n        return state\n      }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}