{"ast":null,"code":"import { ACTIONS } from 'redux/actions/types.js';\nimport { mainAction } from \"redux/actions/index.actions\";\nimport { db } from \"../../firebase\";\nconst initialState = {};\nexport default function concertInformationReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.SUBMIT_CONCERT_INFORMATION:\n      {\n        let stateCopy = action.payload;\n        db.collection(\"concertinformation\").add(stateCopy).then(function (docRef) {\n          console.log(docRef);\n          stateCopy._id = docRef.id;\n          action.asyncDispatch(mainAction(ACTIONS.SUBMIT_CONCERT_INFORMATION_SUCCESS, {\n            status: \"success\"\n          }));\n        });\n        return state;\n      }\n\n    case ACTIONS.SUBMIT_CONCERT_INFORMATION_SUCCESS:\n      {\n        return action.payload;\n      }\n\n    case ACTIONS.SUBMIT_CONCERT_INFORMATION_FAIL:\n      {\n        return state;\n      }\n\n    case ACTIONS.LOAD_SUBMISSIONS:\n      {\n        db.collection(\"concertinformation\").get().then(querySnapshot => {\n          const data = querySnapshot.docs.map(doc => {\n            doc.data();\n          });\n          console.log(data);\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_SUBMISSIONS_SUCCESS, data));\n        });\n        return state;\n      }\n\n    case ACTIONS.LOAD_SUBMISSIONS_SUCCESS:\n      {\n        return action.payload;\n      }\n\n    case ACTIONS.LOAD_SUBMISSIONS_FAIL:\n      {\n        return state;\n      }\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/concertInfomation.reducer.js"],"names":["ACTIONS","mainAction","db","initialState","concertInformationReducer","state","action","type","SUBMIT_CONCERT_INFORMATION","stateCopy","payload","collection","add","then","docRef","console","log","_id","id","asyncDispatch","SUBMIT_CONCERT_INFORMATION_SUCCESS","status","SUBMIT_CONCERT_INFORMATION_FAIL","LOAD_SUBMISSIONS","get","querySnapshot","data","docs","map","doc","LOAD_SUBMISSIONS_SUCCESS","LOAD_SUBMISSIONS_FAIL"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,EAAT,QAAmB,gBAAnB;AACA,MAAMC,YAAY,GAAG,EAArB;AACA,eAAe,SAASC,yBAAT,CAAoCC,KAAK,GAAGF,YAA5C,EAA0DG,MAA1D,EAAkE;AAC7E,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKP,OAAO,CAACQ,0BAAb;AAAyC;AAC1C,YAAIC,SAAS,GAAGH,MAAM,CAACI,OAAvB;AACCR,QAAAA,EAAE,CAACS,UAAH,CAAc,oBAAd,EACCC,GADD,CACKH,SADL,EAECI,IAFD,CAEM,UAASC,MAAT,EAAgB;AACpBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAL,UAAAA,SAAS,CAACQ,GAAV,GAAgBH,MAAM,CAACI,EAAvB;AACAZ,UAAAA,MAAM,CAACa,aAAP,CAAqBlB,UAAU,CAACD,OAAO,CAACoB,kCAAT,EAA4C;AAACC,YAAAA,MAAM,EAAC;AAAR,WAA5C,CAA/B;AACD,SAND;AAOE,eAAOhB,KAAP;AACD;;AACD,SAAKL,OAAO,CAACoB,kCAAb;AAAiD;AAE/C,eAAOd,MAAM,CAACI,OAAd;AACD;;AACD,SAAKV,OAAO,CAACsB,+BAAb;AAA8C;AAE5C,eAAOjB,KAAP;AACD;;AACD,SAAKL,OAAO,CAACuB,gBAAb;AAA+B;AAEjCrB,QAAAA,EAAE,CAACS,UAAH,CAAc,oBAAd,EACEa,GADF,GAEEX,IAFF,CAEOY,aAAa,IAAI;AACrB,gBAAMC,IAAI,GAAGD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAuBC,GAAG,IAAI;AAACA,YAAAA,GAAG,CAACH,IAAJ;AAAW,WAA1C,CAAb;AACAX,UAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACCpB,UAAAA,MAAM,CAACa,aAAP,CAAqBlB,UAAU,CAACD,OAAO,CAAC8B,wBAAT,EAAkCJ,IAAlC,CAA/B;AACF,SANF;AAQI,eAAOrB,KAAP;AACD;;AACD,SAAKL,OAAO,CAAC8B,wBAAb;AAAuC;AAErC,eAAOxB,MAAM,CAACI,OAAd;AACD;;AACD,SAAKV,OAAO,CAAC+B,qBAAb;AAAoC;AAElC,eAAO1B,KAAP;AACD;;AAED;AACE,aAAO,EACL,GAAGA;AADE,OAAP;AA3CJ;AA+CD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { db } from \"../../firebase\";\nconst initialState = {};\nexport default function concertInformationReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.SUBMIT_CONCERT_INFORMATION: {\n     let stateCopy = action.payload\n      db.collection(\"concertinformation\")\n      .add(stateCopy)\n      .then(function(docRef){\n        console.log(docRef)\n        stateCopy._id = docRef.id\n        action.asyncDispatch(mainAction(ACTIONS.SUBMIT_CONCERT_INFORMATION_SUCCESS,{status:\"success\"}))\n      });\n        return state\n      }\n      case ACTIONS.SUBMIT_CONCERT_INFORMATION_SUCCESS: {\n\n        return action.payload\n      }\n      case ACTIONS.SUBMIT_CONCERT_INFORMATION_FAIL: {\n\n        return state\n      }\n      case ACTIONS.LOAD_SUBMISSIONS: {\n\n    db.collection(\"concertinformation\")\n     .get()\n     .then(querySnapshot => {\n       const data = querySnapshot.docs.map(doc => {doc.data()}); \n       console.log(data)\n        action.asyncDispatch(mainAction(ACTIONS.LOAD_SUBMISSIONS_SUCCESS,data))\n     });\n\n        return state\n      }\n      case ACTIONS.LOAD_SUBMISSIONS_SUCCESS: {\n\n        return action.payload\n      }\n      case ACTIONS.LOAD_SUBMISSIONS_FAIL: {\n\n        return state\n      }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}