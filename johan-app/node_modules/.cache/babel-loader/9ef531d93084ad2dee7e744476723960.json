{"ast":null,"code":"import { ACTIONS } from 'redux/actions/types.js';\nimport { mainAction } from \"redux/actions/index.actions\";\nimport { db } from \"../../firebase\";\nimport _ from \"lodash\";\nconst initialState = {};\nexport default function presentationsReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.LOAD_PRESENTATIONS:\n      {\n        let stateCopy = [];\n        db.collection(\"presentations\").orderBy('id', 'desc').get().then(querySnapshot => {\n          const data = querySnapshot.docs.map(doc => doc.data());\n          let x = action.payload.limit - action.payload.skip;\n          console.log(x);\n          data.map((newData, i) => {\n            if (i < action.payload.limit && i > action.payload.skip) stateCopy.push(newData);\n          });\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATIONS_SUCCESS, stateCopy));\n        });\n        return state;\n      }\n\n    case ACTIONS.LOAD_PRESENTATIONS_SUCCESS:\n      {\n        return _.sortBy(action.payload, ['id', 'desc']);\n      }\n\n    case ACTIONS.LOAD_PRESENTATIONS_FAIL:\n      {\n        return state;\n      }\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/presentations.reducer.js"],"names":["ACTIONS","mainAction","db","_","initialState","presentationsReducer","state","action","type","LOAD_PRESENTATIONS","stateCopy","collection","orderBy","get","then","querySnapshot","data","docs","map","doc","x","payload","limit","skip","console","log","newData","i","push","asyncDispatch","LOAD_PRESENTATIONS_SUCCESS","sortBy","LOAD_PRESENTATIONS_FAIL"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,EAAT,QAAmB,gBAAnB;AACA,OAAQC,CAAR,MAAe,QAAf;AACA,MAAMC,YAAY,GAAG,EAArB;AACA,eAAe,SAASC,oBAAT,CAA+BC,KAAK,GAAGF,YAAvC,EAAqDG,MAArD,EAA6D;AACxE,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKR,OAAO,CAACS,kBAAb;AAAiC;AAC/B,YAAIC,SAAS,GAAG,EAAhB;AACCR,QAAAA,EAAE,CAACS,UAAH,CAAc,eAAd,EACCC,OADD,CACS,IADT,EACc,MADd,EAEAC,GAFA,GAGAC,IAHA,CAGKC,aAAa,IAAI;AACrB,gBAAMC,IAAI,GAAGD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAuBC,GAAG,IAAIA,GAAG,CAACH,IAAJ,EAA9B,CAAb;AACA,cAAII,CAAC,GAAIb,MAAM,CAACc,OAAP,CAAeC,KAAf,GAAuBf,MAAM,CAACc,OAAP,CAAeE,IAA/C;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYL,CAAZ;AACAJ,UAAAA,IAAI,CAACE,GAAL,CAAS,CAACQ,OAAD,EAASC,CAAT,KAAa;AACpB,gBAAGA,CAAC,GAAGpB,MAAM,CAACc,OAAP,CAAeC,KAAnB,IAA4BK,CAAC,GAAGpB,MAAM,CAACc,OAAP,CAAeE,IAAlD,EACAb,SAAS,CAACkB,IAAV,CAAeF,OAAf;AACD,WAHD;AAIAnB,UAAAA,MAAM,CAACsB,aAAP,CAAqB5B,UAAU,CAACD,OAAO,CAAC8B,0BAAT,EAAoCpB,SAApC,CAA/B;AACD,SAZA;AAcD,eAAOJ,KAAP;AACD;;AACD,SAAKN,OAAO,CAAC8B,0BAAb;AAAyC;AACvC,eAAO3B,CAAC,CAAC4B,MAAF,CAASxB,MAAM,CAACc,OAAhB,EAAwB,CAAC,IAAD,EAAM,MAAN,CAAxB,CAAP;AACD;;AACD,SAAKrB,OAAO,CAACgC,uBAAb;AAAsC;AAEpC,eAAO1B,KAAP;AACD;;AAED;AACE,aAAO,EACL,GAAGA;AADE,OAAP;AA7BJ;AAiCD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { db } from \"../../firebase\";\nimport  _ from \"lodash\"\nconst initialState = {};\nexport default function presentationsReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_PRESENTATIONS: {\n        let stateCopy = []\n         db.collection(\"presentations\")\n         .orderBy('id','desc')\n        .get()\n        .then(querySnapshot => {\n          const data = querySnapshot.docs.map(doc => doc.data());\n          let x =  action.payload.limit - action.payload.skip;\n          console.log(x)\n          data.map((newData,i)=>{\n            if(i < action.payload.limit && i > action.payload.skip)\n            stateCopy.push(newData)\n          })\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATIONS_SUCCESS,stateCopy))\n        });\n        \n        return state\n      }\n      case ACTIONS.LOAD_PRESENTATIONS_SUCCESS: {\n        return _.sortBy(action.payload,['id','desc'])\n      }\n      case ACTIONS.LOAD_PRESENTATIONS_FAIL: {\n\n        return state\n      }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}