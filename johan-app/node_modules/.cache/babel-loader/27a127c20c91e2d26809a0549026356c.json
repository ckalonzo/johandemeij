{"ast":null,"code":"import { ACTIONS } from 'redux/actions/types.js';\nimport { mainAction } from \"redux/actions/index.actions\";\nimport { db } from \"../../firebase\";\nimport _ from \"lodash\";\nconst initialState = {};\nexport default function musicProfileReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.LOAD_MUSIC_PROFILE:\n      {\n        db.collection(\"presentations\").where(\"id\", '==', action.payload).get().then(querySnapshot => {\n          let mainData = [];\n          const data = querySnapshot.docs.map(doc => doc.data());\n          mainData = { ...data\n          };\n          db.collection(\"presentationmuic\").where(\"pres_id\", '==', mainData[0].id).get().then(querySnapshot => {\n            const data = querySnapshot.docs.map(doc => doc.data());\n            mainData[0].music = { ...data\n            };\n          });\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_PROFILE_SUCCESS, mainData[0]));\n        });\n        return state;\n      }\n\n    case ACTIONS.LOAD_MUSIC_PROFILE_BY_ID:\n      {\n        db.collection(\"presentations\").where(\"id\", '==', action.payload).get().then(querySnapshot => {\n          const data = querySnapshot.docs.map(doc => doc.data());\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_PROFILE_SUCCESS, ...data));\n        });\n        return state;\n      }\n\n    case ACTIONS.LOAD_MUSIC_PROFILE_SUCCESS:\n      {\n        return action.payload;\n      }\n\n    case ACTIONS.LOAD_MUSIC_PROFILE_FAIL:\n      {\n        return state;\n      }\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/Users/carlkalonzo/Documents/DEV/johandemeij/johan-app/src/redux/reducers/musicProfile.reducer.js"],"names":["ACTIONS","mainAction","db","_","initialState","musicProfileReducer","state","action","type","LOAD_MUSIC_PROFILE","collection","where","payload","get","then","querySnapshot","mainData","data","docs","map","doc","id","music","asyncDispatch","LOAD_MUSIC_PROFILE_SUCCESS","LOAD_MUSIC_PROFILE_BY_ID","LOAD_MUSIC_PROFILE_FAIL"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,EAAT,QAAmB,gBAAnB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,MAAMC,YAAY,GAAG,EAArB;AAGA,eAAe,SAASC,mBAAT,CAA8BC,KAAK,GAAGF,YAAtC,EAAoDG,MAApD,EAA4D;AACvE,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKR,OAAO,CAACS,kBAAb;AAAiC;AAEjCP,QAAAA,EAAE,CAACQ,UAAH,CAAc,eAAd,EACEC,KADF,CACQ,IADR,EACa,IADb,EACkBJ,MAAM,CAACK,OADzB,EAEIC,GAFJ,GAGIC,IAHJ,CAGSC,aAAa,IAAI;AACrB,cAAIC,QAAQ,GAAG,EAAf;AACA,gBAAMC,IAAI,GAAGF,aAAa,CAACG,IAAd,CAAmBC,GAAnB,CAAuBC,GAAG,IAAIA,GAAG,CAACH,IAAJ,EAA9B,CAAb;AACAD,UAAAA,QAAQ,GAAG,EAAC,GAAGC;AAAJ,WAAX;AAEAf,UAAAA,EAAE,CAACQ,UAAH,CAAc,kBAAd,EACCC,KADD,CACO,SADP,EACiB,IADjB,EACsBK,QAAQ,CAAC,CAAD,CAAR,CAAYK,EADlC,EAEGR,GAFH,GAGGC,IAHH,CAGQC,aAAa,IAAI;AACrB,kBAAME,IAAI,GAAGF,aAAa,CAACG,IAAd,CAAmBC,GAAnB,CAAuBC,GAAG,IAAIA,GAAG,CAACH,IAAJ,EAA9B,CAAb;AACAD,YAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYM,KAAZ,GAAoB,EAAC,GAAGL;AAAJ,aAApB;AACD,WANH;AAQAV,UAAAA,MAAM,CAACgB,aAAP,CAAqBtB,UAAU,CAACD,OAAO,CAACwB,0BAAT,EAAoCR,QAAQ,CAAC,CAAD,CAA5C,CAA/B;AACD,SAjBJ;AAmBE,eAAOV,KAAP;AACD;;AACD,SAAKN,OAAO,CAACyB,wBAAb;AAAsC;AACpCvB,QAAAA,EAAE,CAACQ,UAAH,CAAc,eAAd,EACAC,KADA,CACM,IADN,EACW,IADX,EACgBJ,MAAM,CAACK,OADvB,EAEEC,GAFF,GAGEC,IAHF,CAGOC,aAAa,IAAI;AACrB,gBAAME,IAAI,GAAGF,aAAa,CAACG,IAAd,CAAmBC,GAAnB,CAAuBC,GAAG,IAAIA,GAAG,CAACH,IAAJ,EAA9B,CAAb;AACAV,UAAAA,MAAM,CAACgB,aAAP,CAAqBtB,UAAU,CAACD,OAAO,CAACwB,0BAAT,EAAoC,GAAGP,IAAvC,CAA/B;AACD,SANF;AAOA,eAAOX,KAAP;AACD;;AAED,SAAKN,OAAO,CAACwB,0BAAb;AAAyC;AAEvC,eAAOjB,MAAM,CAACK,OAAd;AACD;;AACD,SAAKZ,OAAO,CAAC0B,uBAAb;AAAsC;AAEpC,eAAOpB,KAAP;AACD;;AAGD;AACE,aAAO,EACL,GAAGA;AADE,OAAP;AA/CJ;AAmDD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { db } from \"../../firebase\";\nimport _ from \"lodash\"\nconst initialState = {\n   \n};\nexport default function musicProfileReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_MUSIC_PROFILE: {\n      \n      db.collection(\"presentations\")\n       .where(\"id\",'==',action.payload)\n         .get()\n         .then(querySnapshot => {\n           let mainData = [];\n           const data = querySnapshot.docs.map(doc => doc.data());\n           mainData = {...data}\n\n           db.collection(\"presentationmuic\")\n           .where(\"pres_id\",'==',mainData[0].id)\n             .get()\n             .then(querySnapshot => {\n               const data = querySnapshot.docs.map(doc => doc.data());\n               mainData[0].music = {...data}\n             }); \n\n           action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_PROFILE_SUCCESS,mainData[0]))\n         });\n     \n        return state\n      }\n      case ACTIONS.LOAD_MUSIC_PROFILE_BY_ID:{\n        db.collection(\"presentations\")\n       .where(\"id\",'==',action.payload)\n         .get()\n         .then(querySnapshot => {\n           const data = querySnapshot.docs.map(doc => doc.data());\n           action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_PROFILE_SUCCESS,...data))\n         });\n        return state\n      }\n      \n      case ACTIONS.LOAD_MUSIC_PROFILE_SUCCESS: {\n      \n        return action.payload\n      }\n      case ACTIONS.LOAD_MUSIC_PROFILE_FAIL: {\n\n        return state\n      }\n      \n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}