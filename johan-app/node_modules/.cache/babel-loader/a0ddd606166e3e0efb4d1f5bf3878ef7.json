{"ast":null,"code":"import { ACTIONS } from 'redux/actions/types.js';\nimport { updatePost } from 'API/indexAPI';\nimport { mainAction } from \"redux/actions/index.actions\";\nconst initialState = {};\nexport default function singlePostReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.LOAD_ARTICLE:\n      {\n        return action.payload;\n      }\n\n    case ACTIONS.LOAD_POST:\n      {\n        return action.payload;\n      }\n\n    case ACTIONS.UPDATE_POST:\n      {\n        console.log(ACTIONS.UPDATE_POST, action);\n        updatePost(action.payload).then(json => {\n          action.asyncDispatch(mainAction(ACTIONS.UPDATE_POST_SUCCESS, json.data.data));\n        }).catch(err => {\n          action.asyncDispatch(mainAction(ACTIONS.UPDATE_POST_FAIL, err));\n        });\n        return state;\n      }\n\n    case ACTIONS.UPDATE_POST_SUCCESS:\n      {\n        return {\n          state,\n          ...action.payload\n        };\n      }\n\n    case ACTIONS.UPDATE_POST_FAIL:\n      {\n        return state;\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johandemeij-master/johan-app/src/redux/reducers/singlePost.reducer.js"],"names":["ACTIONS","updatePost","mainAction","initialState","singlePostReducer","state","action","type","LOAD_ARTICLE","payload","LOAD_POST","UPDATE_POST","console","log","then","json","asyncDispatch","UPDATE_POST_SUCCESS","data","catch","err","UPDATE_POST_FAIL"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,QAA2B,6BAA3B;AAGA,MAAMC,YAAY,GAAG,EAArB;AACA,eAAe,SAASC,iBAAT,CAA4BC,KAAK,GAAGF,YAApC,EAAkDG,MAAlD,EAA0D;AACrE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,OAAO,CAACQ,YAAb;AAA0B;AACxB,eAAOF,MAAM,CAACG,OAAd;AACD;;AACD,SAAKT,OAAO,CAACU,SAAb;AAAwB;AACtB,eAAOJ,MAAM,CAACG,OAAd;AACD;;AACD,SAAKT,OAAO,CAACW,WAAb;AAAyB;AACxBC,QAAAA,OAAO,CAACC,GAAR,CAAYb,OAAO,CAACW,WAApB,EAAgCL,MAAhC;AACCL,QAAAA,UAAU,CAACK,MAAM,CAACG,OAAR,CAAV,CAA2BK,IAA3B,CAAgCC,IAAI,IAAE;AACpCT,UAAAA,MAAM,CAACU,aAAP,CAAqBd,UAAU,CAACF,OAAO,CAACiB,mBAAT,EAA6BF,IAAI,CAACG,IAAL,CAAUA,IAAvC,CAA/B;AACD,SAFD,EAEGC,KAFH,CAESC,GAAG,IAAE;AACZd,UAAAA,MAAM,CAACU,aAAP,CAAqBd,UAAU,CAACF,OAAO,CAACqB,gBAAT,EAA0BD,GAA1B,CAA/B;AACD,SAJD;AAKA,eAAOf,KAAP;AACD;;AACD,SAAKL,OAAO,CAACiB,mBAAb;AAAiC;AAC/B,eAAO;AAACZ,UAAAA,KAAD;AAAO,aAAGC,MAAM,CAACG;AAAjB,SAAP;AACD;;AACD,SAAKT,OAAO,CAACqB,gBAAb;AAA8B;AAC5B,eAAOhB,KAAP;AACD;;AACD;AACE,aAAOA,KAAP;AAvBJ;AA0BD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { updatePost } from 'API/indexAPI'\nimport { mainAction } from \"redux/actions/index.actions\"\n\n\nconst initialState = {};\nexport default function singlePostReducer (state = initialState, action) {\n    switch (action.type) {\n      case ACTIONS.LOAD_ARTICLE:{\n        return action.payload\n      }\n      case ACTIONS.LOAD_POST: {\n        return action.payload\n      }\n      case ACTIONS.UPDATE_POST:{\n       console.log(ACTIONS.UPDATE_POST,action)\n        updatePost(action.payload).then(json=>{\n          action.asyncDispatch(mainAction(ACTIONS.UPDATE_POST_SUCCESS,json.data.data))\n        }).catch(err=>{\n          action.asyncDispatch(mainAction(ACTIONS.UPDATE_POST_FAIL,err))\n        })\n        return state\n      }\n      case ACTIONS.UPDATE_POST_SUCCESS:{\n        return {state,...action.payload}\n      }\n      case ACTIONS.UPDATE_POST_FAIL:{\n        return state\n      }\n      default: \n        return state\n       \n    }\n  }"]},"metadata":{},"sourceType":"module"}