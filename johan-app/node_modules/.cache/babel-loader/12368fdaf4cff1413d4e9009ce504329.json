{"ast":null,"code":"import { ACTIONS } from 'redux/actions/types.js';\nimport { mainAction } from \"redux/actions/index.actions\";\nimport _ from \"lodash\";\nconst initialState = {};\nexport default function presentationReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.CREATE_NEW_PUBLICATION:\n      {\n        createPresentation(action.payload).then(json => {\n          console.log(action, json);\n          action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_PUBLICATION_SUCCESS, json));\n        }).catch(err => {\n          console.log(action, err);\n          action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_PUBLICATION_FAIL, err));\n        });\n        return action.payload;\n      }\n\n    case ACTIONS.CREATE_NEW_PUBLICATION_SUCCESS:\n      {\n        return action.payload;\n      }\n\n    case ACTIONS.CREATE_NEW_PUBLICATION_FAIL:\n      {\n        return state;\n      }\n\n    case ACTIONS.LOAD_PRESENTATION:\n      {\n        let stateCopy = _.cloneDeep(state);\n\n        stateCopy.currentID = action.payload;\n        fetch('http://localhost:3001/api/loadPresentationByID/' + action.payload).then(data => data.json()).then(res => {\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION_SUCCESS, res.data));\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION_FAIL, err)));\n        return state;\n      }\n\n    case ACTIONS.LOAD_PRESENTATION_SUCCESS:\n      {\n        return action.payload[0];\n      }\n\n    case ACTIONS.LOAD_PRESENTATION_FAIL:\n      {\n        return state;\n      }\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/presentation.reducer.js"],"names":["ACTIONS","mainAction","_","initialState","presentationReducer","state","action","type","CREATE_NEW_PUBLICATION","createPresentation","payload","then","json","console","log","asyncDispatch","CREATE_NEW_PUBLICATION_SUCCESS","catch","err","CREATE_NEW_PUBLICATION_FAIL","LOAD_PRESENTATION","stateCopy","cloneDeep","currentID","fetch","data","res","LOAD_PRESENTATION_SUCCESS","LOAD_PRESENTATION_FAIL"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAQC,CAAR,MAAe,QAAf;AACA,MAAMC,YAAY,GAAG,EAArB;AACA,eAAe,SAASC,mBAAT,CAA8BC,KAAK,GAAGF,YAAtC,EAAoDG,MAApD,EAA4D;AACvE,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKP,OAAO,CAACQ,sBAAb;AAAqC;AACjCC,QAAAA,kBAAkB,CAACH,MAAM,CAACI,OAAR,CAAlB,CAAmCC,IAAnC,CAAwCC,IAAI,IAAG;AAC7CC,UAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ,EAAmBM,IAAnB;AACAN,UAAAA,MAAM,CAACS,aAAP,CAAqBd,UAAU,CAACD,OAAO,CAACgB,8BAAT,EAAwCJ,IAAxC,CAA/B;AACD,SAHD,EAGGK,KAHH,CAGSC,GAAG,IAAI;AACdL,UAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ,EAAmBY,GAAnB;AACAZ,UAAAA,MAAM,CAACS,aAAP,CAAqBd,UAAU,CAACD,OAAO,CAACmB,2BAAT,EAAqCD,GAArC,CAA/B;AACD,SAND;AAOA,eAAOZ,MAAM,CAACI,OAAd;AACD;;AACD,SAAKV,OAAO,CAACgB,8BAAb;AAA6C;AAC3C,eAAOV,MAAM,CAACI,OAAd;AACD;;AACD,SAAKV,OAAO,CAACmB,2BAAb;AAA0C;AACxC,eAAOd,KAAP;AACD;;AACD,SAAKL,OAAO,CAACoB,iBAAb;AAAgC;AAC9B,YAAIC,SAAS,GAAGnB,CAAC,CAACoB,SAAF,CAAYjB,KAAZ,CAAhB;;AACAgB,QAAAA,SAAS,CAACE,SAAV,GAAsBjB,MAAM,CAACI,OAA7B;AACCc,QAAAA,KAAK,CAAE,oDAAmDlB,MAAM,CAACI,OAA5D,CAAL,CACCC,IADD,CACOc,IAAD,IAASA,IAAI,CAACb,IAAL,EADf,EAECD,IAFD,CAEOe,GAAD,IAAS;AACbpB,UAAAA,MAAM,CAACS,aAAP,CAAqBd,UAAU,CAACD,OAAO,CAAC2B,yBAAT,EAAmCD,GAAG,CAACD,IAAvC,CAA/B;AAED,SALD,EAKGR,KALH,CAKSC,GAAG,IAAIZ,MAAM,CAACS,aAAP,CAAqBd,UAAU,CAACD,OAAO,CAAC4B,sBAAT,EAAgCV,GAAhC,CAA/B,CALhB;AAMA,eAAOb,KAAP;AACD;;AACD,SAAML,OAAO,CAAC2B,yBAAd;AAAwC;AAEtC,eAAOrB,MAAM,CAACI,OAAP,CAAe,CAAf,CAAP;AACD;;AACD,SAAMV,OAAO,CAAC4B,sBAAd;AAAqC;AACnC,eAAOvB,KAAP;AACD;;AAEN;AACE,aAAO,EACL,GAAGA;AADE,OAAP;AAtCJ;AA0CD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport  _ from \"lodash\"\nconst initialState = {};\nexport default function presentationReducer (state = initialState, action) {\n    switch (action.type) {\n  \n        case ACTIONS.CREATE_NEW_PUBLICATION: {\n            createPresentation(action.payload).then(json =>{\n              console.log(action,json)\n              action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_PUBLICATION_SUCCESS,json))\n            }).catch(err => {\n              console.log(action,err)\n              action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_PUBLICATION_FAIL,err))\n            })\n            return action.payload\n          }\n          case ACTIONS.CREATE_NEW_PUBLICATION_SUCCESS: {\n            return action.payload\n          }\n          case ACTIONS.CREATE_NEW_PUBLICATION_FAIL: {\n            return state\n          }\n          case ACTIONS.LOAD_PRESENTATION: {\n            let stateCopy = _.cloneDeep(state)\n            stateCopy.currentID = action.payload\n             fetch ('http://localhost:3001/api/loadPresentationByID/'+ action.payload)\n             .then((data)=> data.json())\n             .then((res) => {\n               action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION_SUCCESS,res.data))\n             \n             }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION_FAIL,err)))\n             return state\n           }\n           case  ACTIONS.LOAD_PRESENTATION_SUCCESS:{\n             \n             return action.payload[0]\n           }\n           case  ACTIONS.LOAD_PRESENTATION_FAIL:{\n             return state\n           }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}