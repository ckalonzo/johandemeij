{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/components/dashboard/AdditionalInfo.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { mainAction } from \"redux/actions/index.actions\";\nimport { Table, Form, Row, Col, Button } from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport dayjs from \"dayjs\";\nimport _ from \"lodash\";\n\nconst AdditionalInfo = props => {\n  useEffect(() => {\n    // Update the document title using the browser API\n    window.scrollTo(0, 0);\n    props.actions.mainAction(ACTIONS.LOAD_CD_INFO, props.cdId); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const d = new Date();\n  const newId = dayjs(d).format('YYYYMMDDHHmmss');\n  const [status, setStatus] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [grade, setGrade] = useState(\"\");\n  const [composer, setComposer] = useState(\"\");\n  const [addInfo, setAddInfo] = useState(\"\");\n  const [addNewInfo, setNewInfo] = useState(false);\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = () => {\n    return;\n  };\n\n  const updateAdditionalInfo = () => {\n    let infoItem = {\n      time,\n      grade,\n      track_title: title,\n      composer,\n      addInfo\n    };\n  };\n\n  const addAdditionalInfo = () => {\n    let infoItem = {\n      id: newId,\n      time,\n      grade,\n      track_title: title,\n      composer,\n      addInfo\n    };\n  };\n\n  const List = () => {\n    const displayButtons = (id, whichButtonsToShow) => {\n      if (whichButtonsToShow === \"update\") return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 24\n        }\n      }, \"CANCEL\"), \" \", /*#__PURE__*/React.createElement(Button, {\n        eventKey: id,\n        onClick: e => {\n          setStatus(e.target.attributes.getNamedItem('eventKey').value);\n        },\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 69\n        }\n      }, \"UPDATE\"));\n      if (whichButtonsToShow === \"add\") return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => setNewInfo(false),\n        variant: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 24\n        }\n      }, \"CANCEL\"), \" \", /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          addAdditionalInfo();\n        },\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 100\n        }\n      }, \"ADD\"));\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 24\n        }\n      }, \"DEL\"), \" \", /*#__PURE__*/React.createElement(Button, {\n        eventKey: id,\n        onClick: e => {\n          setStatus(e.target.attributes.getNamedItem('eventKey').value);\n        },\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 63\n        }\n      }, \"EDIT\"));\n    };\n\n    const ListItems = () => {\n      if (addNewInfo) return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        as: \"select\",\n        onChange: e => setTitle(e.target.value),\n        onBlur: e => setTitle(e.target.value),\n        defaultValue: title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      }, \"SELECT A CD\"), Object.values(_.orderBy(props.allPresentations ? props.allPresentations : [], \"cdName\", \"asc\")).map(CD => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: CD.id,\n          value: CD.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 40\n          }\n        }, CD.cdName);\n      }))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"\",\n        defaultValue: time,\n        onChange: e => setTime(e.target.value),\n        onBlur: e => setTime(e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"\",\n        defaultValue: grade,\n        onChange: e => setGrade(e.target.value),\n        onBlur: e => setGrade(e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        as: \"textarea\",\n        rows: \"3\",\n        size: \"sm\",\n        placeholder: \"\",\n        defaultValue: composer,\n        onChange: e => setComposer(e.target.value),\n        onBlur: e => setComposer(e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        type: \"textarea\",\n        size: \"sm\",\n        as: \"textarea\",\n        rows: \"3\",\n        placeholder: \"\",\n        defaultValue: addInfo,\n        onChange: e => setAddInfo(e.target.value),\n        onBlur: e => setAddInfo(e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }\n      }, displayButtons(\"\", \"add\")));\n      return Object.values(props.additionalInfo).map(info => {\n        if (info.id !== status) return /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }\n        }, info.title[0]), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }\n        }, info.time), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }\n        }, info.grade), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }\n        }, info.composer), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }\n        }, info.addInfo), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }\n        }, displayButtons(info.id)));\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          className: info.id === status ? \"active\" : \"\",\n          key: info.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 1\n          }\n        }, \" \", /*#__PURE__*/React.createElement(Form.Control, {\n          required: true,\n          as: \"select\",\n          onChange: e => setTitle(e.target.value),\n          onBlur: e => setTitle(e.target.value),\n          defaultValue: info.track_title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }\n        }, \"SELECT A CD\"), Object.values(_.orderBy(props.allPresentations ? props.allPresentations : [], \"cdName\", \"asc\")).map(CD => {\n          return +CD.id === +info.track_title ? /*#__PURE__*/React.createElement(\"option\", {\n            key: CD.id,\n            value: CD.id,\n            selected: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 53\n            }\n          }, CD.cdName) : /*#__PURE__*/React.createElement(\"option\", {\n            key: CD.id,\n            value: CD.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }\n          }, CD.cdName);\n        }))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 1\n          }\n        }, /*#__PURE__*/React.createElement(Form.Control, {\n          required: true,\n          type: \"text\",\n          size: \"sm\",\n          placeholder: \"\",\n          defaultValue: info.time,\n          onChange: e => setTime(e.target.value),\n          onBlur: e => setTime(e.target.value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 5\n          }\n        })), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 1\n          }\n        }, /*#__PURE__*/React.createElement(Form.Control, {\n          required: true,\n          type: \"text\",\n          size: \"sm\",\n          placeholder: \"\",\n          defaultValue: info.grade,\n          onChange: e => setGrade(e.target.value),\n          onBlur: e => setGrade(e.target.value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 5\n          }\n        })), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 1\n          }\n        }, /*#__PURE__*/React.createElement(Form.Control, {\n          required: true,\n          as: \"textarea\",\n          rows: \"3\",\n          size: \"sm\",\n          placeholder: \"\",\n          defaultValue: info.composer,\n          onChange: e => setComposer(e.target.value),\n          onBlur: e => setComposer(e.target.value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 5\n          }\n        })), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 1\n          }\n        }, /*#__PURE__*/React.createElement(Form.Control, {\n          required: true,\n          type: \"textarea\",\n          size: \"sm\",\n          as: \"textarea\",\n          rows: \"3\",\n          placeholder: \"\",\n          defaultValue: info.addInfo,\n          onChange: e => setAddInfo(e.target.value),\n          onBlur: e => setAddInfo(e.target.value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 5\n          }\n        })), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 1\n          }\n        }, displayButtons(info.id, \"update\")));\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      className: \"additional-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, \"title\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, \"time\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, \"grade\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, \"composer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, \"additional info\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => setNewInfo(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }, \"ADD INFO\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListItems, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 16\n      }\n    })));\n  };\n\n  console.log(props);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    allPresentations: _.orderBy(state.AllPresentationsReducer, \"id\", \"asc\"),\n    additionalInfo: state.cdInfoReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      mainAction\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdditionalInfo);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/components/dashboard/AdditionalInfo.jsx"],"names":["React","useEffect","useState","connect","bindActionCreators","mainAction","Table","Form","Row","Col","Button","ACTIONS","dayjs","_","AdditionalInfo","props","window","scrollTo","actions","LOAD_CD_INFO","cdId","d","Date","newId","format","status","setStatus","title","setTitle","time","setTime","grade","setGrade","composer","setComposer","addInfo","setAddInfo","addNewInfo","setNewInfo","validated","setValidated","handleSubmit","updateAdditionalInfo","infoItem","track_title","addAdditionalInfo","id","List","displayButtons","whichButtonsToShow","e","target","attributes","getNamedItem","value","ListItems","Object","values","orderBy","allPresentations","map","CD","cdName","additionalInfo","info","console","log","mapStateToProps","state","AllPresentationsReducer","cdInfoReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { Table, Form, Row, Col, Button} from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport dayjs from \"dayjs\"\nimport _ from \"lodash\"\nconst AdditionalInfo = (props) => {\n    useEffect(() => {\n        // Update the document title using the browser API\n        window.scrollTo(0,0)\n        props.actions.mainAction(ACTIONS.LOAD_CD_INFO,props.cdId)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, []);\n      const d = new Date()\n      const newId= dayjs(d).format('YYYYMMDDHHmmss');\n      const [status,setStatus] =  useState(\"\")\n      const [title,setTitle] = useState(\"\")\n      const [time,setTime] = useState(\"\")\n      const [grade,setGrade] = useState(\"\")\n      const [composer,setComposer] = useState(\"\")\n      const [addInfo,setAddInfo] = useState(\"\")\n      const [addNewInfo,setNewInfo] = useState(false)\n      const [validated, setValidated] = useState(false);\n      const handleSubmit = () => {\n          return\n      }\n      const updateAdditionalInfo = () => {\n          let infoItem = {\n            time,grade,\n            track_title:title,\n            composer,\n            addInfo\n          }\n      }\n      const addAdditionalInfo = () => {\n        let infoItem = {\n          id:newId,\n          time,grade,\n          track_title:title,\n          composer,\n          addInfo\n        }\n    }\n      const List = () => {\n          const displayButtons = (id,whichButtonsToShow) => {\n              if(whichButtonsToShow === \"update\")\n              return(<><Button  variant=\"secondary\">CANCEL</Button> <Button eventKey={id} onClick={(e)=>{setStatus(e.target.attributes.getNamedItem('eventKey').value)}} variant=\"primary\">UPDATE</Button></>)\n              if(whichButtonsToShow === \"add\")\n              return(<><Button onClick={()=>setNewInfo(false)} variant=\"secondary\">CANCEL</Button> <Button  onClick={()=>{addAdditionalInfo()}} variant=\"primary\">ADD</Button></>)\n\n              return(<><Button  variant=\"danger\">DEL</Button> <Button eventKey={id} onClick={(e)=>{setStatus(e.target.attributes.getNamedItem('eventKey').value)}} variant=\"primary\">EDIT</Button></>)\n          }\n          const ListItems = () =>{\n              if(addNewInfo)\n              return (<tr>\n              <td> <Form.Control\n                                    required\n                                    as=\"select\"\n                                    onChange={e => setTitle(e.target.value)}\n                                    onBlur={e => setTitle(e.target.value)}\n                                    defaultValue={title}\n                                  >\n                            <option value=\"\" >SELECT A CD</option>\n                            {Object.values(_.orderBy(props.allPresentations ? props.allPresentations:[],\"cdName\",\"asc\")).map\n                             (CD=>{\n                                return <option key={CD.id} value={CD.id} >{CD.cdName}</option>\n                                })}\n                                      \n                                  </Form.Control></td>\n              <td><Form.Control\n                                    required\n                                    type=\"text\"\n                                    size=\"sm\"\n                                    placeholder=\"\"\n                                    defaultValue={time}\n                                    onChange={e => setTime(e.target.value)}\n                                    onBlur={e => setTime(e.target.value)}\n                                  /></td>\n              <td><Form.Control\n                                    required\n                                    type=\"text\"\n                                    size=\"sm\"\n                                    placeholder=\"\"\n                                    defaultValue={grade}\n                                    onChange={e => setGrade(e.target.value)}\n                                    onBlur={e => setGrade(e.target.value)}\n                                  /></td>\n              <td><Form.Control\n                                    required\n                                    as=\"textarea\" rows=\"3\"\n                                    size=\"sm\"\n                                    placeholder=\"\"\n                                    defaultValue={composer}\n                                    onChange={e => setComposer(e.target.value)}\n                                    onBlur={e => setComposer(e.target.value)}\n                                  /></td>\n              <td><Form.Control\n                                    required\n                                    type=\"textarea\"\n                                    size=\"sm\"\n                                    as=\"textarea\" rows=\"3\"\n                                    placeholder=\"\"\n                                    defaultValue={addInfo}\n                                    onChange={e => setAddInfo(e.target.value)}\n                                    onBlur={e => setAddInfo(e.target.value)}\n                                  /></td>\n              <td>{displayButtons(\"\",\"add\")}</td>\n              </tr>)\n              return Object.values(props.additionalInfo).map(info => {\n              if(info.id !== status)\n              return (<tr>\n              <td>{info.title[0]}</td>\n              <td>{info.time}</td>\n              <td>{info.grade}</td>\n              <td>{info.composer}</td>\n              <td>{info.addInfo}</td>\n              <td>{displayButtons(info.id)}</td>\n              </tr>)\n\nreturn (<tr className={info.id === status ? \"active\":\"\"} key={info.id} >\n<td> <Form.Control\n                      required\n                      as=\"select\"\n                      onChange={e => setTitle(e.target.value)}\n                      onBlur={e => setTitle(e.target.value)}\n                      defaultValue={info.track_title}\n                    >\n              <option value=\"\" >SELECT A CD</option>\n              {Object.values(_.orderBy(props.allPresentations ? props.allPresentations:[],\"cdName\",\"asc\")).map\n              (CD=>{\n              return +CD.id === +info.track_title ? <option key={CD.id} value={CD.id} selected>{CD.cdName}</option>\n              : <option key={CD.id} value={CD.id} >{CD.cdName}</option>\n              })}\n                        \n                    </Form.Control></td>\n<td><Form.Control\n                      required\n                      type=\"text\"\n                      size=\"sm\"\n                      placeholder=\"\"\n                      defaultValue={info.time}\n                      onChange={e => setTime(e.target.value)}\n                      onBlur={e => setTime(e.target.value)}\n                    /></td>\n<td><Form.Control\n                      required\n                      type=\"text\"\n                      size=\"sm\"\n                      placeholder=\"\"\n                      defaultValue={info.grade}\n                      onChange={e => setGrade(e.target.value)}\n                      onBlur={e => setGrade(e.target.value)}\n                    /></td>\n<td><Form.Control\n                      required\n                      as=\"textarea\" rows=\"3\"\n                      size=\"sm\"\n                      placeholder=\"\"\n                      defaultValue={info.composer}\n                      onChange={e => setComposer(e.target.value)}\n                      onBlur={e => setComposer(e.target.value)}\n                    /></td>\n<td><Form.Control\n                      required\n                      type=\"textarea\"\n                      size=\"sm\"\n                      as=\"textarea\" rows=\"3\"\n                      placeholder=\"\"\n                      defaultValue={info.addInfo}\n                      onChange={e => setAddInfo(e.target.value)}\n                      onBlur={e => setAddInfo(e.target.value)}\n                    /></td>\n<td>{displayButtons(info.id,\"update\")}</td>\n</tr>)\n              })\n              \n          }\n          return (\n            <Table striped bordered hover className=\"additional-info\">\n           \n            <thead>\n              <tr>\n                <th>title</th>\n                <th>time</th>\n                <th>grade</th>\n                <th>composer</th>\n                <th>additional info</th>\n                <th><Button  variant=\"primary\" onClick={()=>setNewInfo(true)}>ADD INFO</Button></th>\n              </tr>\n            </thead>\n            <tbody>\n               <ListItems />\n            </tbody>\n            \n          </Table>\n          )\n      }\n      console.log(props)\n      return (<>\n        <List />\n      </>)\n}\n\nfunction mapStateToProps(state) {\n    \n    return {\n    allPresentations:_.orderBy(state.AllPresentationsReducer,\"id\",\"asc\"),\n      additionalInfo:state.cdInfoReducer\n    };\n  }\n  \n  function mapDispatchToProps(dispatch) {\n    return {\n      actions: bindActionCreators({mainAction}, dispatch)\n    };\n  }\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(AdditionalInfo);\n  "]},"metadata":{},"sourceType":"module"}