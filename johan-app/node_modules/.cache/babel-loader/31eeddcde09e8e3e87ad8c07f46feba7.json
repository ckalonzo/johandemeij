{"ast":null,"code":"import _objectSpread from\"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";import{database,db,dbRef,agendaRef}from\"../../firebase\";import _ from'lodash';var initialState={};export default function agendaReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.CREATE_NEW_AGENDA:{var stateCopy=_.cloneDeep(action.payload);db.collection(\"agendas\").add(stateCopy).then(function(docRef){db.collection(\"agendas\").doc(docRef.id).update(stateCopy).then(function(){stateCopy._id=docRef.id;action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_AGENDA_SUCCESS,stateCopy));});});return stateCopy;}case ACTIONS.CREATE_NEW_AGENDA_SUCCESS:{return action.payload;}case ACTIONS.DELETE_AGENDA:{db.collection(\"agendas\").where('id','==',action.payload).get().then(function(querySnapshot){querySnapshot.forEach(function(doc){return doc.ref.delete();});action.asyncDispatch(mainAction(ACTIONS.DELETE_AGENDA_SUCCESS,[]));});return state;}case ACTIONS.DELETE_AGENDA_SUCCESS:{action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDAS,[]));return state;}case ACTIONS.LOAD_CD_AGENDA:{var agendaYearRef=database.ref('agendas').orderByChild('year').startAt('2020').endAt('2020');agendaYearRef.on('value',function(snap,i){var agendas=[];var data=snap.val();Object.values(data).map(function(agenda){agenda.date=\"\".concat(agenda.month,\"-\").concat(agenda.day,\"-\").concat(agenda.year);if(agenda.month>=6)return agendas.push(agenda);});action.asyncDispatch(mainAction(ACTIONS.LOAD_CD_AGENDA_SUCCESS,_.orderBy(agendas,'day','asc')));});return state;}case ACTIONS.LOAD_CD_AGENDA_SUCCESS:{return action.payload;}case ACTIONS.LOAD_CD_AGENDA_FAIL:{return state;}case ACTIONS.LOAD_AGENDAS:{var d=new Date();var day=d.getDay();var month=(d.getMonth()+1).toString();var year=d.getFullYear().toString();// let stateCopy = ''\n// //=======================================================\n// db.collection(\"agendas\")\n// //.where(\"year\",'==',year)\n// .where(\"month\",'>=',month)\n// .orderBy(\"month\",\"asc\")\n// .orderBy(\"day\",\"asc\")\n// .get()\n// .then(querySnapshot => {\n// const data = querySnapshot.docs.map(doc => doc.data());\n// stateCopy = data;\n// //=======================================================\n//   db.collection(\"presentations\")\n//   // .where(\"id\",\"==\",stateCopy.cd.toString())\n//   .get()\n//   .then(querySnapshot => {\n//     const data = querySnapshot.docs.map(doc => doc.data());\n//     stateCopy.map((post,i)=>{\n//     let title = data.filter(presentation=>presentation.id===post.cd).map(presentation=>{return presentation.cdName})\n//     post.title = title[0]; \n//     post.date=`${post.year}-${post.month}-${post.day}`\n//     return post\n//     })\n//     action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDAS_SUCCESS,stateCopy))\n//   });\n// //========================================================\n// });\nvar _agendaYearRef=database.ref('agendas').orderByChild('year').startAt('2020').endAt('2020');_agendaYearRef.on('value',function(snap,i){var agendas=[];var data=snap.val();Object.values(data).map(function(agenda){agenda.date=\"\".concat(agenda.month,\"-\").concat(agenda.day,\"-\").concat(agenda.year);agenda.month=+agenda.month;if(agenda.month>=month&&agenda.cd!='')return agendas.push(agenda);});action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDAS_SUCCESS,_.orderBy(agendas,['month','day'],['asc','asc'])));});return state;}case ACTIONS.LOAD_AGENDAS_SUCCESS:{return action.payload;}case ACTIONS.LOAD_AGENDAS_FAIL:{return state;}case ACTIONS.LOAD_AGENDA:{var _id,_stateCopy;db.collection(\"agendas\").where(\"id\",\"==\",action.payload).get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){_id=doc.id;return doc.data();});_stateCopy=data;if(_stateCopy[0])_stateCopy[0]._id=_id;if(data.length>0){action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDA_SUCCESS,_stateCopy));}else{action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDA_FAIL,{error:\"Failed to retrieve agenda\"}));}});return state;}case ACTIONS.LOAD_AGENDA_SUCCESS:{return _objectSpread({},action.payload[0]);}case ACTIONS.LOAD_AGENDA_FAIL:{return state;}case ACTIONS.UPDATE_AGENDA:{console.log(action);db.collection(\"agendas\").doc(action.payload._id).update(action.payload).then(function(){action.asyncDispatch(mainAction(ACTIONS.UPDATE_AGENDA_SUCCESS,action.payload));});return state;}case ACTIONS.UPDATE_AGENDA_SUCCESS:{var _stateCopy2=_.cloneDeep(state);action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDA,_stateCopy2.id));return _objectSpread({state:state},action.payload);}default:return _objectSpread({},state);}}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/agenda.reducer.js"],"names":["ACTIONS","mainAction","database","db","dbRef","agendaRef","_","initialState","agendaReducer","state","action","type","CREATE_NEW_AGENDA","stateCopy","cloneDeep","payload","collection","add","then","docRef","doc","id","update","_id","asyncDispatch","CREATE_NEW_AGENDA_SUCCESS","DELETE_AGENDA","where","get","querySnapshot","forEach","ref","delete","DELETE_AGENDA_SUCCESS","LOAD_AGENDAS","LOAD_CD_AGENDA","agendaYearRef","orderByChild","startAt","endAt","on","snap","i","agendas","data","val","Object","values","map","agenda","date","month","day","year","push","LOAD_CD_AGENDA_SUCCESS","orderBy","LOAD_CD_AGENDA_FAIL","d","Date","getDay","getMonth","toString","getFullYear","cd","LOAD_AGENDAS_SUCCESS","LOAD_AGENDAS_FAIL","LOAD_AGENDA","docs","length","LOAD_AGENDA_SUCCESS","LOAD_AGENDA_FAIL","error","UPDATE_AGENDA","console","log","UPDATE_AGENDA_SUCCESS"],"mappings":"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","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { database,db , dbRef,agendaRef} from \"../../firebase\";\nimport _ from 'lodash'\nconst initialState = {\n};\nexport default function agendaReducer (state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.CREATE_NEW_AGENDA:{\n    let stateCopy = _.cloneDeep(action.payload)\n    db.collection(\"agendas\")\n    .add(stateCopy).then((docRef)=>{\n    db.collection(\"agendas\")\n    .doc(docRef.id)\n    .update(stateCopy).then(()=>{\n      stateCopy._id = docRef.id\n      action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_AGENDA_SUCCESS,stateCopy))\n    });\n    })\n    return stateCopy\n    }\n    case ACTIONS.CREATE_NEW_AGENDA_SUCCESS:{\n    return action.payload\n    }\n    case ACTIONS.DELETE_AGENDA:{\n\n    db.collection(\"agendas\")\n    .where('id','==',action.payload)\n    .get()\n    .then((querySnapshot) => {\n      querySnapshot.forEach((doc)=> doc.ref.delete())\n      action.asyncDispatch(mainAction(ACTIONS.DELETE_AGENDA_SUCCESS,[]))\n    });\n    return state\n    }  \n    case ACTIONS.DELETE_AGENDA_SUCCESS:{\n    action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDAS,[]))\n    return state\n    }  \n    case ACTIONS.LOAD_CD_AGENDA: {\n     var agendaYearRef = database.ref('agendas').orderByChild('year').startAt('2020').endAt('2020')\n     agendaYearRef.on('value',(snap,i)=>{\n    \n    let agendas = []\n    const data = snap.val()\n    Object.values(data).map(agenda=>{\n      agenda.date = `${agenda.month}-${agenda.day}-${agenda.year}`\n      if(agenda.month >= 6 )\n      return agendas.push(agenda)\n    })\n     action.asyncDispatch(mainAction(ACTIONS.LOAD_CD_AGENDA_SUCCESS,_.orderBy(agendas,'day','asc')))\n    })\n\n    return state\n    }\n    case ACTIONS.LOAD_CD_AGENDA_SUCCESS: {\n    return action.payload\n    }\n    case ACTIONS.LOAD_CD_AGENDA_FAIL: {\n\n    return state\n    }\n    case ACTIONS.LOAD_AGENDAS: {\n    let d = new Date();\n    let day = d.getDay();\n    let month = (d.getMonth() + 1).toString()\n    let year = d.getFullYear().toString();\n\n    // let stateCopy = ''\n    // //=======================================================\n    // db.collection(\"agendas\")\n    // //.where(\"year\",'==',year)\n    // .where(\"month\",'>=',month)\n    // .orderBy(\"month\",\"asc\")\n    // .orderBy(\"day\",\"asc\")\n    // .get()\n    // .then(querySnapshot => {\n    // const data = querySnapshot.docs.map(doc => doc.data());\n    // stateCopy = data;\n\n    // //=======================================================\n    //   db.collection(\"presentations\")\n    //   // .where(\"id\",\"==\",stateCopy.cd.toString())\n    //   .get()\n    //   .then(querySnapshot => {\n    //     const data = querySnapshot.docs.map(doc => doc.data());\n\n    //     stateCopy.map((post,i)=>{\n\n    //     let title = data.filter(presentation=>presentation.id===post.cd).map(presentation=>{return presentation.cdName})\n    //     post.title = title[0]; \n    //     post.date=`${post.year}-${post.month}-${post.day}`\n    //     return post\n    //     })\n\n    //     action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDAS_SUCCESS,stateCopy))\n    //   });\n    // //========================================================\n    // });\n\n    const agendaYearRef = database.ref('agendas').orderByChild('year').startAt('2020').endAt('2020')\n    agendaYearRef.on('value',(snap,i)=>{\n   \n   let agendas = []\n   const data = snap.val()\n   Object.values(data).map(agenda=>{\n     agenda.date = `${agenda.month}-${agenda.day}-${agenda.year}`\n     agenda.month = +agenda.month\n     if(agenda.month >= month && agenda.cd !='')\n      return agendas.push(agenda)\n   })\n    action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDAS_SUCCESS,_.orderBy(agendas,['month','day'],['asc','asc'])))\n   })\n    return state\n    }\n    case ACTIONS.LOAD_AGENDAS_SUCCESS:{\n\n    return action.payload\n    }\n    case ACTIONS.LOAD_AGENDAS_FAIL:{\n    return state\n    }\n    case ACTIONS.LOAD_AGENDA:{\n    let _id,stateCopy \n    db.collection(\"agendas\")\n    .where(\"id\",\"==\",action.payload)\n    .get()\n    .then(querySnapshot => {\n    const data = querySnapshot.docs.map(doc => {\n    _id = doc.id\n    return doc.data()});\n    stateCopy= data\n    if(stateCopy[0])\n    stateCopy[0]._id = _id\n      \n\n    if(data.length > 0){\n    action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDA_SUCCESS,stateCopy))\n    } else {\n    action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDA_FAIL,{error:\"Failed to retrieve agenda\"}))\n    }\n    });\n    return state\n    }\n    case ACTIONS.LOAD_AGENDA_SUCCESS:{\n    return {...action.payload[0]}\n    }\n    case ACTIONS.LOAD_AGENDA_FAIL:{\n    return state\n    }\n    case ACTIONS.UPDATE_AGENDA:{\n    console.log(action)\n    db.collection(\"agendas\")\n    .doc(action.payload._id)\n    .update(action.payload).then(()=>{\n      action.asyncDispatch(mainAction(ACTIONS.UPDATE_AGENDA_SUCCESS,action.payload))\n    });\n    return state\n    }\n    case ACTIONS.UPDATE_AGENDA_SUCCESS:{\n    let stateCopy = _.cloneDeep(state)\n    action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDA,stateCopy.id))\n    return {state,...action.payload}\n    }\n    default: \n      return {\n        ...state\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}