{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/components/dashboard/AdditionalInfo.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { mainAction } from \"redux/actions/index.actions\";\nimport { Table, Form, Row, Col, Button } from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport dayjs from \"dayjs\";\nimport _ from \"lodash\";\n\nconst AdditionalInfo = props => {\n  useEffect(() => {\n    // Update the document title using the browser API\n    window.scrollTo(0, 0);\n    props.actions.mainAction(ACTIONS.LOAD_CD_INFO, props.cdId); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const d = new Date();\n  const newId = dayjs(d).format('YYYYMMDDHHmmss');\n  const [status, setStatus] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [grade, setGrade] = useState(\"\");\n  const [composer, setComposer] = useState(\"\");\n  const [addInfo, setAddInfo] = useState(\"\");\n  const [addNewInfo, setNewInfo] = useState(false);\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = () => {\n    return;\n  };\n\n  const updateAdditionalInfo = (id, cdId) => {\n    let infoItem = {\n      id,\n      time: document.getElementById(\"time\").value,\n      grade: document.getElementById(\"grade\").value,\n      track_title: document.getElementById(\"title\").value,\n      composer: document.getElementById(\"composer\").value,\n      addInfo: document.getElementById(\"addInfo\").value,\n      cdId\n    };\n    props.actions.mainAction(ACTIONS.UPDATE_CD_INFO, infoItem);\n  };\n\n  const addAdditionalInfo = cdId => {\n    let infoItem = {\n      id: newId,\n      time: document.getElementById(\"time\").value,\n      grade: document.getElementById(\"grade\").value,\n      track_title: document.getElementById(\"title\").value,\n      composer: document.getElementById(\"composer\").value,\n      addInfo: document.getElementById(\"addInfo\").value,\n      cdId: props.match.params.id\n    };\n    props.actions.mainAction(ACTIONS.CREATE_CD_INFO, infoItem);\n  };\n\n  const deleteCd = (id, cdId) => {\n    props.actions.mainAction(ACTIONS.DELETE_CD_INFO, {\n      id: id,\n      cdId: props.match.params.id\n    });\n    setTimeout(() => {\n      window.location.reload();\n    }, 1000);\n  };\n\n  const List = () => {\n    const displayButtons = (id, whichButtonsToShow, cdId) => {\n      if (whichButtonsToShow === \"update\") return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => setStatus(\"\"),\n        variant: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 24\n        }\n      }, \"CANCEL\"), \" \", /*#__PURE__*/React.createElement(Button, {\n        eventKey: id,\n        onClick: e => {\n          setStatus(e.target.attributes.getNamedItem('eventKey').value);\n          updateAdditionalInfo(id, cdId);\n        },\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 96\n        }\n      }, \"UPDATE\"));\n      if (whichButtonsToShow === \"add\") return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => setNewInfo(false),\n        variant: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 24\n        }\n      }, \"CANCEL\"), \" \", /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          addAdditionalInfo(cdId);\n        },\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 100\n        }\n      }, \"ADD\"));\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          if (window.confirm(\"Delete this item?\")) deleteCd(id);\n        },\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 24\n        }\n      }, \"DEL\"), \" \", /*#__PURE__*/React.createElement(Button, {\n        eventKey: id,\n        onClick: e => {\n          setStatus(e.target.attributes.getNamedItem('eventKey').value);\n        },\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 130\n        }\n      }, \"EDIT\"));\n    };\n\n    const ListItems = () => {\n      if (addNewInfo) return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 16\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        as: \"select\" // onChange={e => setTitle(e.target.value)}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 51\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }\n      }, \"SELECT A CD\"), Object.values(_.orderBy(props.allPresentations ? props.allPresentations : [], \"cdName\", \"asc\")).map(CD => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: CD.id,\n          value: CD.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 40\n          }\n        }, CD.cdName);\n      })), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 36\n        }\n      }, \"Looks good!\"))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"time\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"\" // onChange={e => setTime(e.target.value)}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 54\n        }\n      }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 43\n        }\n      }, \"Looks good!\"))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"grade\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"\" // onChange={e => setGrade(e.target.value)}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 55\n        }\n      }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 43\n        }\n      }, \"Looks good!\"))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"composer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"3\",\n        size: \"sm\",\n        placeholder: \"\" //  onChange={e => setComposer(e.target.value)}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 58\n        }\n      }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 43\n        }\n      }, \"Looks good!\"))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"addInfo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"textarea\",\n        size: \"sm\",\n        as: \"textarea\",\n        rows: \"3\",\n        placeholder: \"\" // onChange={e => setAddInfo(e.target.value)}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 57\n        }\n      }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 43\n        }\n      }, \"Looks good!\"))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }\n      }, displayButtons(\"\", \"add\")));\n      return Object.values(props.additionalInfo).map(info => {\n        if (info.id !== status) return /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }\n        }, info.title[0]), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }\n        }, info.time), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }\n        }, info.grade), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }\n        }, info.composer), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }\n        }, info.addInfo), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }\n        }, displayButtons(info.id)));\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          className: info.id === status ? \"active\" : \"\",\n          key: info.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }\n        }, \" \", /*#__PURE__*/React.createElement(Form.Group, {\n          controlId: \"title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(Form.Control, {\n          required: true,\n          as: \"select\" // onChange={e => setTitle(e.target.value)}\n          ,\n          defaultValue: info.track_title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 56\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }\n        }, \"SELECT A CD\"), Object.values(_.orderBy(props.allPresentations ? props.allPresentations : [], \"cdName\", \"asc\")).map(CD => {\n          return +CD.id === +info.track_title ? /*#__PURE__*/React.createElement(\"option\", {\n            key: CD.id,\n            value: CD.id,\n            selected: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 71\n            }\n          }, CD.cdName) : /*#__PURE__*/React.createElement(\"option\", {\n            key: CD.id,\n            value: CD.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 35\n            }\n          }, CD.cdName);\n        })), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 36\n          }\n        }, \"Looks good!\"))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Form.Group, {\n          controlId: \"time\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          placeholder: \"\",\n          defaultValue: info.time // onChange={e => setTime(e.target.value)}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 54\n          }\n        }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 43\n          }\n        }, \"Looks good!\"))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Form.Group, {\n          controlId: \"grade\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          placeholder: \"\",\n          defaultValue: info.grade // onChange={e => setGrade(e.target.value)}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 55\n          }\n        }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 43\n          }\n        }, \"Looks good!\"))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Form.Group, {\n          controlId: \"composer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Form.Control, {\n          as: \"textarea\",\n          rows: \"3\",\n          size: \"sm\",\n          placeholder: \"\",\n          defaultValue: info.composer //  onChange={e => setComposer(e.target.value)}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 58\n          }\n        }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 43\n          }\n        }, \"Looks good!\"))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Form.Group, {\n          controlId: \"addInfo\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Form.Control, {\n          type: \"textarea\",\n          size: \"sm\",\n          as: \"textarea\",\n          rows: \"3\",\n          placeholder: \"\",\n          defaultValue: info.addInfo // onChange={e => setAddInfo(e.target.value)}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 57\n          }\n        }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 43\n          }\n        }, \"Looks good!\"))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }\n        }, displayButtons(info.id, \"update\", info.cdId)));\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      className: \"additional-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, \"title\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, \"time\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, \"grade\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, \"composer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, \"additional info\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => setNewInfo(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, \"ADD INFO\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListItems, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 16\n      }\n    }))));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    allPresentations: _.orderBy(state.AllPresentationsReducer, \"id\", \"asc\"),\n    additionalInfo: state.cdInfoReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      mainAction\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdditionalInfo);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/components/dashboard/AdditionalInfo.jsx"],"names":["React","useEffect","useState","connect","bindActionCreators","mainAction","Table","Form","Row","Col","Button","ACTIONS","dayjs","_","AdditionalInfo","props","window","scrollTo","actions","LOAD_CD_INFO","cdId","d","Date","newId","format","status","setStatus","title","setTitle","time","setTime","grade","setGrade","composer","setComposer","addInfo","setAddInfo","addNewInfo","setNewInfo","validated","setValidated","handleSubmit","updateAdditionalInfo","id","infoItem","document","getElementById","value","track_title","UPDATE_CD_INFO","addAdditionalInfo","match","params","CREATE_CD_INFO","deleteCd","DELETE_CD_INFO","setTimeout","location","reload","List","displayButtons","whichButtonsToShow","e","target","attributes","getNamedItem","confirm","ListItems","Object","values","orderBy","allPresentations","map","CD","cdName","additionalInfo","info","mapStateToProps","state","AllPresentationsReducer","cdInfoReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { Table, Form, Row, Col, Button} from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport dayjs from \"dayjs\"\nimport _ from \"lodash\"\nconst AdditionalInfo = (props) => {\n    useEffect(() => {\n        // Update the document title using the browser API\n        window.scrollTo(0,0)\n        props.actions.mainAction(ACTIONS.LOAD_CD_INFO,props.cdId)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, []);\n      const d = new Date()\n      const newId= dayjs(d).format('YYYYMMDDHHmmss');\n      const [status,setStatus] =  useState(\"\")\n      const [title,setTitle] = useState(\"\")\n      const [time,setTime] = useState(\"\")\n      const [grade,setGrade] = useState(\"\")\n      const [composer,setComposer] = useState(\"\")\n      const [addInfo,setAddInfo] = useState(\"\")\n      const [addNewInfo,setNewInfo] = useState(false)\n      const [validated, setValidated] = useState(false);\n      const handleSubmit = () => {\n          return\n      }\n      const updateAdditionalInfo = (id,cdId) => {\n          let infoItem = {\n            id,\n            time:document.getElementById(\"time\").value,\n            grade:document.getElementById(\"grade\").value,\n            track_title:document.getElementById(\"title\").value,\n            composer:document.getElementById(\"composer\").value,\n            addInfo:document.getElementById(\"addInfo\").value,\n            cdId\n          }\n          props.actions.mainAction(ACTIONS.UPDATE_CD_INFO,infoItem)\n      }\n      const addAdditionalInfo = (cdId) => {\n        let infoItem = {\n          id:newId,\n          time:document.getElementById(\"time\").value,\n            grade:document.getElementById(\"grade\").value,\n            track_title:document.getElementById(\"title\").value,\n            composer:document.getElementById(\"composer\").value,\n            addInfo:document.getElementById(\"addInfo\").value,\n            cdId:props.match.params.id\n        }\n        props.actions.mainAction(ACTIONS.CREATE_CD_INFO,infoItem)\n        \n    }\n    const deleteCd = (id,cdId) => {\n        props.actions.mainAction(ACTIONS.DELETE_CD_INFO,{id:id,cdId:props.match.params.id})\n        setTimeout(()=>{ \n            window.location.reload()\n           }, 1000);\n       \n    }\n      const List = () => {\n          const displayButtons = (id,whichButtonsToShow,cdId) => {\n              if(whichButtonsToShow === \"update\")\n              return(<><Button onClick={()=>setStatus(\"\")} variant=\"secondary\">CANCEL</Button> <Button eventKey={id} onClick={(e)=>{setStatus(e.target.attributes.getNamedItem('eventKey').value);updateAdditionalInfo(id,cdId)}} variant=\"primary\">UPDATE</Button></>)\n              if(whichButtonsToShow === \"add\")\n              return(<><Button onClick={()=>setNewInfo(false)} variant=\"secondary\">CANCEL</Button> <Button  onClick={()=>{addAdditionalInfo(cdId)}} variant=\"primary\">ADD</Button></>)\n\n              return(<><Button onClick={()=>{if(window.confirm(\"Delete this item?\"))deleteCd(id)}} variant=\"danger\">DEL</Button> <Button  eventKey={id} onClick={(e)=>{setStatus(e.target.attributes.getNamedItem('eventKey').value)}} variant=\"primary\">EDIT</Button></>)\n          }\n          const ListItems = () =>{\n              if(addNewInfo)\n              return (<tr>\n               <td> <Form.Group controlId=\"title\"><Form.Control\n                                        required\n                                        as=\"select\"\n                                       // onChange={e => setTitle(e.target.value)}\n                                       \n                                        >\n                                <option value=\"\" >SELECT A CD</option>\n                                {Object.values(_.orderBy(props.allPresentations ? props.allPresentations:[],\"cdName\",\"asc\")).map\n                                (CD=>{\n                                return <option key={CD.id} value={CD.id} >{CD.cdName}</option>\n                                })}\n                    </Form.Control><Form.Control.Feedback>Looks good!</Form.Control.Feedback></Form.Group></td>\n                    <td><Form.Group controlId=\"time\"><Form.Control\n                                        type=\"text\"\n                                        size=\"sm\"\n                                        placeholder=\"\"\n                                        \n                                       // onChange={e => setTime(e.target.value)}\n                                        /><Form.Control.Feedback>Looks good!</Form.Control.Feedback></Form.Group></td>\n                    <td><Form.Group controlId=\"grade\"><Form.Control\n                                        type=\"text\"\n                                        size=\"sm\"\n                                        placeholder=\"\"\n                                        \n                                       // onChange={e => setGrade(e.target.value)}\n                                        \n                                        /><Form.Control.Feedback>Looks good!</Form.Control.Feedback></Form.Group></td>\n                    <td><Form.Group controlId=\"composer\"><Form.Control\n                                        as=\"textarea\" rows=\"3\"\n                                        size=\"sm\"\n                                        placeholder=\"\"\n                                        \n                                      //  onChange={e => setComposer(e.target.value)}\n                                        /><Form.Control.Feedback>Looks good!</Form.Control.Feedback></Form.Group></td>\n                    <td><Form.Group controlId=\"addInfo\"><Form.Control\n                                        type=\"textarea\"\n                                        size=\"sm\"\n                                        as=\"textarea\" rows=\"3\"\n                                        placeholder=\"\"\n                                        \n                                       // onChange={e => setAddInfo(e.target.value)}\n                                        /><Form.Control.Feedback>Looks good!</Form.Control.Feedback></Form.Group></td>\n              <td>{displayButtons(\"\",\"add\")}</td>\n              </tr>)\n              return Object.values(props.additionalInfo).map(info => {\n              if(info.id !== status)\n              return (<tr>\n              <td>{info.title[0]}</td>\n              <td>{info.time}</td>\n              <td>{info.grade}</td>\n              <td>{info.composer}</td>\n              <td>{info.addInfo}</td>\n              <td>{displayButtons(info.id)}</td>\n              </tr>)\n                return (<tr className={info.id === status ? \"active\":\"\"} key={info.id} >\n                    <td> <Form.Group controlId=\"title\"><Form.Control\n                                        required\n                                        as=\"select\"\n                                       // onChange={e => setTitle(e.target.value)}\n                                        defaultValue={info.track_title}\n                                        >\n                                <option value=\"\" >SELECT A CD</option>\n                                {Object.values(_.orderBy(props.allPresentations ? props.allPresentations:[],\"cdName\",\"asc\")).map\n                                (CD=>{\n                                return +CD.id === +info.track_title ? <option key={CD.id} value={CD.id} selected>{CD.cdName}</option>\n                                : <option key={CD.id} value={CD.id} >{CD.cdName}</option>\n                                })}\n                    </Form.Control><Form.Control.Feedback>Looks good!</Form.Control.Feedback></Form.Group></td>\n                    <td><Form.Group controlId=\"time\"><Form.Control\n                                        type=\"text\"\n                                        size=\"sm\"\n                                        placeholder=\"\"\n                                        defaultValue={info.time}\n                                       // onChange={e => setTime(e.target.value)}\n                                        /><Form.Control.Feedback>Looks good!</Form.Control.Feedback></Form.Group></td>\n                    <td><Form.Group controlId=\"grade\"><Form.Control\n                                        type=\"text\"\n                                        size=\"sm\"\n                                        placeholder=\"\"\n                                        defaultValue={info.grade}\n                                       // onChange={e => setGrade(e.target.value)}\n                                        \n                                        /><Form.Control.Feedback>Looks good!</Form.Control.Feedback></Form.Group></td>\n                    <td><Form.Group controlId=\"composer\"><Form.Control\n                                        as=\"textarea\" rows=\"3\"\n                                        size=\"sm\"\n                                        placeholder=\"\"\n                                        defaultValue={info.composer}\n                                      //  onChange={e => setComposer(e.target.value)}\n                                        /><Form.Control.Feedback>Looks good!</Form.Control.Feedback></Form.Group></td>\n                    <td><Form.Group controlId=\"addInfo\"><Form.Control\n                                        type=\"textarea\"\n                                        size=\"sm\"\n                                        as=\"textarea\" rows=\"3\"\n                                        placeholder=\"\"\n                                        defaultValue={info.addInfo}\n                                       // onChange={e => setAddInfo(e.target.value)}\n                                        /><Form.Control.Feedback>Looks good!</Form.Control.Feedback></Form.Group></td>\n                    <td>{displayButtons(info.id,\"update\",info.cdId)}</td>\n                    </tr>)\n              })\n              \n          }\n          return (\n            <Form>\n            <Table striped bordered hover className=\"additional-info\">\n           \n            <thead>\n              <tr>\n                <th>title</th>\n                <th>time</th>\n                <th>grade</th>\n                <th>composer</th>\n                <th>additional info</th>\n                <th><Button  variant=\"primary\" onClick={()=>setNewInfo(true)}>ADD INFO</Button></th>\n              </tr>\n            </thead>\n            <tbody>\n               <ListItems />\n            </tbody>\n            \n          </Table>\n          </Form>\n          )\n      }\n      return (<>\n        <List />\n      </>)\n}\n\nfunction mapStateToProps(state) {\n    \n    return {\n    allPresentations:_.orderBy(state.AllPresentationsReducer,\"id\",\"asc\"),\n      additionalInfo:state.cdInfoReducer\n    };\n  }\n  \n  function mapDispatchToProps(dispatch) {\n    return {\n      actions: bindActionCreators({mainAction}, dispatch)\n    };\n  }\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(AdditionalInfo);\n  "]},"metadata":{},"sourceType":"module"}