{"ast":null,"code":"import { ACTIONS } from 'redux/actions/types.js';\nimport { mainAction } from \"redux/actions/index.actions\";\nimport _ from \"lodash\";\nconst initialState = {\n  categories: [\"Compositions\", \"Amstel Classics\", \"Music for the Theatre\", \"Symphony Orchestra\", \"The Music of S&oslash;ren Hyldgaard\", \"Solo Concertos\"],\n  leftColumn: [],\n  rightColumn: []\n};\nexport default function musicReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.LOAD_MUSIC:\n      {\n        fetch('http://localhost:3001/api/loadPresentations/' + action.payload.skip + '/' + action.payload.limit).then(data => data.json()).then(res => {\n          console.log(res.data);\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_SUCCESS, res.data));\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_FAIL, err)));\n        return state;\n      }\n\n    case ACTIONS.LOAD_MUSIC_SUCCESS:\n      {\n        let stateCopy = _.cloneDeep(state);\n\n        console.log(stateCopy, action);\n        stateCopy.leftColumn = action.payload;\n        stateCopy.cds = action.payload;\n        return stateCopy;\n      }\n\n    case ACTIONS.LOAD_MUSIC_FAIL:\n      {\n        return state;\n      }\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johandemeij-master/johan-app/src/redux/reducers/music.reducer.js"],"names":["ACTIONS","mainAction","_","initialState","categories","leftColumn","rightColumn","musicReducer","state","action","type","LOAD_MUSIC","fetch","payload","skip","limit","then","data","json","res","console","log","asyncDispatch","LOAD_MUSIC_SUCCESS","catch","err","LOAD_MUSIC_FAIL","stateCopy","cloneDeep","cds"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAC,CAAC,cAAD,EAAgB,iBAAhB,EAAkC,uBAAlC,EAA0D,oBAA1D,EAA+E,qCAA/E,EAAqH,gBAArH,CADM;AAEjBC,EAAAA,UAAU,EAAC,EAFM;AAGjBC,EAAAA,WAAW,EAAC;AAHK,CAArB;AAKA,eAAe,SAASC,YAAT,CAAuBC,KAAK,GAAGL,YAA/B,EAA6CM,MAA7C,EAAqD;AAChE,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKV,OAAO,CAACW,UAAb;AAAyB;AACxBC,QAAAA,KAAK,CAAC,iDAAiDH,MAAM,CAACI,OAAP,CAAeC,IAAhE,GAAuE,GAAvE,GAA6EL,MAAM,CAACI,OAAP,CAAeE,KAA7F,CAAL,CACEC,IADF,CACQC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADjB,EAEEF,IAFF,CAEQG,GAAD,IAAS;AACXC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACF,IAAhB;AACFR,UAAAA,MAAM,CAACa,aAAP,CAAqBrB,UAAU,CAACD,OAAO,CAACuB,kBAAT,EAA4BJ,GAAG,CAACF,IAAhC,CAA/B;AACD,SALF,EAKIO,KALJ,CAKUC,GAAG,IAAIhB,MAAM,CAACa,aAAP,CAAqBrB,UAAU,CAACD,OAAO,CAAC0B,eAAT,EAAyBD,GAAzB,CAA/B,CALjB;AAOC,eAAOjB,KAAP;AACD;;AACD,SAAKR,OAAO,CAACuB,kBAAb;AAAiC;AAC7B,YAAII,SAAS,GAAGzB,CAAC,CAAC0B,SAAF,CAAYpB,KAAZ,CAAhB;;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAYM,SAAZ,EAAsBlB,MAAtB;AACAkB,QAAAA,SAAS,CAACtB,UAAV,GAAuBI,MAAM,CAACI,OAA9B;AACAc,QAAAA,SAAS,CAACE,GAAV,GAAgBpB,MAAM,CAACI,OAAvB;AACF,eAAOc,SAAP;AACD;;AACD,SAAK3B,OAAO,CAAC0B,eAAb;AAA8B;AAE5B,eAAOlB,KAAP;AACD;;AAED;AACE,aAAO,EACL,GAAGA;AADE,OAAP;AAzBJ;AA6BD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport _ from \"lodash\"\n\nconst initialState = {\n    categories:[\"Compositions\",\"Amstel Classics\",\"Music for the Theatre\",\"Symphony Orchestra\",\"The Music of S&oslash;ren Hyldgaard\",\"Solo Concertos\"],\n    leftColumn:[],\n    rightColumn:[]\n};\nexport default function musicReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_MUSIC: {\n       fetch('http://localhost:3001/api/loadPresentations/' + action.payload.skip + '/' + action.payload.limit)\n        .then((data) => data.json())\n        .then((res) => {\n            console.log(res.data)\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_SUCCESS,res.data))\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_FAIL,err)))\n\n        return state\n      }\n      case ACTIONS.LOAD_MUSIC_SUCCESS: {\n          let stateCopy = _.cloneDeep(state)\n          console.log(stateCopy,action)\n          stateCopy.leftColumn = action.payload\n          stateCopy.cds = action.payload\n        return stateCopy\n      }\n      case ACTIONS.LOAD_MUSIC_FAIL: {\n\n        return state\n      }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}