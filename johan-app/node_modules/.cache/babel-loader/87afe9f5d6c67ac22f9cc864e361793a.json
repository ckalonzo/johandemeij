{"ast":null,"code":"import _objectSpread from\"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";import _ from\"lodash\";var initialState={categories:[{id:1,name:\"Compositions\"},{id:2,name:\"Amstel Classics\"},{id:3,name:\"Music for the Theatre\"},{id:4,name:\"Symphony Orchestra\"},{id:5,name:\"The Music of S&oslash;ren Hyldgaard\"},{id:6,name:\"Solo Concertos\"},{id:9,name:\"Cd's\"},{id:0,name:\"All music\"}],allPresentations:[]};export default function musicReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.LOAD_MUSIC:{fetch(' http://127.0.0.1:5021/api/loadPresentations/0/0').then(function(data){return data.json();}).then(function(res){action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_SUCCESS,res.data));}).catch(function(err){return action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_FAIL,err));});return state;}case ACTIONS.LOAD_MUSIC_SUCCESS:{var stateCopy=_.cloneDeep(state);stateCopy.allPresentations=action.payload;return stateCopy;}case ACTIONS.LOAD_MUSIC_FAIL:{return state;}case ACTIONS.LOAD_MUSIC_BY_CATEGORY:{fetch(' http://127.0.0.1:5021/api/filterPresentationCategory/'+action.payload).then(function(data){return data.json();}).then(function(res){action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_BY_CATEGORY_SUCCESS,res.data));}).catch(function(err){return action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_FAIL,err));});return state;}case ACTIONS.LOAD_MUSIC_BY_CATEGORY_SUCCESS:{var _stateCopy=_.cloneDeep(state);_stateCopy.allPresentations=action.payload;return _stateCopy;}default:return _objectSpread({},state);}}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/music.reducer.js"],"names":["ACTIONS","mainAction","_","initialState","categories","id","name","allPresentations","musicReducer","state","action","type","LOAD_MUSIC","fetch","then","data","json","res","asyncDispatch","LOAD_MUSIC_SUCCESS","catch","err","LOAD_MUSIC_FAIL","stateCopy","cloneDeep","payload","LOAD_MUSIC_BY_CATEGORY","LOAD_MUSIC_BY_CATEGORY_SUCCESS"],"mappings":"gLAAA,OAASA,OAAT,KAAwB,wBAAxB,CACA,OAASC,UAAT,KAA2B,6BAA3B,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,UAAU,CAAC,CACP,CAACC,EAAE,CAAC,CAAJ,CAAMC,IAAI,CAAC,cAAX,CADO,CAEP,CAACD,EAAE,CAAC,CAAJ,CAAMC,IAAI,CAAC,iBAAX,CAFO,CAGP,CAACD,EAAE,CAAC,CAAJ,CAAMC,IAAI,CAAC,uBAAX,CAHO,CAIP,CAACD,EAAE,CAAC,CAAJ,CAAMC,IAAI,CAAC,oBAAX,CAJO,CAKP,CAACD,EAAE,CAAC,CAAJ,CAAMC,IAAI,CAAC,qCAAX,CALO,CAMP,CAACD,EAAE,CAAC,CAAJ,CAAMC,IAAI,CAAC,gBAAX,CANO,CAOP,CAACD,EAAE,CAAC,CAAJ,CAAMC,IAAI,CAAC,MAAX,CAPO,CAQP,CAACD,EAAE,CAAC,CAAJ,CAAMC,IAAI,CAAC,WAAX,CARO,CADM,CAWjBC,gBAAgB,CAAC,EAXA,CAArB,CAaA,cAAe,SAASC,CAAAA,YAAT,EAAqD,IAA9BC,CAAAA,KAA8B,2DAAtBN,YAAsB,IAARO,CAAAA,MAAQ,2CAChE,OAAQA,MAAM,CAACC,IAAf,EAEE,IAAKX,CAAAA,OAAO,CAACY,UAAb,CAAyB,CACxBC,KAAK,CAAC,kDAAD,CAAL,CACEC,IADF,CACO,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,IAAL,EAAV,EADP,EAEEF,IAFF,CAEO,SAACG,GAAD,CAAS,CACbP,MAAM,CAACQ,aAAP,CAAqBjB,UAAU,CAACD,OAAO,CAACmB,kBAAT,CAA4BF,GAAG,CAACF,IAAhC,CAA/B,EACD,CAJF,EAIIK,KAJJ,CAIU,SAAAC,GAAG,QAAIX,CAAAA,MAAM,CAACQ,aAAP,CAAqBjB,UAAU,CAACD,OAAO,CAACsB,eAAT,CAAyBD,GAAzB,CAA/B,CAAJ,EAJb,EAMC,MAAOZ,CAAAA,KAAP,CACD,CAED,IAAKT,CAAAA,OAAO,CAACmB,kBAAb,CAAiC,CAC7B,GAAII,CAAAA,SAAS,CAAGrB,CAAC,CAACsB,SAAF,CAAYf,KAAZ,CAAhB,CACAc,SAAS,CAAChB,gBAAV,CAA6BG,MAAM,CAACe,OAApC,CACF,MAAOF,CAAAA,SAAP,CACD,CACD,IAAKvB,CAAAA,OAAO,CAACsB,eAAb,CAA8B,CAE5B,MAAOb,CAAAA,KAAP,CACD,CACD,IAAKT,CAAAA,OAAO,CAAC0B,sBAAb,CAAoC,CAClCb,KAAK,CAAC,yDAAyDH,MAAM,CAACe,OAAjE,CAAL,CACCX,IADD,CACM,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,IAAL,EAAV,EADN,EAECF,IAFD,CAEM,SAACG,GAAD,CAAS,CACbP,MAAM,CAACQ,aAAP,CAAqBjB,UAAU,CAACD,OAAO,CAAC2B,8BAAT,CAAwCV,GAAG,CAACF,IAA5C,CAA/B,EACD,CAJD,EAIGK,KAJH,CAIS,SAAAC,GAAG,QAAIX,CAAAA,MAAM,CAACQ,aAAP,CAAqBjB,UAAU,CAACD,OAAO,CAACsB,eAAT,CAAyBD,GAAzB,CAA/B,CAAJ,EAJZ,EAKC,MAAOZ,CAAAA,KAAP,CACF,CACD,IAAKT,CAAAA,OAAO,CAAC2B,8BAAb,CAA4C,CAC1C,GAAIJ,CAAAA,UAAS,CAAGrB,CAAC,CAACsB,SAAF,CAAYf,KAAZ,CAAhB,CACAc,UAAS,CAAChB,gBAAV,CAA6BG,MAAM,CAACe,OAApC,CACC,MAAOF,CAAAA,UAAP,CACF,CAED,QACE,wBACKd,KADL,EApCJ,CAwCD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport _ from \"lodash\"\n\nconst initialState = {\n    categories:[\n        {id:1,name:\"Compositions\"},\n        {id:2,name:\"Amstel Classics\"},\n        {id:3,name:\"Music for the Theatre\"},\n        {id:4,name:\"Symphony Orchestra\"},\n        {id:5,name:\"The Music of S&oslash;ren Hyldgaard\"},\n        {id:6,name:\"Solo Concertos\"},\n        {id:9,name:\"Cd's\"},\n        {id:0,name:\"All music\"},\n    ],\n    allPresentations:[]\n};\nexport default function musicReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_MUSIC: {\n       fetch(' http://127.0.0.1:5021/api/loadPresentations/0/0')\n        .then((data) => data.json())\n        .then((res) => {\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_SUCCESS,res.data))\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_FAIL,err)))\n\n        return state\n      }\n      \n      case ACTIONS.LOAD_MUSIC_SUCCESS: {\n          let stateCopy = _.cloneDeep(state)\n          stateCopy.allPresentations = action.payload\n        return stateCopy\n      }\n      case ACTIONS.LOAD_MUSIC_FAIL: {\n\n        return state\n      }\n      case ACTIONS.LOAD_MUSIC_BY_CATEGORY:{\n        fetch(' http://127.0.0.1:5021/api/filterPresentationCategory/'+action.payload)\n        .then((data) => data.json())\n        .then((res) => {\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_BY_CATEGORY_SUCCESS,res.data))\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_MUSIC_FAIL,err)))\n         return state \n      }\n      case ACTIONS.LOAD_MUSIC_BY_CATEGORY_SUCCESS:{\n        let stateCopy = _.cloneDeep(state)\n        stateCopy.allPresentations = action.payload\n         return stateCopy \n      }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}