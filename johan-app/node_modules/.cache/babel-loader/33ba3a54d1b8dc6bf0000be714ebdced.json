{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Websites/johandemeij/johan-app/src/components/dashboard/NewPost.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Form, Container, Row, Col, Button } from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport SideNav from \"components/dashboard/SideNav\";\nimport { mainAction } from \"redux/actions/index.actions\";\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport _ from \"lodash\";\n\nconst EditPost = props => {\n  const [postStatus, setPostStatus] = useState(2);\n  const [title, setTitle] = useState();\n  const [date, setDate] = useState();\n  const [content, setContent] = useState();\n  const [validated, setValidated] = useState(false);\n  const [postImg, setPostImg] = useState();\n  const [lastTotal, setLastTotal] = useState(props.lastItem);\n  useEffect(() => {\n    // Update the document title using the browser API\n    window.scrollTo(0, 0);\n    document.title = `Johan De Meij | Edit Post`;\n    props.actions.mainAction(ACTIONS.LOAD_DASHBOARD_POSTS, {}); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let newsItem = {\n      ID: props.lastItem.toString(),\n      postContent: content,\n      postDate: date,\n      postTitle: title,\n      image: [],\n      showPost: postStatus,\n      dateCreated: Date.now()\n    };\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n    console.log(newsItem);\n    props.actions.mainAction(ACTIONS.CREATE_NEW_POST, newsItem);\n    props.history.push('/dashboard/news/edit/' + props.lastItem);\n  };\n\n  const getLastItem = () => {\n    return;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    className: \"dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SideNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: \"10\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    id: \"product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"showpost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 31\n    }\n  }, \"Show Post\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    custom: true,\n    onChange: e => setPostStatus(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 32\n    }\n  }, \"OFF\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, \"ON\")))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"\" //defaultValue={postTitle}\n    ,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"Please provide a title.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"\" //defaultValue={postDate}\n    ,\n    onChange: e => setDate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, \"Please provide a product description.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CKEditor, {\n    editor: ClassicEditor,\n    data: content,\n    toolbar: ('heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote'),\n    onInit: editor => {// You can store the \"editor\" and use when it is needed.\n      // console.log( 'Editor is ready to use!', editor );\n    },\n    onChange: (event, editor) => {\n      const data = editor.getData(); // console.log( { event, editor, data } );\n\n      setContent(data);\n    },\n    onBlur: (event, editor) => {\n      const data = editor.getData();\n      console.log('Blur.', editor);\n      setContent(data);\n    },\n    onFocus: (event, editor) => {\n      console.log('Focus.', editor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, \"Create Post\")))))));\n};\n\nfunction mapStateToProps(state) {\n  let lastItem = _.orderBy(state.postsReducer, 'ID', 'desc').map((lastItem, i) => {\n    return i === 0 ? lastItem.ID : \"\";\n  });\n\n  return {\n    post: state.singlePostReducer,\n    posts: state.postsReducer,\n    postImages: state.postImagesReducer,\n    lastItem: parseInt(lastItem[0]) + 1\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      mainAction\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Websites/johandemeij/johan-app/src/components/dashboard/NewPost.jsx"],"names":["React","useEffect","useState","connect","bindActionCreators","Form","Container","Row","Col","Button","ACTIONS","SideNav","mainAction","CKEditor","ClassicEditor","_","EditPost","props","postStatus","setPostStatus","title","setTitle","date","setDate","content","setContent","validated","setValidated","postImg","setPostImg","lastTotal","setLastTotal","lastItem","window","scrollTo","document","actions","LOAD_DASHBOARD_POSTS","handleSubmit","event","preventDefault","newsItem","ID","toString","postContent","postDate","postTitle","image","showPost","dateCreated","Date","now","form","currentTarget","checkValidity","stopPropagation","console","log","CREATE_NEW_POST","history","push","getLastItem","span","e","target","value","editor","data","getData","mapStateToProps","state","orderBy","postsReducer","map","i","post","singlePostReducer","posts","postImages","postImagesReducer","parseInt","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Form, Container, Row, Col, Button} from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport SideNav from \"components/dashboard/SideNav\";\nimport { mainAction } from \"redux/actions/index.actions\"\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport _ from \"lodash\"\nconst EditPost = props => {\n  const [postStatus, setPostStatus] = useState(2);\n  const [title, setTitle] = useState();\n  const [date, setDate] = useState();\n  const [content, setContent] = useState();\n  const [validated, setValidated] = useState(false);\n  const [postImg,setPostImg] = useState()\n  const [lastTotal,setLastTotal] = useState(props.lastItem);\n\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    window.scrollTo(0,0)\n    document.title = `Johan De Meij | Edit Post`;\n    props.actions.mainAction(ACTIONS.LOAD_DASHBOARD_POSTS,{})\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    let newsItem = {\n        ID:props.lastItem.toString(),\n        postContent:content,\n        postDate:date,\n        postTitle:title,\n        image:[],\n        showPost:postStatus,\n        dateCreated: Date.now()\n    }\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    setValidated(true);\n    console.log(newsItem)\n   props.actions.mainAction(ACTIONS.CREATE_NEW_POST,newsItem)\n   props.history.push('/dashboard/news/edit/'+props.lastItem)\n  };\n  \n  const getLastItem = () => {\n    return\n  }\n  return (\n    <> \n      <Container  className=\"dashboard\">\n        <Row>\n          \n          <Col lg={{ span: 2 }}>\n              <SideNav />\n          </Col>\n          <Col lg={{span:\"10\" }}> \n            <section id=\"product\">\n              <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                <Form.Row>\n                            <Form.Group controlId=\"showpost\">\n                              <Form.Label>Show Post</Form.Label>\n                              <Form.Control\n                                as=\"select\"\n                                custom\n                                onChange={e => setPostStatus(e.target.value)}\n                              ><option value=\"2\">OFF</option>\n                                <option value=\"1\">ON</option>\n                              </Form.Control>\n                            </Form.Group>\n                          </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col}  controlId=\"title\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"\"\n                      //defaultValue={postTitle}\n                      onChange={e => setTitle(e.target.value)}\n                      \n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a title.\n                      </Form.Control.Feedback>\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Form.Group>\n                  </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"date\">\n                    <Form.Label>Date</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"\"\n                      //defaultValue={postDate}\n                      onChange={e => setDate(e.target.value)}\n                      \n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a product description.\n                      </Form.Control.Feedback>\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Form.Group>\n                  \n                </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"content\">\n                    <CKEditor\n                        editor={ ClassicEditor }\n                        data={content}\n                        toolbar= {'heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote' }\n                        onInit={ editor => {\n                            // You can store the \"editor\" and use when it is needed.\n                           // console.log( 'Editor is ready to use!', editor );\n                        } }\n                        onChange={ ( event, editor ) => {\n                            const data = editor.getData();\n                           // console.log( { event, editor, data } );\n                            setContent(data)\n                        } }\n                        onBlur={ ( event, editor ) => {\n                          const data = editor.getData();\n                            console.log( 'Blur.', editor );\n                            setContent(data)\n                        } }\n                        onFocus={ ( event, editor ) => {\n                            console.log( 'Focus.', editor );\n                        } }\n                    />\n                  </Form.Group>\n                  </Form.Row>\n                <Button type=\"submit\">Create Post</Button>\n              </Form> \n            </section>\n          </Col>\n        </Row> \n      </Container>\n    </>\n  );\n};\nfunction mapStateToProps(state) {\n    let lastItem = _.orderBy(state.postsReducer,'ID','desc').map((lastItem,i) =>{\n        return i===0 ? lastItem.ID :\"\"\n    })\n  return {\n    post: state.singlePostReducer,\n    posts:state.postsReducer,\n    postImages:state.postImagesReducer,\n    lastItem:parseInt(lastItem[0])+1\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({mainAction}, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost);\n"]},"metadata":{},"sourceType":"module"}