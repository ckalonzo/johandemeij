{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/components/dashboard/NewCd.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Form, Container, Row, Col, Button } from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport SideNav from \"components/dashboard/SideNav\";\nimport { mainAction } from \"redux/actions/index.actions\";\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport _ from \"lodash\";\nimport PublicationImage from \"components/dashboard/PublicationImage\";\n\nconst NewCd = props => {\n  const [validated, setValidated] = useState(false);\n  const [field_cd_name, setcd_name] = useState();\n  const [field_subTitle, setSubTitle] = useState();\n  const [field_synopsis, setSynopsis] = useState();\n  const [field_totalTime, setTotalTime] = useState();\n  const [field_frontCover, setFrontCover] = useState();\n  const [field_backCover, setBackCover] = useState();\n  const [field_frontCaption, setFrontCaption] = useState();\n  const [field_backCaption, setBackCaption] = useState();\n  const [field_category, setCategory] = useState();\n  const [field_addInfo, setAddInfo] = useState();\n  useEffect(() => {\n    // Update the document title using the browser API\n    window.scrollTo(0, 0);\n    props.actions.mainAction(ACTIONS.LOAD_ALL_PRESENTATIONS, []);\n    let cdId = props.match.params.id;\n    if (cdId) props.actions.mainAction(ACTIONS.LOAD_CD, cdId); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let testArray = [];\n    console.log(_.orderBy(testArray, 'id', 'desc')[0].id);\n    let cdItem = {\n      id: _.orderBy(testArray, 'id', 'desc')[0].id + 1,\n      cd_name: field_cd_name,\n      id: field_subTitle,\n      synopsis: field_synopsis,\n      totalTime: field_totalTime,\n      frontCover: field_frontCover,\n      backCover: field_backCover,\n      frontCaption: field_frontCaption,\n      backCaption: field_backCaption,\n      category: field_category,\n      add_info: field_addInfo\n    };\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n    props.actions.mainAction(ACTIONS.CREATE_NEW_CD, cdItem);\n    props.history.push('/dashboard/publications/edit/' + (_.orderBy(testArray, 'id', 'desc')[0].id + 1));\n  };\n\n  const handleUpdate = async event => {\n    event.preventDefault();\n    let cdItem = {\n      _id: props.cd._id,\n      cd_name: document.getElementById('cd_name').value,\n      synopsis: document.getElementById('synopsis').value,\n      totalTime: document.getElementById('totalTime').value,\n      category: document.getElementById('category').value,\n      frontCover: document.getElementById('frontCover').value,\n      backCover: document.getElementById('backCover').value,\n      frontCaption: document.getElementById('frontCaption').value,\n      backCaption: document.getElementById('backCaption').value,\n      add_info: document.getElementById('add-info').value\n    };\n    var input = document.querySelector(\"form:first-child input\");\n    var nativeInputValueSetter = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, \"value\").set;\n    nativeInputValueSetter.call(input, \"is working\");\n    var inputEvent = new Event(\"input\", {\n      bubbles: true\n    });\n    input.dispatchEvent(inputEvent);\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n    await props.actions.mainAction(ACTIONS.UPDATE_PUBLICATION, cdItem);\n    window.location.reload();\n  };\n\n  const renderCdImage = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PublicationImage, {\n      ID: props.cd._id,\n      image: props.cd.frontCover,\n      caption: props.cd.frontCaption,\n      type: \"front\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(PublicationImage, {\n      ID: props.cd._id,\n      image: props.cd.backCover,\n      caption: props.cd.backCaption,\n      type: \"back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    className: \"dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SideNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: \"10\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, Object.keys(props.cd).length > 0 ? renderCdImage() : '', /*#__PURE__*/React.createElement(\"section\", {\n    id: \"product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: Object.keys(props.cd).length > 0 ? handleUpdate : handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"cd_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 22\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: props.cd.cd_name,\n    onChange: e => setcd_name(e.target.value),\n    onBlur: e => setcd_name(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, \"Please provide a name.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, \"Looks good!\")))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    as: \"select\",\n    onChange: e => setCategory(e.target.value),\n    onBlur: e => setCategory(e.target.value),\n    value: props.cd.category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, props.cd.category > 0 ? /*#__PURE__*/React.createElement(\"option\", {\n    value: props.cd.category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 46\n    }\n  }, props.categories.filter(category => category.id === parseInt(props.cd.category, 10)).map(category => category.name)) : \"\", props.categories.map(category => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: category.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 32\n      }\n    }, category.name);\n  })), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, \"Please provide a video.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"totalTime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, \"Total Time\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"text\",\n    onChange: e => setTotalTime(e.target.value),\n    defaultValue: props.cd.totalTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, \"Please provide a video.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, \"Looks good!\")))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 34\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, \"Additional info\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    as: \"textarea\",\n    rows: \"3\",\n    onChange: e => setAddInfo(e.target.value),\n    defaultValue: props.cd.add_info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, \"Please provide a video.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, \"Looks good!\")))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CKEditor, {\n    editor: ClassicEditor,\n    data: props.cd.synopsis ? props.cd.synopsis : field_synopsis,\n    toolbar: ('heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote'),\n    onInit: editor => {// You can store the \"editor\" and use when it is needed.\n      // console.log( 'Editor is ready to use!', editor );\n    },\n    onChange: (event, editor) => {\n      const data = editor.getData(); // console.log( { event, editor, data } );\n\n      setSynopsis(data);\n    },\n    onBlur: (event, editor) => {\n      const data = editor.getData();\n      console.log('Blur.', editor);\n      setSynopsis(data);\n    },\n    onFocus: (event, editor) => {\n      console.log('Focus.', editor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, Object.keys(props.cd).length > 0 ? \"Update CD\" : \"Create CD\")))))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    allPresentations: state.AllPresentationsReducer,\n    categories: state.musicReducer.categories,\n    cd: state.cdReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      mainAction\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCd);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/components/dashboard/NewCd.jsx"],"names":["React","useEffect","useState","connect","bindActionCreators","Form","Container","Row","Col","Button","ACTIONS","SideNav","mainAction","CKEditor","ClassicEditor","_","PublicationImage","NewCd","props","validated","setValidated","field_cd_name","setcd_name","field_subTitle","setSubTitle","field_synopsis","setSynopsis","field_totalTime","setTotalTime","field_frontCover","setFrontCover","field_backCover","setBackCover","field_frontCaption","setFrontCaption","field_backCaption","setBackCaption","field_category","setCategory","field_addInfo","setAddInfo","window","scrollTo","actions","LOAD_ALL_PRESENTATIONS","cdId","match","params","id","LOAD_CD","handleSubmit","event","preventDefault","testArray","console","log","orderBy","cdItem","cd_name","synopsis","totalTime","frontCover","backCover","frontCaption","backCaption","category","add_info","form","currentTarget","checkValidity","stopPropagation","CREATE_NEW_CD","history","push","handleUpdate","_id","cd","document","getElementById","value","input","querySelector","nativeInputValueSetter","Object","getOwnPropertyDescriptor","HTMLInputElement","prototype","set","call","inputEvent","Event","bubbles","dispatchEvent","UPDATE_PUBLICATION","location","reload","renderCdImage","span","keys","length","e","target","categories","filter","parseInt","map","name","editor","data","getData","mapStateToProps","state","allPresentations","AllPresentationsReducer","musicReducer","cdReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Form, Container, Row, Col, Button} from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport SideNav from \"components/dashboard/SideNav\";\nimport { mainAction } from \"redux/actions/index.actions\"\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport _ from \"lodash\"\nimport PublicationImage from \"components/dashboard/PublicationImage\"\nconst NewCd = props => {\n  const [validated, setValidated] = useState(false);\n  const [field_cd_name,setcd_name] = useState()\n  const [field_subTitle,setSubTitle] = useState()\n  const [field_synopsis,setSynopsis] = useState()\n  const [field_totalTime,setTotalTime] = useState()\n  const [field_frontCover,setFrontCover] = useState()\n  const [field_backCover,setBackCover] = useState()\n  const [field_frontCaption,setFrontCaption] = useState()\n  const [field_backCaption,setBackCaption] = useState()\n  const [field_category,setCategory] = useState()\n  const [field_addInfo,setAddInfo] = useState()\n\n\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    window.scrollTo(0,0)\n    props.actions.mainAction(ACTIONS.LOAD_ALL_PRESENTATIONS,[])\n   let cdId = props.match.params.id\n    if(cdId)\n    props.actions.mainAction(ACTIONS.LOAD_CD,cdId)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const handleSubmit = event => {\n    event.preventDefault();\n    let testArray = []\n   \n    console.log(_.orderBy(testArray,'id','desc')[0].id)\n    \n    let cdItem = {\n        id:(_.orderBy(testArray,'id','desc')[0].id + 1),\n        cd_name:field_cd_name,\n        id:field_subTitle,\n        synopsis:field_synopsis,\n        totalTime:field_totalTime,\n        frontCover:field_frontCover,\n        backCover:field_backCover,\n        frontCaption:field_frontCaption,\n        backCaption:field_backCaption,\n        category:field_category,\n        add_info:field_addInfo\n    }\n\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    setValidated(true);\n    props.actions.mainAction(ACTIONS.CREATE_NEW_CD,cdItem)\n    props.history.push('/dashboard/publications/edit/'+(_.orderBy(testArray,'id','desc')[0].id + 1))\n  };\n  const handleUpdate = async event => {\n    event.preventDefault();\n    let cdItem = {\n        _id:props.cd._id,\n        cd_name:document.getElementById('cd_name').value,\n        synopsis:document.getElementById('synopsis').value,\n        totalTime:document.getElementById('totalTime').value,\n        category:document.getElementById('category').value,\n        frontCover:document.getElementById('frontCover').value,\n        backCover:document.getElementById('backCover').value,\n        frontCaption:document.getElementById('frontCaption').value,\n        backCaption:document.getElementById('backCaption').value,\n        add_info:document.getElementById('add-info').value\n    }\n    var input = document.querySelector(\"form:first-child input\");\n    var nativeInputValueSetter = Object.getOwnPropertyDescriptor(\n      window.HTMLInputElement.prototype,\n      \"value\"\n    ).set;\n    nativeInputValueSetter.call(input, \"is working\");\n\n    var inputEvent = new Event(\"input\", { bubbles: true });\n    input.dispatchEvent(inputEvent);\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    setValidated(true);\n    await props.actions.mainAction(ACTIONS.UPDATE_PUBLICATION,cdItem)\n    window.location.reload();\n  }\n  const renderCdImage = () => {\n      return (<>\n      <PublicationImage ID={props.cd._id} image={props.cd.frontCover} caption={props.cd.frontCaption} type=\"front\" />\n      <PublicationImage ID={props.cd._id} image={props.cd.backCover} caption={props.cd.backCaption} type=\"back\" />\n      </>)\n  }\n  return (\n    <>\n      <Container className=\"dashboard\">\n        <Row>\n          \n          <Col lg={{ span: 2 }}>\n              <SideNav />\n          </Col>\n          <Col lg={{span:\"10\" }}> \n          \n          {Object.keys(props.cd).length > 0 ? renderCdImage():''}\n            <section id=\"product\">\n              <Form noValidate validated={validated} onSubmit={Object.keys(props.cd).length > 0 ?handleUpdate :handleSubmit}>\n              <Form.Row><Col lg=\"12\">\n                  <Form.Group as={Col}  controlId=\"cd_name\">\n                     <Form.Label>Name</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"\"\n                      defaultValue={props.cd.cd_name}\n                      onChange={e => setcd_name(e.target.value)}\n                      onBlur={e => setcd_name(e.target.value)}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a name.\n                      </Form.Control.Feedback>\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Form.Group></Col>\n                  </Form.Row> \n                \n                <Form.Row>\n                    <Col lg=\"6\"><Form.Group as={Col} controlId=\"category\">\n                    <Form.Label>Category</Form.Label>\n                    <Form.Control\n                      required\n                      as=\"select\"\n                      onChange={e => setCategory(e.target.value)}\n                      onBlur={e => setCategory(e.target.value)}\n                      value={props.cd.category}\n                    >\n                    {props.cd.category > 0 ? <option value={props.cd.category}>{props.categories.filter(category => category.id === parseInt(props.cd.category,10)).map(category => category.name)}</option> : \"\"}\n                    {props.categories.map(category=>{\n                        return <option value={category.id}>{category.name}</option>\n                    })}\n                        \n                    </Form.Control>\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a video.\n                      </Form.Control.Feedback>\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Form.Group></Col>\n                    <Col lg=\"6\"><Form.Group as={Col} controlId=\"totalTime\">\n                    <Form.Label>Total Time</Form.Label>\n                    <Form.Control  as=\"text\" \n                     onChange={e => setTotalTime(e.target.value)}\n                     defaultValue={props.cd.totalTime}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a video.\n                      </Form.Control.Feedback>\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Form.Group></Col>\n                  \n                  \n                </Form.Row>\n                <Form.Row>\n                    \n                    <Col lg=\"12\"><Form.Group as={Col} controlId=\"video\">\n                    <Form.Label>Additional info</Form.Label>\n                    <Form.Control\n                      required\n                      as=\"textarea\" rows=\"3\"\n                      onChange={e => setAddInfo(e.target.value)}\n                      defaultValue={props.cd.add_info}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a video.\n                      </Form.Control.Feedback>\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Form.Group></Col>\n                  \n                  \n                </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"content\">\n                    <CKEditor\n                        editor={ ClassicEditor }\n                        data={props.cd.synopsis ? props.cd.synopsis: field_synopsis}\n                        toolbar= {'heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote' }\n                        onInit={ editor => {\n                            // You can store the \"editor\" and use when it is needed.\n                           // console.log( 'Editor is ready to use!', editor );\n                        } }\n                        onChange={ ( event, editor ) => {\n                            const data = editor.getData();\n                           // console.log( { event, editor, data } );\n                           setSynopsis(data)\n                        } }\n                        onBlur={ ( event, editor ) => {\n                          const data = editor.getData();\n                            console.log( 'Blur.', editor );\n                            setSynopsis(data)\n                        } }\n                        onFocus={ ( event, editor ) => {\n                            console.log( 'Focus.', editor );\n                        } }\n                    />\n                  </Form.Group>\n                  </Form.Row>\n                <Button type=\"submit\">{Object.keys(props.cd).length > 0 ?\"Update CD\" :\"Create CD\"}</Button>\n              </Form> \n            </section>\n          </Col>\n        </Row> \n      </Container>\n    </>\n  );\n};\nfunction mapStateToProps(state) {\n    \n  return {\n    allPresentations:state.AllPresentationsReducer,\n    categories:state.musicReducer.categories,\n    cd:state.cdReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({mainAction}, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewCd);\n"]},"metadata":{},"sourceType":"module"}