{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/components/dashboard/EditEvent.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Form, Container, Row, Col, Button } from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport SideNav from \"components/dashboard/SideNav\";\nimport { mainAction } from \"redux/actions/index.actions\";\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport PostImage from \"components/dashboard/PostImage\";\n\nconst EditEvent = props => {\n  const {\n    _id,\n    ID,\n    postTitle,\n    postDate,\n    postContent,\n    showPost,\n    postImage\n  } = props.post;\n  const [postStatus, setPostStatus] = useState(showPost);\n  const [title, setTitle] = useState(postTitle);\n  const [date, setDate] = useState(postDate);\n  const [content, setContent] = useState(postContent);\n  const [validated, setValidated] = useState(false);\n  const [postImg, setPostImg] = useState(postImage);\n  useEffect(() => {\n    // Update the document title using the browser API\n    window.scrollTo(0, 0);\n    document.title = `Johan De Meij | Edit Post`; //props.actions.mainAction(ACTIONS.LOAD_POST,props.match.params.id)\n    // props.actions.mainAction(ACTIONS.LOAD_POST_IMAGES,{})\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let newsItem = {\n      _id,\n      ID,\n      showPost: postStatus ? postStatus : showPost,\n      title: title ? title : postTitle,\n      date: date ? date : postDate,\n      content,\n      postImage: postImg ? postImg : postImage\n    };\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n    props.actions.mainAction(ACTIONS.UPDATE_POST, newsItem);\n    window.scrollTo(0, 0);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SideNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: \"10\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, props.post.postImage ? /*#__PURE__*/React.createElement(PostImage, Object.assign({\n    currentPost: props.match.params.id\n  }, props.post.postImage[0], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 37\n    }\n  })) : \"\", /*#__PURE__*/React.createElement(\"section\", {\n    id: \"product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: postTitle,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"Please provide a title.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: postDate,\n    onChange: e => setDate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Please provide a product description.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CKEditor, {\n    editor: ClassicEditor,\n    data: postContent ? postContent : content,\n    toolbar: ('heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote'),\n    onInit: editor => {// You can store the \"editor\" and use when it is needed.\n      // console.log( 'Editor is ready to use!', editor );\n    },\n    onChange: (event, editor) => {\n      const data = editor.getData(); // console.log( { event, editor, data } );\n\n      setContent(data);\n    },\n    onBlur: (event, editor) => {\n      const data = editor.getData();\n      console.log('Blur.', editor);\n      setContent(data);\n    },\n    onFocus: (event, editor) => {\n      console.log('Focus.', editor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Update\")))))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    post: state.singlePostReducer,\n    posts: state.postsReducer,\n    postImages: state.postImagesReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      mainAction\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditEvent);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/components/dashboard/EditEvent.jsx"],"names":["React","useEffect","useState","connect","bindActionCreators","Form","Container","Row","Col","Button","ACTIONS","SideNav","mainAction","CKEditor","ClassicEditor","PostImage","EditEvent","props","_id","ID","postTitle","postDate","postContent","showPost","postImage","post","postStatus","setPostStatus","title","setTitle","date","setDate","content","setContent","validated","setValidated","postImg","setPostImg","window","scrollTo","document","handleSubmit","event","preventDefault","newsItem","form","currentTarget","checkValidity","stopPropagation","actions","UPDATE_POST","span","match","params","id","e","target","value","editor","data","getData","console","log","mapStateToProps","state","singlePostReducer","posts","postsReducer","postImages","postImagesReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Form, Container, Row, Col, Button} from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport SideNav from \"components/dashboard/SideNav\";\nimport { mainAction } from \"redux/actions/index.actions\"\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport PostImage from \"components/dashboard/PostImage\"\n\nconst EditEvent = props => {\n  const {_id,ID,postTitle,postDate,postContent,showPost,postImage} = props.post\n  const [postStatus, setPostStatus] = useState(showPost);\n  const [title, setTitle] = useState(postTitle);\n  const [date, setDate] = useState(postDate);\n  const [content, setContent] = useState(postContent);\n  const [validated, setValidated] = useState(false);\n  const [postImg,setPostImg] = useState(postImage)\n\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    window.scrollTo(0,0)\n    document.title = `Johan De Meij | Edit Post`;\n    //props.actions.mainAction(ACTIONS.LOAD_POST,props.match.params.id)\n   // props.actions.mainAction(ACTIONS.LOAD_POST_IMAGES,{})\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    let newsItem = {\n      _id,\n      ID,\n      showPost:postStatus ? postStatus:showPost,\n      title:title?title:postTitle,\n      date:date?date:postDate,\n      content,\n      postImage: postImg ? postImg : postImage\n    }\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    setValidated(true);\n   props.actions.mainAction(ACTIONS.UPDATE_POST,newsItem)\n   window.scrollTo(0,0)\n  };\n  \n  return (\n    <>\n      <Container>\n        <Row>\n          \n          <Col lg={{ span: 2 }}>\n              <SideNav />\n          </Col>\n          <Col lg={{span:\"10\" }}> \n            {props.post.postImage ? <PostImage currentPost={props.match.params.id}{...props.post.postImage[0]}/>:\"\"}\n            <section id=\"product\">\n              <Form noValidate validated={validated} onSubmit={handleSubmit}>\n               \n                <Form.Row>\n                  <Form.Group as={Col}  controlId=\"title\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"\"\n                      defaultValue={postTitle}\n                      onChange={e => setTitle(e.target.value)}\n                      \n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a title.\n                      </Form.Control.Feedback>\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Form.Group>\n                  </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"date\">\n                    <Form.Label>Date</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"\"\n                      defaultValue={postDate}\n                      onChange={e => setDate(e.target.value)}\n                      \n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a product description.\n                      </Form.Control.Feedback>\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Form.Group>\n                  \n                </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"content\">\n                    <CKEditor\n                        editor={ ClassicEditor }\n                        data={postContent ? postContent:content}\n                        toolbar= {'heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote' }\n                        onInit={ editor => {\n                            // You can store the \"editor\" and use when it is needed.\n                           // console.log( 'Editor is ready to use!', editor );\n                        } }\n                        onChange={ ( event, editor ) => {\n                            const data = editor.getData();\n                           // console.log( { event, editor, data } );\n                            setContent(data)\n                        } }\n                        onBlur={ ( event, editor ) => {\n                          const data = editor.getData();\n                            console.log( 'Blur.', editor );\n                            setContent(data)\n                        } }\n                        onFocus={ ( event, editor ) => {\n                            console.log( 'Focus.', editor );\n                        } }\n                    />\n                  </Form.Group>\n                  </Form.Row>\n                <Button type=\"submit\">Update</Button>\n              </Form> \n            </section>\n          </Col>\n        </Row> \n      </Container>\n    </>\n  );\n};\nfunction mapStateToProps(state) {\n  return {\n    post: state.singlePostReducer,\n    posts:state.postsReducer,\n    postImages:state.postImagesReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({mainAction}, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditEvent);\n"]},"metadata":{},"sourceType":"module"}