{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/components/dashboard/AdditionalInfo.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { mainAction } from \"redux/actions/index.actions\";\nimport { Table, Form, Row, Col, Button } from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport dayjs from \"dayjs\";\nimport _ from \"lodash\";\n\nconst AdditionalInfo = props => {\n  useEffect(() => {\n    // Update the document title using the browser API\n    window.scrollTo(0, 0);\n    props.actions.mainAction(ACTIONS.LOAD_CD_INFO, props.cdId); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const d = new Date();\n  const newId = dayjs(d).format('YYYYMMDDHHmmss');\n  const [status, setStatus] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [grade, setGrade] = useState(\"\");\n  const [composer, setComposer] = useState(\"\");\n  const [addInfo, setAddInfo] = useState(\"\");\n  const [addNewInfo, setNewInfo] = useState(false);\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = () => {\n    return;\n  };\n\n  const updateAdditionalInfo = id => {\n    let infoItem = {\n      id,\n      time: document.getElementById(\"time\").value,\n      grade: document.getElementById(\"grade\").value,\n      track_title: document.getElementById(\"title\").value,\n      composer: document.getElementById(\"composer\").value,\n      addInfo: document.getElementById(\"addInfo\").value\n    };\n    props.actions.mainAction(ACTIONS.UPDATE_CD_INFO, infoItem);\n  };\n\n  const addAdditionalInfo = () => {\n    let infoItem = {\n      id: newId,\n      time: time ? time : \"\",\n      grade: grade ? grade : \"\",\n      track_title: title ? title : \"\",\n      composer: composer ? composer : \"\",\n      addInfo: addInfo ? addInfo : \"\"\n    };\n    console.log(infoItem);\n  };\n\n  const List = () => {\n    const displayButtons = (id, whichButtonsToShow) => {\n      if (whichButtonsToShow === \"update\") return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 24\n        }\n      }, \"CANCEL\"), \" \", /*#__PURE__*/React.createElement(Button, {\n        eventKey: id,\n        onClick: e => {\n          setStatus(e.target.attributes.getNamedItem('eventKey').value);\n          updateAdditionalInfo(id);\n        },\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 69\n        }\n      }, \"UPDATE\"));\n      if (whichButtonsToShow === \"add\") return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => setNewInfo(false),\n        variant: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 24\n        }\n      }, \"CANCEL\"), \" \", /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          addAdditionalInfo();\n        },\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 100\n        }\n      }, \"ADD\"));\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 24\n        }\n      }, \"DEL\"), \" \", /*#__PURE__*/React.createElement(Button, {\n        eventKey: id,\n        onClick: e => {\n          setStatus(e.target.attributes.getNamedItem('eventKey').value);\n        },\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 63\n        }\n      }, \"EDIT\"));\n    };\n\n    const ListItems = () => {\n      if (addNewInfo) return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        as: \"select\",\n        onChange: e => setTitle(e.target.value),\n        onBlur: e => setTitle(e.target.value),\n        defaultValue: title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }\n      }, \"SELECT A CD\"), Object.values(_.orderBy(props.allPresentations ? props.allPresentations : [], \"cdName\", \"asc\")).map(CD => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: CD.id,\n          value: CD.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 40\n          }\n        }, CD.cdName);\n      }))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"\",\n        defaultValue: time,\n        onChange: e => setTime(e.target.value),\n        onBlur: e => setTime(e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"\",\n        defaultValue: grade,\n        onChange: e => setGrade(e.target.value),\n        onBlur: e => setGrade(e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        as: \"textarea\",\n        rows: \"3\",\n        size: \"sm\",\n        placeholder: \"\",\n        defaultValue: composer,\n        onChange: e => setComposer(e.target.value),\n        onBlur: e => setComposer(e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        required: true,\n        type: \"textarea\",\n        size: \"sm\",\n        as: \"textarea\",\n        rows: \"3\",\n        placeholder: \"\",\n        defaultValue: addInfo,\n        onChange: e => setAddInfo(e.target.value),\n        onBlur: e => setAddInfo(e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      }, displayButtons(\"\", \"add\")));\n      return Object.values(props.additionalInfo).map(info => {\n        if (info.id !== status) return /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }\n        }, info.title[0]), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }\n        }, info.time), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }\n        }, info.grade), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }\n        }, info.composer), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }\n        }, info.addInfo), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }\n        }, displayButtons(info.id)));\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          className: info.id === status ? \"active\" : \"\",\n          key: info.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }\n        }, \" \", /*#__PURE__*/React.createElement(Form.Group, {\n          controlId: \"title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(Form.Control, {\n          required: true,\n          as: \"select\",\n          onChange: e => setTitle(e.target.value),\n          onBlur: e => setTitle(e.target.value),\n          defaultValue: info.track_title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 56\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 33\n          }\n        }, \"SELECT A CD\"), Object.values(_.orderBy(props.allPresentations ? props.allPresentations : [], \"cdName\", \"asc\")).map(CD => {\n          return +CD.id === +info.track_title ? /*#__PURE__*/React.createElement(\"option\", {\n            key: CD.id,\n            value: CD.id,\n            selected: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 71\n            }\n          }, CD.cdName) : /*#__PURE__*/React.createElement(\"option\", {\n            key: CD.id,\n            value: CD.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 35\n            }\n          }, CD.cdName);\n        })))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Form.Group, {\n          controlId: \"time\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          placeholder: \"\",\n          defaultValue: info.time,\n          onChange: e => setTime(e.target.value),\n          onBlur: e => setTime(e.target.value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 54\n          }\n        }))), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          placeholder: \"\",\n          defaultValue: info.grade,\n          onChange: e => setGrade(e.target.value),\n          onBlur: e => setGrade(e.target.value),\n          id: \"grade\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }\n        })), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Form.Control, {\n          as: \"textarea\",\n          rows: \"3\",\n          size: \"sm\",\n          placeholder: \"\",\n          defaultValue: info.composer,\n          onChange: e => setComposer(e.target.value),\n          onBlur: e => setComposer(e.target.value),\n          id: \"composer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }\n        })), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Form.Control, {\n          type: \"textarea\",\n          size: \"sm\",\n          as: \"textarea\",\n          rows: \"3\",\n          placeholder: \"\",\n          defaultValue: info.addInfo,\n          onChange: e => setAddInfo(e.target.value),\n          onBlur: e => setAddInfo(e.target.value),\n          id: \"addInfo\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }\n        })), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }\n        }, displayButtons(info.id, \"update\")));\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      className: \"additional-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }, \"title\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    }, \"time\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, \"grade\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }, \"composer\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, \"additional info\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => setNewInfo(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }, \"ADD INFO\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListItems, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 16\n      }\n    }))));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    allPresentations: _.orderBy(state.AllPresentationsReducer, \"id\", \"asc\"),\n    additionalInfo: state.cdInfoReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      mainAction\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdditionalInfo);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/components/dashboard/AdditionalInfo.jsx"],"names":["React","useEffect","useState","connect","bindActionCreators","mainAction","Table","Form","Row","Col","Button","ACTIONS","dayjs","_","AdditionalInfo","props","window","scrollTo","actions","LOAD_CD_INFO","cdId","d","Date","newId","format","status","setStatus","title","setTitle","time","setTime","grade","setGrade","composer","setComposer","addInfo","setAddInfo","addNewInfo","setNewInfo","validated","setValidated","handleSubmit","updateAdditionalInfo","id","infoItem","document","getElementById","value","track_title","UPDATE_CD_INFO","addAdditionalInfo","console","log","List","displayButtons","whichButtonsToShow","e","target","attributes","getNamedItem","ListItems","Object","values","orderBy","allPresentations","map","CD","cdName","additionalInfo","info","mapStateToProps","state","AllPresentationsReducer","cdInfoReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { Table, Form, Row, Col, Button} from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport dayjs from \"dayjs\"\nimport _ from \"lodash\"\nconst AdditionalInfo = (props) => {\n    useEffect(() => {\n        // Update the document title using the browser API\n        window.scrollTo(0,0)\n        props.actions.mainAction(ACTIONS.LOAD_CD_INFO,props.cdId)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, []);\n      const d = new Date()\n      const newId= dayjs(d).format('YYYYMMDDHHmmss');\n      const [status,setStatus] =  useState(\"\")\n      const [title,setTitle] = useState(\"\")\n      const [time,setTime] = useState(\"\")\n      const [grade,setGrade] = useState(\"\")\n      const [composer,setComposer] = useState(\"\")\n      const [addInfo,setAddInfo] = useState(\"\")\n      const [addNewInfo,setNewInfo] = useState(false)\n      const [validated, setValidated] = useState(false);\n      const handleSubmit = () => {\n          return\n      }\n      const updateAdditionalInfo = (id) => {\n          let infoItem = {\n            id,\n            time:document.getElementById(\"time\").value,\n            grade:document.getElementById(\"grade\").value,\n            track_title:document.getElementById(\"title\").value,\n            composer:document.getElementById(\"composer\").value,\n            addInfo:document.getElementById(\"addInfo\").value\n          }\n          props.actions.mainAction(ACTIONS.UPDATE_CD_INFO,infoItem)\n      }\n      const addAdditionalInfo = () => {\n        let infoItem = {\n          id:newId,\n          time:time ? time:\"\",\n          grade:grade ? grade:\"\",\n          track_title:title ? title:\"\",\n          composer:composer ? composer : \"\",\n          addInfo: addInfo ? addInfo : \"\"\n        }\n        console.log(infoItem)\n    }\n      const List = () => {\n          const displayButtons = (id,whichButtonsToShow) => {\n              if(whichButtonsToShow === \"update\")\n              return(<><Button  variant=\"secondary\">CANCEL</Button> <Button eventKey={id} onClick={(e)=>{setStatus(e.target.attributes.getNamedItem('eventKey').value);updateAdditionalInfo(id)}} variant=\"primary\">UPDATE</Button></>)\n              if(whichButtonsToShow === \"add\")\n              return(<><Button onClick={()=>setNewInfo(false)} variant=\"secondary\">CANCEL</Button> <Button  onClick={()=>{addAdditionalInfo()}} variant=\"primary\">ADD</Button></>)\n\n              return(<><Button  variant=\"danger\">DEL</Button> <Button eventKey={id} onClick={(e)=>{setStatus(e.target.attributes.getNamedItem('eventKey').value)}} variant=\"primary\">EDIT</Button></>)\n          }\n          const ListItems = () =>{\n              if(addNewInfo)\n              return (<tr>\n              <td> <Form.Control\n                                    required\n                                    as=\"select\"\n                                    onChange={e => setTitle(e.target.value)}\n                                    onBlur={e => setTitle(e.target.value)}\n                                    defaultValue={title}\n                                  >\n                            <option value=\"\" >SELECT A CD</option>\n                            {Object.values(_.orderBy(props.allPresentations ? props.allPresentations:[],\"cdName\",\"asc\")).map\n                             (CD=>{\n                                return <option key={CD.id} value={CD.id} >{CD.cdName}</option>\n                                })}\n                                      \n                                  </Form.Control></td>\n              <td><Form.Control\n                                    required\n                                    type=\"text\"\n                                    size=\"sm\"\n                                    placeholder=\"\"\n                                    defaultValue={time}\n                                    onChange={e => setTime(e.target.value)}\n                                    onBlur={e => setTime(e.target.value)}\n                                  /></td>\n              <td><Form.Control\n                                    required\n                                    type=\"text\"\n                                    size=\"sm\"\n                                    placeholder=\"\"\n                                    defaultValue={grade}\n                                    onChange={e => setGrade(e.target.value)}\n                                    onBlur={e => setGrade(e.target.value)}\n                                  /></td>\n              <td><Form.Control\n                                    required\n                                    as=\"textarea\" rows=\"3\"\n                                    size=\"sm\"\n                                    placeholder=\"\"\n                                    defaultValue={composer}\n                                    onChange={e => setComposer(e.target.value)}\n                                    onBlur={e => setComposer(e.target.value)}\n                                  /></td>\n              <td><Form.Control\n                                    required\n                                    type=\"textarea\"\n                                    size=\"sm\"\n                                    as=\"textarea\" rows=\"3\"\n                                    placeholder=\"\"\n                                    defaultValue={addInfo}\n                                    onChange={e => setAddInfo(e.target.value)}\n                                    onBlur={e => setAddInfo(e.target.value)}\n                                  /></td>\n              <td>{displayButtons(\"\",\"add\")}</td>\n              </tr>)\n              return Object.values(props.additionalInfo).map(info => {\n              if(info.id !== status)\n              return (<tr>\n              <td>{info.title[0]}</td>\n              <td>{info.time}</td>\n              <td>{info.grade}</td>\n              <td>{info.composer}</td>\n              <td>{info.addInfo}</td>\n              <td>{displayButtons(info.id)}</td>\n              </tr>)\n\n                return (<tr className={info.id === status ? \"active\":\"\"} key={info.id} >\n                    <td> <Form.Group controlId=\"title\"><Form.Control\n                                        required\n                                        as=\"select\"\n                                        onChange={e => setTitle(e.target.value)}\n                                        onBlur={e => setTitle(e.target.value)}\n                                        defaultValue={info.track_title}\n                                        >\n                                <option value=\"\" >SELECT A CD</option>\n                                {Object.values(_.orderBy(props.allPresentations ? props.allPresentations:[],\"cdName\",\"asc\")).map\n                                (CD=>{\n                                return +CD.id === +info.track_title ? <option key={CD.id} value={CD.id} selected>{CD.cdName}</option>\n                                : <option key={CD.id} value={CD.id} >{CD.cdName}</option>\n                                })}\n                                            \n                                        </Form.Control></Form.Group></td>\n                    <td><Form.Group controlId=\"time\"><Form.Control\n                                        \n                                        type=\"text\"\n                                        size=\"sm\"\n                                        placeholder=\"\"\n                                        defaultValue={info.time}\n                                        onChange={e => setTime(e.target.value)}\n                                        onBlur={e => setTime(e.target.value)}\n                                        /></Form.Group></td>\n                    <td><Form.Control\n                                        \n                                        type=\"text\"\n                                        size=\"sm\"\n                                        placeholder=\"\"\n                                        defaultValue={info.grade}\n                                        onChange={e => setGrade(e.target.value)}\n                                        onBlur={e => setGrade(e.target.value)}\n                                        id=\"grade\"\n                                        /></td>\n                    <td><Form.Control\n                                        \n                                        as=\"textarea\" rows=\"3\"\n                                        size=\"sm\"\n                                        placeholder=\"\"\n                                        defaultValue={info.composer}\n                                        onChange={e => setComposer(e.target.value)}\n                                        onBlur={e => setComposer(e.target.value)}\n                                        id=\"composer\"\n                                        /></td>\n                    <td><Form.Control\n                                        \n                                        type=\"textarea\"\n                                        size=\"sm\"\n                                        as=\"textarea\" rows=\"3\"\n                                        placeholder=\"\"\n                                        defaultValue={info.addInfo}\n                                        onChange={e => setAddInfo(e.target.value)}\n                                        onBlur={e => setAddInfo(e.target.value)}\n                                        id=\"addInfo\"\n                                        /></td>\n                    <td>{displayButtons(info.id,\"update\")}</td>\n                    </tr>)\n              })\n              \n          }\n          return (\n            <Form>\n            <Table striped bordered hover className=\"additional-info\">\n           \n            <thead>\n              <tr>\n                <th>title</th>\n                <th>time</th>\n                <th>grade</th>\n                <th>composer</th>\n                <th>additional info</th>\n                <th><Button  variant=\"primary\" onClick={()=>setNewInfo(true)}>ADD INFO</Button></th>\n              </tr>\n            </thead>\n            <tbody>\n               <ListItems />\n            </tbody>\n            \n          </Table>\n          </Form>\n          )\n      }\n      return (<>\n        <List />\n      </>)\n}\n\nfunction mapStateToProps(state) {\n    \n    return {\n    allPresentations:_.orderBy(state.AllPresentationsReducer,\"id\",\"asc\"),\n      additionalInfo:state.cdInfoReducer\n    };\n  }\n  \n  function mapDispatchToProps(dispatch) {\n    return {\n      actions: bindActionCreators({mainAction}, dispatch)\n    };\n  }\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(AdditionalInfo);\n  "]},"metadata":{},"sourceType":"module"}