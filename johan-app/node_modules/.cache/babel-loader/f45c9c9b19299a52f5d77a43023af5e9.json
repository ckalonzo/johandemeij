{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/websites/johandemeij-master/johan-app/src/components/dashboard/EditPost.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Form, Container, Row, Col, Button } from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport SideNav from \"components/dashboard/SideNav\";\nimport { mainAction } from \"redux/actions/index.actions\";\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst EditPost = props => {\n  const {\n    _id,\n    ID,\n    postTitle,\n    postDate,\n    postContent,\n    showPost\n  } = props.post;\n  const [postStatus, setPostStatus] = useState(showPost);\n  const [title, setTitle] = useState(postTitle);\n  const [date, setDate] = useState(postDate);\n  const [content, setContent] = useState(postContent);\n  const [validated, setValidated] = useState(false);\n  const [selectedFile, setSelectedFile] = useState();\n  const [uploadStatus, setUploadStatus] = useState(false);\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `Johan De Meij | Edit Post`;\n    props.actions.mainAction(ACTIONS.LOAD_POST_IMAGES, []); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let newsItem = {\n      _id,\n      ID,\n      showPost: postStatus,\n      title,\n      date,\n      content\n    };\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n    props.actions.mainAction(ACTIONS.UPDATE_POST, newsItem);\n  };\n\n  const renderPostImage = () => {\n    return Object.values(props.postImages).filter(postImage => postImage.albumID === ID).map(image => {\n      console.log(image);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n        lg: {\n          span: 3\n        },\n        className: \"post-image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: `/images/posts/${image.imageName} `,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        lg: {\n          span: 3\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }, image.caption));\n    });\n  };\n\n  const handleImageSubmit = e => {};\n\n  const renderUploadButtons = () => {\n    if (selectedFile && !uploadStatus) return /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 12\n      }\n    }, \"upload\");\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 12\n      }\n    }, \"change image\");\n  };\n\n  console.log(renderPostImage());\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SideNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: \"10\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    id: \"images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleImageSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, renderPostImage(), /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 3\n    }\n  }, renderUploadButtons())))), /*#__PURE__*/React.createElement(\"section\", {\n    id: \"product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"showpost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 31\n    }\n  }, \"Show Post\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    custom: true,\n    onChange: e => setPostStatus(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: postStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }, postStatus === true ? \"ON\" : \"OFF\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, \"ON\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }, \"OFF\")))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: postTitle,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, \"Please provide a title.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: postDate,\n    onChange: e => setDate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, \"Please provide a product description.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CKEditor, {\n    editor: ClassicEditor,\n    data: content,\n    toolbar: ('heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote'),\n    onInit: editor => {\n      // You can store the \"editor\" and use when it is needed.\n      console.log('Editor is ready to use!', editor);\n    },\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      console.log({\n        event,\n        editor,\n        data\n      });\n      setContent(data);\n    },\n    onBlur: (event, editor) => {\n      const data = editor.getData();\n      console.log('Blur.', editor);\n      setContent(data);\n    },\n    onFocus: (event, editor) => {\n      console.log('Focus.', editor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, \"Update\")))))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    post: state.singlePostReducer,\n    posts: state.postsReducer,\n    postImages: state.postImagesReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      mainAction\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johandemeij-master/johan-app/src/components/dashboard/EditPost.jsx"],"names":["React","useEffect","useState","connect","bindActionCreators","Form","Container","Row","Col","Button","ACTIONS","SideNav","mainAction","CKEditor","ClassicEditor","EditPost","props","_id","ID","postTitle","postDate","postContent","showPost","post","postStatus","setPostStatus","title","setTitle","date","setDate","content","setContent","validated","setValidated","selectedFile","setSelectedFile","uploadStatus","setUploadStatus","document","actions","LOAD_POST_IMAGES","handleSubmit","event","preventDefault","newsItem","form","currentTarget","checkValidity","stopPropagation","UPDATE_POST","renderPostImage","Object","values","postImages","filter","postImage","albumID","map","image","console","log","span","imageName","caption","handleImageSubmit","e","renderUploadButtons","target","value","editor","data","getData","mapStateToProps","state","singlePostReducer","posts","postsReducer","postImagesReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Form, Container, Row, Col, Button} from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport SideNav from \"components/dashboard/SideNav\";\nimport { mainAction } from \"redux/actions/index.actions\"\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nconst EditPost = props => {\n  const {_id,ID,postTitle,postDate,postContent,showPost} = props.post\n  const [postStatus, setPostStatus] = useState(showPost);\n  const [title, setTitle] = useState(postTitle);\n  const [date, setDate] = useState(postDate);\n  const [content, setContent] = useState(postContent);\n  const [validated, setValidated] = useState(false);\n  const [selectedFile,setSelectedFile] = useState()\n  const [uploadStatus,setUploadStatus] = useState(false)\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `Johan De Meij | Edit Post`;\n    props.actions.mainAction(ACTIONS.LOAD_POST_IMAGES,[])\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    let newsItem = {\n      _id,\n      ID,\n      showPost:postStatus,\n      title,\n      date,\n      content\n    }\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    setValidated(true);\n   props.actions.mainAction(ACTIONS.UPDATE_POST,newsItem)\n  };\n  const renderPostImage = () =>{\n    return Object.values(props.postImages).filter(postImage => postImage.albumID === ID).map(image => {\n      console.log(image)\n      return (\n        <>\n            <Col lg={{span:3}} className=\"post-image\">\n              <img src={`/images/posts/${image.imageName} `} />\n            </Col>\n      <Col lg={{span:3}}>{image.caption}</Col>\n        </>\n      )\n    })\n  }\n  const handleImageSubmit = (e) => {\n\n  }\n\n  const renderUploadButtons = () => {\n    if(selectedFile && !uploadStatus)\n    return <Button variant=\"dark\">upload</Button>\n    return <Button variant=\"primary\">change image</Button>\n  }\n  console.log(renderPostImage())\n  return (\n    <>\n      <Container>\n        <Row>\n          \n          <Col lg={{ span: 2 }}>\n              <SideNav />\n          </Col>\n          <Col lg={{span:\"10\" }}> \n          <section id=\"images\">\n          <Form noValidate validated={validated} onSubmit={handleImageSubmit}>\n            <Row>\n            {renderPostImage()}\n              \n  <Col lg={{span:3}}>{renderUploadButtons()}</Col>\n            </Row>\n            </Form>\n          </section>\n            <section id=\"product\">\n              <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                <Form.Row>\n                            <Form.Group controlId=\"showpost\">\n                              <Form.Label>Show Post</Form.Label>\n                              <Form.Control\n                                as=\"select\"\n                                custom\n                                onChange={e => setPostStatus(e.target.value)}\n                              >\n                                <option value={postStatus}>{postStatus === true ? \"ON\":\"OFF\"}</option>\n                                <option value=\"true\">ON</option>\n                                <option value=\"false\">OFF</option>\n                              </Form.Control>\n                            </Form.Group>\n                          </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col}  controlId=\"title\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"\"\n                      defaultValue={postTitle}\n                      onChange={e => setTitle(e.target.value)}\n                      \n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a title.\n                      </Form.Control.Feedback>\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Form.Group>\n                  </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"date\">\n                    <Form.Label>Date</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"\"\n                      defaultValue={postDate}\n                      onChange={e => setDate(e.target.value)}\n                      \n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a product description.\n                      </Form.Control.Feedback>\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Form.Group>\n                  \n                </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"content\">\n                    <CKEditor\n                        editor={ ClassicEditor }\n                        data={content}\n                        toolbar= {'heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote' }\n                        onInit={ editor => {\n                            // You can store the \"editor\" and use when it is needed.\n                            console.log( 'Editor is ready to use!', editor );\n                        } }\n                        onChange={ ( event, editor ) => {\n                            const data = editor.getData();\n                            console.log( { event, editor, data } );\n                            setContent(data)\n                        } }\n                        onBlur={ ( event, editor ) => {\n                          const data = editor.getData();\n                            console.log( 'Blur.', editor );\n                            setContent(data)\n                        } }\n                        onFocus={ ( event, editor ) => {\n                            console.log( 'Focus.', editor );\n                        } }\n                    />\n                  </Form.Group>\n                  </Form.Row>\n                <Button type=\"submit\">Update</Button>\n              </Form> \n            </section>\n          </Col>\n        </Row> \n      </Container>\n    </>\n  );\n};\nfunction mapStateToProps(state) {\n  return {\n    post: state.singlePostReducer,\n    posts:state.postsReducer,\n    postImages:state.postImagesReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({mainAction}, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost);\n"]},"metadata":{},"sourceType":"module"}