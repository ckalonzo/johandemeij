{"ast":null,"code":"import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";var initialState={};export default function postImageReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.RESET_IMAGE:{var image=[];return image;}case ACTIONS.LOAD_POST_IMAGE:{var _image='';Object.values(action.payload.images).map(function(postImage){if(postImage.albumID===action.payload.ID){_image=postImage;return postImage;}return null;});action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_IMAGE_SUCCESS,_image));return state;}case ACTIONS.LOAD_POST_IMAGE_SUCCESS:{console.log(action);return action.payload;}default:return state;}}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/WEB/johandemeij/johan-app/src/redux/reducers/postImage.reducer.js"],"names":["ACTIONS","mainAction","initialState","postImageReducer","state","action","type","RESET_IMAGE","image","LOAD_POST_IMAGE","Object","values","payload","images","map","postImage","albumID","ID","asyncDispatch","LOAD_POST_IMAGE_SUCCESS","console","log"],"mappings":"AAAA,OAASA,OAAT,KAAwB,wBAAxB,CACA,OAASC,UAAT,KAA2B,6BAA3B,CACA,GAAMC,CAAAA,YAAY,CAAG,EAArB,CACA,cAAe,SAASC,CAAAA,gBAAT,EAAyD,IAA9BC,CAAAA,KAA8B,2DAAtBF,YAAsB,IAARG,CAAAA,MAAQ,2CACpE,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKN,CAAAA,OAAO,CAACO,WAAb,CAAyB,CACvB,GAAIC,CAAAA,KAAK,CAAG,EAAZ,CACA,MAAOA,CAAAA,KAAP,CACD,CACD,IAAKR,CAAAA,OAAO,CAACS,eAAb,CAA6B,CAC3B,GAAID,CAAAA,MAAK,CAAE,EAAX,CACAE,MAAM,CAACC,MAAP,CAAcN,MAAM,CAACO,OAAP,CAAeC,MAA7B,EAAqCC,GAArC,CAAyC,SAAAC,SAAS,CAAI,CAEtD,GAAGA,SAAS,CAACC,OAAV,GAAsBX,MAAM,CAACO,OAAP,CAAeK,EAAxC,CAA2C,CACzCT,MAAK,CAAGO,SAAR,CACA,MAAOA,CAAAA,SAAP,CACD,CACC,MAAO,KAAP,CAED,CARD,EASAV,MAAM,CAACa,aAAP,CAAqBjB,UAAU,CAACD,OAAO,CAACmB,uBAAT,CAAiCX,MAAjC,CAA/B,EACE,MAAOJ,CAAAA,KAAP,CACH,CACD,IAAKJ,CAAAA,OAAO,CAACmB,uBAAb,CAAqC,CACnCC,OAAO,CAACC,GAAR,CAAYhB,MAAZ,EACA,MAAOA,CAAAA,MAAM,CAACO,OAAd,CACD,CAED,QACE,MAAOR,CAAAA,KAAP,CAzBJ,CA4BD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nconst initialState = {};\nexport default function postImageReducer (state = initialState, action) {\n    switch (action.type) {\n      case ACTIONS.RESET_IMAGE:{\n        let image = [];\n        return image;\n      }\n      case ACTIONS.LOAD_POST_IMAGE:{\n        let image ='' \n        Object.values(action.payload.images).map(postImage => {\n          \n        if(postImage.albumID === action.payload.ID){\n          image = postImage;\n          return postImage\n        }\n          return null\n          \n        })\n        action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_IMAGE_SUCCESS,image))\n          return state\n      }\n      case ACTIONS.LOAD_POST_IMAGE_SUCCESS:{\n        console.log(action)\n        return action.payload\n      }\n      \n      default: \n        return state\n       \n    }\n  }"]},"metadata":{},"sourceType":"module"}