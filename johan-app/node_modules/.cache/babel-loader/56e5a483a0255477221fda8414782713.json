{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/WEB/johandemeij/johan-app/src/components/dashboard/PublicationImage.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { mainAction } from \"redux/actions/index.actions\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\n\nconst ProfileImage = props => {\n  let mainProps = props;\n  const [selectedFile, setSelectedFile] = useState();\n  const [uploadStatus, setUploadStatus] = useState(false);\n  const [frontCaption, setFrontCaption] = useState();\n  const [backCaption, setBackCaption] = useState();\n  const [validated, setValidated] = useState(false);\n  const [coverLocation, setCoverLocation] = useState(\"frontCover\");\n  const [file, setFile] = useState(); //const {ID,images} = props\n\n  useEffect(() => {\n    document.title = `Johan De Meij | Edit Post`; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleImageSubmit = e => {// console.log(props)\n  };\n\n  const updateCaption = () => {\n    let caption = {\n      docId: props.docId,\n      albumID: props.ID,\n      caption: props.type === \"front\" ? frontCaption : backCaption,\n      cover: props.type === \"front\" ? \"frontCover\" : \"backCover\"\n    };\n    mainProps.actions.mainAction(ACTIONS.UPDATE_CAPTION, caption);\n  };\n\n  const uploadImage = () => {\n    let image = {\n      docId: props.docId,\n      image: file,\n      path: selectedFile,\n      albumID: props.ID,\n      caption: props.type === \"front\" ? frontCaption : backCaption,\n      cover: props.type === \"front\" ? \"frontCover\" : \"backCover\"\n    };\n    mainProps.actions.mainAction(ACTIONS.UPLOAD_PRESENTATION_IMAGE, image);\n  };\n\n  const insertImage = () => {\n    let image = {\n      docId: props.docId,\n      image: file,\n      path: selectedFile,\n      albumID: props.ID,\n      caption: props.type === \"front\" ? frontCaption : backCaption,\n      cover: props.type === \"front\" ? \"frontCover\" : \"backCover\"\n    };\n    mainProps.actions.mainAction(ACTIONS.UPLOAD_PRESENTATION_IMAGE, image);\n  };\n\n  const deletePresentationImage = () => {\n    let image = {\n      imageType: props.type === \"front\" ? \"frontCover\" : \"backCover\",\n      docId: props.docId,\n      name: props.image,\n      ID: props.ID\n    };\n    mainProps.actions.mainAction(ACTIONS.DELETE_PRESENTATION_IMAGE, image);\n  };\n\n  const onChangeHandler = e => {\n    setSelectedFile(window.URL.createObjectURL(e.target.files[0]));\n    setFile(e.target.files[0]);\n    setUploadStatus(true);\n  };\n\n  const renderUploadButtons = _id => {\n    if (selectedFile && uploadStatus) return /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: () => uploadImage(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"upload\");\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: e => selecteImageToUpload(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"New image\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      onClick: () => {\n        if (window.confirm(\"Delete this item?\")) deletePresentationImage(_id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, \"Delete\"));\n  };\n\n  const renderInsertButtons = () => {\n    if (selectedFile && uploadStatus) {\n      return /*#__PURE__*/React.createElement(Button, {\n        variant: \"warning\",\n        onClick: () => insertImage(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, \"upload\");\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        style: {\n          marginRight: \"15px\"\n        },\n        onClick: e => selecteImageToUpload(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }, \"Change\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"danger\",\n        onClick: e => {\n          if (window.confirm(\"Delete this item?\")) deletePresentationImage(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }, \"Delete\"));\n    }\n  };\n\n  const selecteImageToUpload = e => {\n    props.type === \"front\" ? document.querySelector(\"input#post-image-front\").click() : document.querySelector(\"input#post-image-back\").click();\n  };\n\n  let postImage = Object.values(props.postImage ? props.postImage : []).map(image => {\n    return image;\n  });\n\n  const renderImage = () => {\n    if (props.image) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: !selectedFile ? \"https://firebasestorage.googleapis.com/v0/b/johandemeij-513b2.appspot.com/o/posts%2F\" + props.image + \"?alt=media\" : selectedFile,\n        onClick: e => selecteImageToUpload(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: !selectedFile ? \"/images/missing.png\" : selectedFile,\n        onClick: e => selecteImageToUpload(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    id: \"images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleImageSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 2\n    },\n    className: \"post-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, renderImage(), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"15px\",\n      textAlign: \"center\",\n      font: \"400 8px/10px 'Work Sans', sans-serif\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, !uploadStatus ? props.imageName : \"\")), /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 6\n    },\n    className: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: props.type === \"front\" ? \"frontCaption\" : \"backCaption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }, props.type === \"front\" ? \"Front Cover \" : \"Back Cover \", \"Caption\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: props.caption,\n    onChange: e => props.type === \"front\" ? setFrontCaption(e.target.value) : setBackCaption(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 4\n    },\n    className: \"action-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, props.imageName ? renderUploadButtons(props._id) : renderInsertButtons(), props.type === \"front\" ? /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"post-image-front\",\n    onChange: e => onChangeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"post-image-back\",\n    onChange: e => onChangeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  })))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    postImage: state.singlePostReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      mainAction\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileImage);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/WEB/johandemeij/johan-app/src/components/dashboard/PublicationImage.jsx"],"names":["React","useEffect","useState","connect","bindActionCreators","mainAction","Form","Row","Col","Button","ACTIONS","ProfileImage","props","mainProps","selectedFile","setSelectedFile","uploadStatus","setUploadStatus","frontCaption","setFrontCaption","backCaption","setBackCaption","validated","setValidated","coverLocation","setCoverLocation","file","setFile","document","title","handleImageSubmit","e","updateCaption","caption","docId","albumID","ID","type","cover","actions","UPDATE_CAPTION","uploadImage","image","path","UPLOAD_PRESENTATION_IMAGE","insertImage","deletePresentationImage","imageType","name","DELETE_PRESENTATION_IMAGE","onChangeHandler","window","URL","createObjectURL","target","files","renderUploadButtons","_id","selecteImageToUpload","confirm","renderInsertButtons","marginRight","querySelector","click","postImage","Object","values","map","renderImage","span","marginTop","textAlign","font","imageName","value","mapStateToProps","state","singlePostReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { mainAction } from \"redux/actions/index.actions\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\n\nconst ProfileImage = (props) => {\n  let mainProps = props;\n\n  const [selectedFile, setSelectedFile] = useState();\n  const [uploadStatus, setUploadStatus] = useState(false);\n  const [frontCaption, setFrontCaption] = useState();\n  const [backCaption, setBackCaption] = useState();\n  const [validated, setValidated] = useState(false);\n  const [coverLocation, setCoverLocation] = useState(\"frontCover\");\n  const [file, setFile] = useState();\n  //const {ID,images} = props\n  useEffect(() => {\n    document.title = `Johan De Meij | Edit Post`;\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const handleImageSubmit = (e) => {\n    // console.log(props)\n  };\n  const updateCaption = () => {\n    let caption = {\n      docId: props.docId,\n      albumID: props.ID,\n      caption: props.type === \"front\" ? frontCaption : backCaption,\n      cover: props.type === \"front\" ? \"frontCover\" : \"backCover\",\n    };\n    mainProps.actions.mainAction(ACTIONS.UPDATE_CAPTION, caption);\n  };\n  const uploadImage = () => {\n    let image = {\n      docId: props.docId,\n      image: file,\n      path: selectedFile,\n      albumID: props.ID,\n      caption: props.type === \"front\" ? frontCaption : backCaption,\n      cover: props.type === \"front\" ? \"frontCover\" : \"backCover\",\n    };\n    mainProps.actions.mainAction(ACTIONS.UPLOAD_PRESENTATION_IMAGE, image);\n  };\n\n  const insertImage = () => {\n    let image = {\n      docId: props.docId,\n      image: file,\n      path: selectedFile,\n      albumID: props.ID,\n      caption: props.type === \"front\" ? frontCaption : backCaption,\n      cover: props.type === \"front\" ? \"frontCover\" : \"backCover\",\n    };\n    mainProps.actions.mainAction(ACTIONS.UPLOAD_PRESENTATION_IMAGE, image);\n  };\n  const deletePresentationImage = () => {\n    let image = {\n      imageType: props.type === \"front\" ? \"frontCover\" : \"backCover\",\n      docId: props.docId,\n      name: props.image,\n      ID: props.ID,\n    };\n\n    mainProps.actions.mainAction(ACTIONS.DELETE_PRESENTATION_IMAGE, image);\n  };\n  const onChangeHandler = (e) => {\n    setSelectedFile(window.URL.createObjectURL(e.target.files[0]));\n    setFile(e.target.files[0]);\n    setUploadStatus(true);\n  };\n  const renderUploadButtons = (_id) => {\n    if (selectedFile && uploadStatus)\n      return (\n        <Button variant=\"dark\" onClick={() => uploadImage()}>\n          upload\n        </Button>\n      );\n    return (\n      <>\n        <Button variant=\"primary\" onClick={(e) => selecteImageToUpload(e)}>\n          New image\n        </Button>\n        <Button\n          variant=\"danger\"\n          onClick={() => {\n            if (window.confirm(\"Delete this item?\"))\n              deletePresentationImage(_id);\n          }}\n        >\n          Delete\n        </Button>\n      </>\n    );\n  };\n  const renderInsertButtons = () => {\n    if (selectedFile && uploadStatus) {\n      return (\n        <Button variant=\"warning\" onClick={() => insertImage()}>\n          upload\n        </Button>\n      );\n    } else {\n      return (\n        <>\n          <Button\n            variant=\"primary\"\n            style={{ marginRight: \"15px\" }}\n            onClick={(e) => selecteImageToUpload(e)}\n          >\n            Change\n          </Button>\n          <Button\n            variant=\"danger\"\n            onClick={(e) => {\n              if (window.confirm(\"Delete this item?\"))\n                deletePresentationImage(e);\n            }}\n          >\n            Delete\n          </Button>\n        </>\n      );\n    }\n  };\n  const selecteImageToUpload = (e) => {\n    props.type === \"front\"\n      ? document.querySelector(\"input#post-image-front\").click()\n      : document.querySelector(\"input#post-image-back\").click();\n  };\n  let postImage = Object.values(props.postImage ? props.postImage : []).map(\n    (image) => {\n      return image;\n    }\n  );\n  const renderImage = () => {\n    if (props.image) {\n      return (\n        <img\n          src={\n            !selectedFile\n              ? \"https://firebasestorage.googleapis.com/v0/b/johandemeij-513b2.appspot.com/o/posts%2F\" +\n                props.image +\n                \"?alt=media\"\n              : selectedFile\n          }\n          onClick={(e) => selecteImageToUpload(e)}\n        />\n      );\n    } else {\n      return (\n        <img\n          src={!selectedFile ? \"/images/missing.png\" : selectedFile}\n          onClick={(e) => selecteImageToUpload(e)}\n        />\n      );\n    }\n  };\n\n  return (\n    <section id=\"images\">\n      <Form noValidate validated={validated} onSubmit={handleImageSubmit}>\n        <Row>\n          <Col lg={{ span: 2 }} className=\"post-image\">\n            {renderImage()}\n            <div\n              style={{\n                marginTop: \"15px\",\n                textAlign: \"center\",\n                font: \"400 8px/10px 'Work Sans', sans-serif\",\n              }}\n            >\n              {!uploadStatus ? props.imageName : \"\"}\n            </div>\n          </Col>\n          <Col lg={{ span: 6 }} className=\"caption\">\n            <div>\n              <Form.Row>\n                <Form.Group\n                  controlId={\n                    props.type === \"front\" ? \"frontCaption\" : \"backCaption\"\n                  }\n                >\n                  <Form.Label>\n                    {props.type === \"front\" ? \"Front Cover \" : \"Back Cover \"}\n                    Caption\n                  </Form.Label>\n                  <Form.Control\n                    required\n                    type=\"text\"\n                    placeholder=\"\"\n                    defaultValue={props.caption}\n                    onChange={(e) =>\n                      props.type === \"front\"\n                        ? setFrontCaption(e.target.value)\n                        : setBackCaption(e.target.value)\n                    }\n                  />\n                </Form.Group>\n              </Form.Row>\n            </div>\n          </Col>\n          <Col lg={{ span: 4 }} className=\"action-button\">\n            {props.imageName\n              ? renderUploadButtons(props._id)\n              : renderInsertButtons()}\n            {props.type === \"front\" ? (\n              <input\n                type=\"file\"\n                id={\"post-image-front\"}\n                onChange={(e) => onChangeHandler(e)}\n              />\n            ) : (\n              <input\n                type=\"file\"\n                id={\"post-image-back\"}\n                onChange={(e) => onChangeHandler(e)}\n              />\n            )}\n          </Col>\n        </Row>\n      </Form>\n    </section>\n  );\n};\nfunction mapStateToProps(state) {\n  return {\n    postImage: state.singlePostReducer,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({ mainAction }, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileImage);\n"]},"metadata":{},"sourceType":"module"}