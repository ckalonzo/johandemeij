{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/websites/johandemeij-master/johan-app/src/components/dashboard/EditPost.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Form, Container, Row, Col, Button } from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport SideNav from \"components/dashboard/SideNav\";\nimport { mainAction } from \"redux/actions/index.actions\";\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst EditPost = props => {\n  const {\n    postTitle,\n    postDate,\n    postContent\n  } = props.post;\n  const [showPost, setShowPost] = useState(false);\n  const [title, setTitle] = useState();\n  const [date, setDate] = useState();\n  const [content, setContent] = useState();\n  const [postImage, setPostImage] = useState();\n  const [postImageCaption, setPostImageCaption] = useState();\n  const [validated, setValidated] = useState(false);\n  const [description, setDescription] = useState();\n  const [price, setPrice] = useState();\n  const [type, setType] = useState();\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `Johan De Meij | Edit Post`;\n    props.actions.mainAction(ACTIONS.LOAD_POST_IMAGES, []); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let product = {\n      title,\n      description,\n      price,\n      productType: type,\n      productOwnerId: props.user._id\n    };\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n    console.log(ACTIONS.ADD_PRODUCT, product);\n    if (Object.values(product).length > 0) props.actions.mainAction(ACTIONS.ADD_PRODUCT, product);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SideNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: \"10\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    id: \"product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"showpost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 31\n    }\n  }, \"Show Post\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    custom: true,\n    onChange: e => setShowPost(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"t\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 33\n    }\n  }, \"ON\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }, \"Off\")))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: postTitle,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Please provide a title.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: postDate,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, \"Please provide a product description.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CKEditor, {\n    editor: ClassicEditor,\n    data: postContent ? postContent.replace(/[\\r\\n]/g, '') : '',\n    toolbar: ('heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote'),\n    onInit: editor => {\n      // You can store the \"editor\" and use when it is needed.\n      console.log('Editor is ready to use!', editor);\n    },\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      console.log({\n        event,\n        editor,\n        data\n      });\n    },\n    onBlur: (event, editor) => {\n      console.log('Blur.', editor);\n    },\n    onFocus: (event, editor) => {\n      console.log('Focus.', editor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, \"Update Product\")))))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    post: state.singlePostReducer,\n    postImages: state.postImagesReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      mainAction\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johandemeij-master/johan-app/src/components/dashboard/EditPost.jsx"],"names":["React","useEffect","useState","connect","bindActionCreators","Form","Container","Row","Col","Button","ACTIONS","SideNav","mainAction","CKEditor","ClassicEditor","EditPost","props","postTitle","postDate","postContent","post","showPost","setShowPost","title","setTitle","date","setDate","content","setContent","postImage","setPostImage","postImageCaption","setPostImageCaption","validated","setValidated","description","setDescription","price","setPrice","type","setType","document","actions","LOAD_POST_IMAGES","handleSubmit","event","preventDefault","product","productType","productOwnerId","user","_id","form","currentTarget","checkValidity","stopPropagation","console","log","ADD_PRODUCT","Object","values","length","span","e","target","value","replace","editor","data","getData","mapStateToProps","state","singlePostReducer","postImages","postImagesReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Form, Container, Row, Col, Button} from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport SideNav from \"components/dashboard/SideNav\";\nimport { mainAction } from \"redux/actions/index.actions\"\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nconst EditPost = props => {\n  const {postTitle,postDate,postContent} = props.post\n  const [showPost, setShowPost] = useState(false);\n  const [title, setTitle] = useState();\n  const [date, setDate] = useState();\n  const [content, setContent] = useState();\n  const [postImage, setPostImage] = useState();\n  const [postImageCaption, setPostImageCaption] = useState();\n  const [validated, setValidated] = useState(false);\n  const [description, setDescription] = useState();\n  const [price, setPrice] = useState();\n  const [type, setType] = useState();\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `Johan De Meij | Edit Post`;\n    props.actions.mainAction(ACTIONS.LOAD_POST_IMAGES,[])\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const handleSubmit = event => {\n    event.preventDefault();\n    let product = {\n      title,\n      description,\n      price,\n      productType:type,\n      productOwnerId: props.user._id\n    }\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    setValidated(true);\n    console.log(ACTIONS.ADD_PRODUCT,product)\n    if(Object.values(product).length > 0)\n    props.actions.mainAction(ACTIONS.ADD_PRODUCT,product)\n  };\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col lg={{ span: 2 }}>\n              <SideNav />\n          </Col>\n          <Col lg={{span:\"10\" }}>\n            <section id=\"product\">\n              <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                <Form.Row>\n                            <Form.Group controlId=\"showpost\">\n                              <Form.Label>Show Post</Form.Label>\n                              <Form.Control\n                                as=\"select\"\n                                custom\n                                onChange={e => setShowPost(e.target.value)}\n                              >\n                                <option value=\"t\">ON</option>\n                                <option>Off</option>\n                              </Form.Control>\n                            </Form.Group>\n                          </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col}  controlId=\"title\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"\"\n                      defaultValue={postTitle}\n                      onChange={e => setTitle(e.target.value)}\n                      \n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a title.\n                      </Form.Control.Feedback>\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Form.Group>\n                  </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"description\">\n                    <Form.Label>Date</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"\"\n                      defaultValue={postDate}\n                      onChange={e => setDescription(e.target.value)}\n                      \n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a product description.\n                      </Form.Control.Feedback>\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Form.Group>\n                  \n                </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"content\">\n                  <CKEditor\n                              editor={ ClassicEditor }\n                              data={postContent ? postContent.replace(/[\\r\\n]/g, ''):''}\n                              toolbar= {'heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote' }\n                              onInit={ editor => {\n                                  // You can store the \"editor\" and use when it is needed.\n                                  console.log( 'Editor is ready to use!', editor );\n                              } }\n                              onChange={ ( event, editor ) => {\n                                  const data = editor.getData();\n                                  console.log( { event, editor, data } );\n                              } }\n                              onBlur={ ( event, editor ) => {\n                                  console.log( 'Blur.', editor );\n                              } }\n                              onFocus={ ( event, editor ) => {\n                                  console.log( 'Focus.', editor );\n                              } }\n                          />\n                  </Form.Group>\n                  </Form.Row>\n                <Button type=\"submit\">Update Product</Button>\n              </Form> \n            </section>\n          </Col>\n        </Row> \n      </Container>\n    </>\n  );\n};\nfunction mapStateToProps(state) {\n  return {\n    post: state.singlePostReducer,\n    postImages:state.postImagesReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({mainAction}, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost);\n"]},"metadata":{},"sourceType":"module"}