{"ast":null,"code":"import _objectSpread from\"/Applications/MAMP/htdocs/WEB/johandemeij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";import{updatePostImage,uploadPostImage,createPostImage}from\"API/indexAPI\";import{db,storage}from\"../../firebase\";import _ from'lodash';var initialState={currentID:''};export default function singlePostReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.CREATE_NEW_POST_IMAGE:{createPostImage(action.payload).then(function(json){action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_POST_IMAGE_SUCCESS,json));}).catch(function(err){action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_POST_IMAGE_FAIL,err));});return state;}case ACTIONS.CREATE_NEW_POST_IMAGE_SUCCESS:{var stateCopy=_.cloneDeep(state);action.asyncDispatch(mainAction(ACTIONS.LOAD_POST,stateCopy.ID));return state;}case ACTIONS.CREATE_NEW_POST_IMAGE_FAIL:{return state;}case ACTIONS.CREATE_NEW_POST:{var _stateCopy=_.cloneDeep(action.payload);db.collection(\"posts\").add(_stateCopy).then(function(docRef){console.log(docRef);_stateCopy._id=docRef.id;action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_POST_SUCCESS,_stateCopy));});return _stateCopy;}case ACTIONS.CREATE_NEW_POST_SUCCESS:{return action.payload;}case ACTIONS.CREATE_NEW_POST_FAIL:{return state;}case ACTIONS.DELETE_POST:{db.collection(\"posts\").where('ID','==',action.payload).get().then(function(querySnapshot){querySnapshot.forEach(function(doc){return doc.ref.delete();});action.asyncDispatch(mainAction(ACTIONS.DELETE_POST_SUCCESS,[]));});return state;}case ACTIONS.DELETE_POST_SUCCESS:{action.asyncDispatch(mainAction(ACTIONS.LOAD_DASHBOARD_POSTS,[]));return state;}case ACTIONS.DELETE_POST_FAIL:{return action.payload;}case ACTIONS.DELETE_POST_IMAGE:{console.log(action);db.collection(\"postimages\").where('albumID','==',action.payload.ID).get().then(function(querySnapshot){querySnapshot.forEach(function(doc){return doc.ref.delete();});action.asyncDispatch(mainAction(ACTIONS.DELETE_POST_IMAGE_SUCCESS,action.payload));});return state;}case ACTIONS.DELETE_POST_IMAGE_SUCCESS:{var postImageRef=storage.ref('images/posts/'+action.payload.name);postImageRef.delete().then(function(){return console.log(\"file deleted\");});action.asyncDispatch(mainAction(ACTIONS.LOAD_POST,action.payload.ID));return state;}case ACTIONS.DELETE_POST_IMAGE_FAIL:{return action.payload;}case ACTIONS.LOAD_ARTICLE:{return action.payload;}case ACTIONS.LOAD_POST:{var post_id='';//////====>\ndb.collection(\"posts\")//.where(\"ID\",'==',action.payload)\n.where(\"ID\",'==',action.payload).get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){post_id=doc.id;return doc.data();});var stateCopy=_.cloneDeep(data);if(stateCopy[0])stateCopy[0]._id=post_id;var _id='';action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_SUCCESS,stateCopy));//=======================================================\ndb.collection(\"postimages\").where(\"albumID\",'==',action.payload).get().then(function(snapshotChanges){var data=snapshotChanges.docs.map(function(doc){_id=doc.id;return doc.data();});stateCopy.map(function(post,i){//    data[0]._id =  _id\nreturn stateCopy[i].image=data;});if(snapshotChanges.size>0)action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_SUCCESS,stateCopy));// action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_FAIL,{error:\"could not find this record\"}))\n});//========================================================\n});//////====>\nreturn state;}case ACTIONS.LOAD_POST_SUCCESS:{return _objectSpread({state:state},action.payload[0]);}case ACTIONS.LOAD_POST_FAIL:{return state;}case ACTIONS.UPDATE_POST:{db.collection(\"posts\").doc(action.payload._id).update(action.payload).then(function(){action.asyncDispatch(mainAction(ACTIONS.UPDATE_POST_SUCCESS,action.payload));});return state;}case ACTIONS.UPDATE_POST_SUCCESS:{var _stateCopy2=_.cloneDeep(state);action.asyncDispatch(mainAction(ACTIONS.LOAD_POST,_stateCopy2.ID));return _objectSpread({state:state},action.payload);}case ACTIONS.UPDATE_POST_FAIL:{return state;}case ACTIONS.UPLOAD_IMAGE:{var _stateCopy3=_.cloneDeep(action.payload);var image=_stateCopy3.image;uploadPostImage(image).then(function(json){if(json.status!==404||json.status!==500){action.asyncDispatch(mainAction(ACTIONS.UPLOAD_IMAGE_SUCCESS,{submitted:_stateCopy3,json:json}));}else{action.asyncDispatch(mainAction(ACTIONS.UPLOAD_IMAGE_FAIL,json.response.message));}}).catch(function(err){return action.asyncDispatch(mainAction(ACTIONS.UPLOAD_IMAGE_FAIL,err));});return state;}case ACTIONS.UPLOAD_IMAGE_SUCCESS:{var _stateCopy4=_.cloneDeep(state);var newImage={_id:action.payload.submitted._id,albumID:action.payload.submitted.albumID,caption:action.payload.submitted.caption,cover:action.payload.submitted.cover,imageName:action.payload.json.data.filename,updatedAt:Date.now()};_stateCopy4.currentID=action.payload.submitted.albumID;action.asyncDispatch(mainAction(ACTIONS.UPDATE_POST_IMAGE,newImage));return _stateCopy4;}case ACTIONS.UPLOAD_IMAGE_FAIL:{return state;}case ACTIONS.UPDATE_POST_IMAGE:{updatePostImage(action.payload).then(function(json){action.asyncDispatch(mainAction(ACTIONS.UPDATE_POST_IMAGE_SUCCESS,json));}).catch(function(err){action.asyncDispatch(mainAction(ACTIONS.UPDATE_POST_IMAGE_FAIL,err));});return state;}case ACTIONS.UPDATE_POST_IMAGE_SUCCESS:{var _stateCopy5=_.cloneDeep(state);action.asyncDispatch(mainAction(ACTIONS.LOAD_POST,_stateCopy5.ID));return state;}case ACTIONS.UPDATE_POST_IMAGE_FAIL:{return state;}case ACTIONS.UPLOAD_POST_IMAGE:{var _image={albumID:action.payload.albumID,caption:action.payload.caption?action.payload.caption:\"\",cover:action.payload.cover,imageName:action.payload.image.name};db.collection(\"postimages\").doc().set(_image).then(function(){action.asyncDispatch(mainAction(ACTIONS.UPLOAD_POST_IMAGE_SUCCESS,action.payload));});return state;}case ACTIONS.UPLOAD_POST_IMAGE_SUCCESS:{var _postImageRef=storage.ref('posts/'+action.payload.image.name).put(action.payload.image);_postImageRef.on('state_changed',function(snapshot){//progress function\n},function(error){//error\nconsole.log(error);},function(){//complete\nstorage.ref('posts/').child(action.payload.image.name).getDownloadURL().then(function(url){console.log(action,url);action.asyncDispatch(mainAction(ACTIONS.LOAD_POST,action.payload.albumID));});});return state;}case ACTIONS.UPLOAD_POST_IMAGE_FAIL:{return state;}default:return state;}}//No. 5 JPEG.jpg","map":{"version":3,"sources":["/Applications/MAMP/htdocs/WEB/johandemeij/johan-app/src/redux/reducers/singlePost.reducer.js"],"names":["ACTIONS","mainAction","updatePostImage","uploadPostImage","createPostImage","db","storage","_","initialState","currentID","singlePostReducer","state","action","type","CREATE_NEW_POST_IMAGE","payload","then","json","asyncDispatch","CREATE_NEW_POST_IMAGE_SUCCESS","catch","err","CREATE_NEW_POST_IMAGE_FAIL","stateCopy","cloneDeep","LOAD_POST","ID","CREATE_NEW_POST","collection","add","docRef","console","log","_id","id","CREATE_NEW_POST_SUCCESS","CREATE_NEW_POST_FAIL","DELETE_POST","where","get","querySnapshot","forEach","doc","ref","delete","DELETE_POST_SUCCESS","LOAD_DASHBOARD_POSTS","DELETE_POST_FAIL","DELETE_POST_IMAGE","DELETE_POST_IMAGE_SUCCESS","postImageRef","name","DELETE_POST_IMAGE_FAIL","LOAD_ARTICLE","post_id","data","docs","map","LOAD_POST_SUCCESS","snapshotChanges","post","i","image","size","LOAD_POST_FAIL","UPDATE_POST","update","UPDATE_POST_SUCCESS","UPDATE_POST_FAIL","UPLOAD_IMAGE","status","UPLOAD_IMAGE_SUCCESS","submitted","UPLOAD_IMAGE_FAIL","response","message","newImage","albumID","caption","cover","imageName","filename","updatedAt","Date","now","UPDATE_POST_IMAGE","UPDATE_POST_IMAGE_SUCCESS","UPDATE_POST_IMAGE_FAIL","UPLOAD_POST_IMAGE","set","UPLOAD_POST_IMAGE_SUCCESS","put","on","snapshot","error","child","getDownloadURL","url","UPLOAD_POST_IMAGE_FAIL"],"mappings":"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","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport {updatePostImage,uploadPostImage,createPostImage} from \"API/indexAPI\"\nimport { db,storage} from \"../../firebase\";\nimport _ from 'lodash'\nconst initialState = {\n  currentID:''\n};\nexport default function singlePostReducer (state = initialState, action) {\n    switch (action.type) {\n      case ACTIONS.CREATE_NEW_POST_IMAGE:{\n        createPostImage(action.payload).then(json => {\n          action.asyncDispatch(mainAction( ACTIONS.CREATE_NEW_POST_IMAGE_SUCCESS,json))\n        }).catch(err =>{\n          action.asyncDispatch(mainAction( ACTIONS.CREATE_NEW_POST_IMAGE_FAIL,err))\n        })\n        return state\n      }\n      case ACTIONS.CREATE_NEW_POST_IMAGE_SUCCESS:{\n        let stateCopy = _.cloneDeep(state)\n        action.asyncDispatch(mainAction(ACTIONS.LOAD_POST,stateCopy.ID))\n        return state\n      }\n      case ACTIONS.CREATE_NEW_POST_IMAGE_FAIL:{\n        return state\n      }\n      case ACTIONS.CREATE_NEW_POST: {\n        let stateCopy = _.cloneDeep(action.payload)\n      \n        db.collection(\"posts\")\n          .add(stateCopy)\n          .then(function(docRef){\n            console.log(docRef)\n            stateCopy._id = docRef.id\n            action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_POST_SUCCESS,stateCopy))\n          });\n        return stateCopy\n      }\n      case ACTIONS.CREATE_NEW_POST_SUCCESS: {\n        return action.payload\n      }\n      case ACTIONS.CREATE_NEW_POST_FAIL: {\n        return state\n      }\n      case ACTIONS.DELETE_POST:{\n\n         db.collection(\"posts\")\n         .where('ID','==',action.payload)\n          .get()\n          .then((querySnapshot) => {\n            querySnapshot.forEach((doc)=> doc.ref.delete())\n            action.asyncDispatch(mainAction(ACTIONS.DELETE_POST_SUCCESS,[]))\n          });\n        return state\n      }  \n      case ACTIONS.DELETE_POST_SUCCESS:{\n        action.asyncDispatch(mainAction(ACTIONS.LOAD_DASHBOARD_POSTS,[]))\n        return state\n      }  \n      case ACTIONS.DELETE_POST_FAIL:{\n        return action.payload\n      }  \n      case ACTIONS.DELETE_POST_IMAGE:{\n        console.log(action)\n        db.collection(\"postimages\")\n        .where('albumID','==',action.payload.ID)\n         .get()\n         .then((querySnapshot) => {\n           querySnapshot.forEach((doc)=> doc.ref.delete())\n           action.asyncDispatch(mainAction(ACTIONS.DELETE_POST_IMAGE_SUCCESS,action.payload))\n         });\n        return state\n      }  \n      case ACTIONS.DELETE_POST_IMAGE_SUCCESS:{\n\n        let postImageRef = storage.ref('images/posts/'+action.payload.name)\n        postImageRef.delete().then(()=>console.log(\"file deleted\"));\n        action.asyncDispatch(mainAction(ACTIONS.LOAD_POST,action.payload.ID))\n        return state\n      }  \n      case ACTIONS.DELETE_POST_IMAGE_FAIL:{\n        \n        return action.payload\n      }  \n      case ACTIONS.LOAD_ARTICLE:{\n        return action.payload\n      }\n      case ACTIONS.LOAD_POST: {\n        let post_id = ''\n\n        //////====>\n        db.collection(\"posts\")\n        //.where(\"ID\",'==',action.payload)\n        .where(\"ID\",'==',action.payload)\n         .get()\n         .then(querySnapshot => {\n           const data = querySnapshot.docs.map(doc => {\n            post_id=doc.id\n            return doc.data()}); \n\n            let stateCopy = _.cloneDeep(data)\n            if(stateCopy[0])\n            stateCopy[0]._id = post_id\n            let _id = ''\n            action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_SUCCESS,stateCopy))\n             //=======================================================\n\n                  db.collection(\"postimages\")\n                  .where(\"albumID\",'==',action.payload)\n                  .get()\n                  .then(snapshotChanges => {\n                    \n                      const data = snapshotChanges.docs.map(doc => {\n                        _id=doc.id\n                        return doc.data()});\n                      \n                      stateCopy.map((post,i)=>{\n                    //    data[0]._id =  _id\n                      return stateCopy[i].image = data\n                    })\n                    if (snapshotChanges.size > 0) \n                    action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_SUCCESS,stateCopy))\n                   // action.asyncDispatch(mainAction(ACTIONS.LOAD_POST_FAIL,{error:\"could not find this record\"}))\n                  });\n\n              //========================================================\n\n         });\n          //////====>\n        return state\n      }\n      case  ACTIONS.LOAD_POST_SUCCESS:{\n        \n        return {state,...action.payload[0]}\n      }\n      case  ACTIONS.LOAD_POST_FAIL:{\n        return state\n      }\n      case ACTIONS.UPDATE_POST:{\n\n        db.collection(\"posts\").doc(action.payload._id)\n        .update(action.payload).then(()=>{\n          action.asyncDispatch(mainAction(ACTIONS.UPDATE_POST_SUCCESS,action.payload))\n        });\n        return state\n      }\n      case ACTIONS.UPDATE_POST_SUCCESS:{\n        let stateCopy = _.cloneDeep(state)\n        action.asyncDispatch(mainAction(ACTIONS.LOAD_POST,stateCopy.ID))\n        return {state,...action.payload}\n      }\n      case ACTIONS.UPDATE_POST_FAIL:{\n        return state\n      }\n      case ACTIONS.UPLOAD_IMAGE:{\n        let stateCopy = _.cloneDeep(action.payload)\n         let image = stateCopy.image\n         uploadPostImage(image).then((json)=>{\n\n          if(json.status!==404 || json.status!==500) {\n            action.asyncDispatch(mainAction(ACTIONS.UPLOAD_IMAGE_SUCCESS,{submitted:stateCopy,json}))\n          } else {\n            action.asyncDispatch(mainAction(ACTIONS.UPLOAD_IMAGE_FAIL,json.response.message))\n          }\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.UPLOAD_IMAGE_FAIL,err)))\n      \n        return state\n      }\n      case ACTIONS.UPLOAD_IMAGE_SUCCESS:{\n          let stateCopy = _.cloneDeep(state)\n          \n          let newImage = {\n            _id:action.payload.submitted._id,\n            albumID:action.payload.submitted.albumID,\n            caption:action.payload.submitted.caption,\n            cover:action.payload.submitted.cover,\n            imageName:action.payload.json.data.filename,\n            updatedAt:Date.now()\n          }\n          stateCopy.currentID = action.payload.submitted.albumID\n          action.asyncDispatch(mainAction( ACTIONS.UPDATE_POST_IMAGE,newImage))\n        return stateCopy\n      }\n      case ACTIONS.UPLOAD_IMAGE_FAIL:{\n        return state\n      }\n      case ACTIONS.UPDATE_POST_IMAGE:{\n        \n        updatePostImage(action.payload).then(json => {\n          action.asyncDispatch(mainAction( ACTIONS.UPDATE_POST_IMAGE_SUCCESS,json))\n        }).catch(err =>{\n          action.asyncDispatch(mainAction( ACTIONS.UPDATE_POST_IMAGE_FAIL,err))\n        })\n        return state\n      }\n      case ACTIONS.UPDATE_POST_IMAGE_SUCCESS:{\n        let stateCopy = _.cloneDeep(state)\n        action.asyncDispatch(mainAction(ACTIONS.LOAD_POST,stateCopy.ID))\n        return state\n      }\n      case ACTIONS.UPDATE_POST_IMAGE_FAIL:{\n        return state\n      }\n      case ACTIONS.UPLOAD_POST_IMAGE:{\n        let image = {\n          albumID: action.payload.albumID,\n          caption: action.payload.caption ? action.payload.caption:\"\",\n          cover: action.payload.cover,\n          imageName:action.payload.image.name\n        }\n      db.collection(\"postimages\")\n       .doc()\n       .set(image)\n       .then(() => {\n         action.asyncDispatch(mainAction(ACTIONS.UPLOAD_POST_IMAGE_SUCCESS,action.payload))\n       });\n       \n       return state\n     }\n      case ACTIONS.UPLOAD_POST_IMAGE_SUCCESS:{\n        let postImageRef = storage.ref('posts/'+action.payload.image.name).put(action.payload.image);\n        postImageRef.on('state_changed',(snapshot)=>{\n          //progress function\n        },(error)=>{\n          //error\n          console.log(error)\n        },()=>{\n          //complete\n          storage.ref('posts/').child(action.payload.image.name).getDownloadURL().then(url=>{\n            console.log(action,url)\n            action.asyncDispatch(mainAction(ACTIONS.LOAD_POST,action.payload.albumID))\n          })\n        })\n        return state\n      }\n      case ACTIONS.UPLOAD_POST_IMAGE_FAIL:{\n        return state\n      }\n      default: \n        return state\n       \n    }\n  }//No. 5 JPEG.jpg"]},"metadata":{},"sourceType":"module"}