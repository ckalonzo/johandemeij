{"ast":null,"code":"import _objectSpread from\"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";import{db}from\"../../firebase\";var initialState={};export default function concertInformationReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.SUBMIT_CONCERT_INFORMATION:{var stateCopy=action.payload;db.collection(\"concertinformation\").add(stateCopy).then(function(docRef){console.log(docRef);stateCopy._id=docRef.id;action.asyncDispatch(mainAction(ACTIONS.SUBMIT_CONCERT_INFORMATION_SUCCESS,{status:\"success\"}));});return state;}case ACTIONS.SUBMIT_CONCERT_INFORMATION_SUCCESS:{return action.payload;}case ACTIONS.SUBMIT_CONCERT_INFORMATION_FAIL:{return state;}case ACTIONS.LOAD_SUBMISSIONS:{db.collection(\"concertinformation\").get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){doc.data();});console.log(data);action.asyncDispatch(mainAction(ACTIONS.LOAD_SUBMISSIONS_SUCCESS,data));});return state;}case ACTIONS.LOAD_SUBMISSIONS_SUCCESS:{return action.payload;}case ACTIONS.LOAD_SUBMISSIONS_FAIL:{return state;}default:return _objectSpread({},state);}}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/concertInfomation.reducer.js"],"names":["ACTIONS","mainAction","db","initialState","concertInformationReducer","state","action","type","SUBMIT_CONCERT_INFORMATION","stateCopy","payload","collection","add","then","docRef","console","log","_id","id","asyncDispatch","SUBMIT_CONCERT_INFORMATION_SUCCESS","status","SUBMIT_CONCERT_INFORMATION_FAIL","LOAD_SUBMISSIONS","get","querySnapshot","data","docs","map","doc","LOAD_SUBMISSIONS_SUCCESS","LOAD_SUBMISSIONS_FAIL"],"mappings":"gLAAA,OAASA,OAAT,KAAwB,wBAAxB,CACA,OAASC,UAAT,KAA2B,6BAA3B,CACA,OAASC,EAAT,KAAmB,gBAAnB,CACA,GAAMC,CAAAA,YAAY,CAAG,EAArB,CACA,cAAe,SAASC,CAAAA,yBAAT,EAAkE,IAA9BC,CAAAA,KAA8B,2DAAtBF,YAAsB,IAARG,CAAAA,MAAQ,2CAC7E,OAAQA,MAAM,CAACC,IAAf,EAEE,IAAKP,CAAAA,OAAO,CAACQ,0BAAb,CAAyC,CAC1C,GAAIC,CAAAA,SAAS,CAAGH,MAAM,CAACI,OAAvB,CACCR,EAAE,CAACS,UAAH,CAAc,oBAAd,EACCC,GADD,CACKH,SADL,EAECI,IAFD,CAEM,SAASC,MAAT,CAAgB,CACpBC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACAL,SAAS,CAACQ,GAAV,CAAgBH,MAAM,CAACI,EAAvB,CACAZ,MAAM,CAACa,aAAP,CAAqBlB,UAAU,CAACD,OAAO,CAACoB,kCAAT,CAA4C,CAACC,MAAM,CAAC,SAAR,CAA5C,CAA/B,EACD,CAND,EAOE,MAAOhB,CAAAA,KAAP,CACD,CACD,IAAKL,CAAAA,OAAO,CAACoB,kCAAb,CAAiD,CAE/C,MAAOd,CAAAA,MAAM,CAACI,OAAd,CACD,CACD,IAAKV,CAAAA,OAAO,CAACsB,+BAAb,CAA8C,CAE5C,MAAOjB,CAAAA,KAAP,CACD,CACD,IAAKL,CAAAA,OAAO,CAACuB,gBAAb,CAA+B,CAEjCrB,EAAE,CAACS,UAAH,CAAc,oBAAd,EACEa,GADF,GAEEX,IAFF,CAEO,SAAAY,aAAa,CAAI,CACrB,GAAMC,CAAAA,IAAI,CAAGD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAuB,SAAAC,GAAG,CAAI,CAACA,GAAG,CAACH,IAAJ,GAAW,CAA1C,CAAb,CACAX,OAAO,CAACC,GAAR,CAAYU,IAAZ,EACCpB,MAAM,CAACa,aAAP,CAAqBlB,UAAU,CAACD,OAAO,CAAC8B,wBAAT,CAAkCJ,IAAlC,CAA/B,EACF,CANF,EAQI,MAAOrB,CAAAA,KAAP,CACD,CACD,IAAKL,CAAAA,OAAO,CAAC8B,wBAAb,CAAuC,CAErC,MAAOxB,CAAAA,MAAM,CAACI,OAAd,CACD,CACD,IAAKV,CAAAA,OAAO,CAAC+B,qBAAb,CAAoC,CAElC,MAAO1B,CAAAA,KAAP,CACD,CAED,QACE,wBACKA,KADL,EA3CJ,CA+CD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { db } from \"../../firebase\";\nconst initialState = {};\nexport default function concertInformationReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.SUBMIT_CONCERT_INFORMATION: {\n     let stateCopy = action.payload\n      db.collection(\"concertinformation\")\n      .add(stateCopy)\n      .then(function(docRef){\n        console.log(docRef)\n        stateCopy._id = docRef.id\n        action.asyncDispatch(mainAction(ACTIONS.SUBMIT_CONCERT_INFORMATION_SUCCESS,{status:\"success\"}))\n      });\n        return state\n      }\n      case ACTIONS.SUBMIT_CONCERT_INFORMATION_SUCCESS: {\n\n        return action.payload\n      }\n      case ACTIONS.SUBMIT_CONCERT_INFORMATION_FAIL: {\n\n        return state\n      }\n      case ACTIONS.LOAD_SUBMISSIONS: {\n\n    db.collection(\"concertinformation\")\n     .get()\n     .then(querySnapshot => {\n       const data = querySnapshot.docs.map(doc => {doc.data()}); \n       console.log(data)\n        action.asyncDispatch(mainAction(ACTIONS.LOAD_SUBMISSIONS_SUCCESS,data))\n     });\n\n        return state\n      }\n      case ACTIONS.LOAD_SUBMISSIONS_SUCCESS: {\n\n        return action.payload\n      }\n      case ACTIONS.LOAD_SUBMISSIONS_FAIL: {\n\n        return state\n      }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}