{"ast":null,"code":"import { ACTIONS } from 'redux/actions/types.js';\nimport { mainAction } from \"redux/actions/index.actions\";\nimport _ from \"lodash\";\nconst initialState = {\n  agendas: [],\n  agendaTotal: ''\n};\nexport default function agendaReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.LOAD_CD_AGENDA:\n      {\n        let stateCopy = _.cloneDeep(state);\n\n        fetch('http://localhost:3001/api/loadAgendas').then(data => data.json()).then(res => {\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_CD_AGENDA_SUCCESS, res.data));\n          stateCopy.agendaTotal = res.data.length;\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_CD_AGENDA_FAIL, err)));\n        return stateCopy;\n      }\n\n    case ACTIONS.LOAD_CD_AGENDA_SUCCESS:\n      {\n        let stateCopy = state;\n\n        _.orderBy(action.payload, ['year', 'month', 'day'], ['desc', 'desc', 'desc']).map((agenda, index) => {\n          if (index <= 10) return stateCopy.push(agenda);\n        });\n\n        return stateCopy;\n      }\n\n    case ACTIONS.LOAD_CD_AGENDA_FAIL:\n      {\n        return state;\n      }\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johandemeij-master/johan-app/src/redux/reducers/agenda.reducer.js"],"names":["ACTIONS","mainAction","_","initialState","agendas","agendaTotal","agendaReducer","state","action","type","LOAD_CD_AGENDA","stateCopy","cloneDeep","fetch","then","data","json","res","asyncDispatch","LOAD_CD_AGENDA_SUCCESS","length","catch","err","LOAD_CD_AGENDA_FAIL","orderBy","payload","map","agenda","index","push"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAC,EADW;AAEnBC,EAAAA,WAAW,EAAC;AAFO,CAArB;AAIA,eAAe,SAASC,aAAT,CAAwBC,KAAK,GAAGJ,YAAhC,EAA8CK,MAA9C,EAAsD;AACjE,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKT,OAAO,CAACU,cAAb;AAA6B;AAC3B,YAAIC,SAAS,GAAGT,CAAC,CAACU,SAAF,CAAYL,KAAZ,CAAhB;;AACDM,QAAAA,KAAK,CAAC,uCAAD,CAAL,CACEC,IADF,CACQC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADjB,EAEEF,IAFF,CAEQG,GAAD,IAAS;AACbT,UAAAA,MAAM,CAACU,aAAP,CAAqBjB,UAAU,CAACD,OAAO,CAACmB,sBAAT,EAAgCF,GAAG,CAACF,IAApC,CAA/B;AACAJ,UAAAA,SAAS,CAACN,WAAV,GAAwBY,GAAG,CAACF,IAAJ,CAASK,MAAjC;AACD,SALF,EAKIC,KALJ,CAKUC,GAAG,IAAId,MAAM,CAACU,aAAP,CAAqBjB,UAAU,CAACD,OAAO,CAACuB,mBAAT,EAA6BD,GAA7B,CAA/B,CALjB;AAOC,eAAOX,SAAP;AACD;;AACD,SAAKX,OAAO,CAACmB,sBAAb;AAAqC;AACpC,YAAIR,SAAS,GAAGJ,KAAhB;;AAEAL,QAAAA,CAAC,CAACsB,OAAF,CAAUhB,MAAM,CAACiB,OAAjB,EAAyB,CAAC,MAAD,EAAQ,OAAR,EAAgB,KAAhB,CAAzB,EAAgD,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf,CAAhD,EAAwEC,GAAxE,CAA4E,CAACC,MAAD,EAAQC,KAAR,KAAgB;AAC1F,cAAGA,KAAK,IAAI,EAAZ,EACA,OAAOjB,SAAS,CAACkB,IAAV,CAAeF,MAAf,CAAP;AACD,SAHD;;AAKC,eAAOhB,SAAP;AACD;;AACD,SAAKX,OAAO,CAACuB,mBAAb;AAAkC;AAEhC,eAAOhB,KAAP;AACD;;AAED;AACE,aAAO,EACL,GAAGA;AADE,OAAP;AA7BJ;AAiCD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport _ from \"lodash\"\nconst initialState = {\n  agendas:[],\n  agendaTotal:''\n};\nexport default function agendaReducer (state = initialState, action) {\n    switch (action.type) {\n      \n      case ACTIONS.LOAD_CD_AGENDA: {\n        let stateCopy = _.cloneDeep(state)\n       fetch('http://localhost:3001/api/loadAgendas')\n        .then((data) => data.json())\n        .then((res) => {\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_CD_AGENDA_SUCCESS,res.data))\n          stateCopy.agendaTotal = res.data.length\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_CD_AGENDA_FAIL,err)))\n        \n        return stateCopy\n      }\n      case ACTIONS.LOAD_CD_AGENDA_SUCCESS: {\n       let stateCopy = state\n\n       _.orderBy(action.payload,['year','month','day'],['desc','desc','desc']).map((agenda,index)=>{\n         if(index <= 10)\n         return stateCopy.push(agenda)\n       })\n      \n        return stateCopy\n      }\n      case ACTIONS.LOAD_CD_AGENDA_FAIL: {\n\n        return state\n      }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}