{"ast":null,"code":"import _objectSpread from\"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";import{db}from\"../../firebase\";var initialState={};export default function cdInfoReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.LOAD_CD_INFO:{var stateCopy='';//=======================================================\ndb.collection(\"cd_info\").where(\"cdId\",\"==\",action.payload).get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){return doc.data();});stateCopy=data;//=======================================================\ndb.collection(\"presentations\").get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){return doc.data();});stateCopy.map(function(post,i){console.log(data.filter(function(track){return track.id===stateCopy[i].track_title;}).map(function(title){return title.cdName;}));return stateCopy[i].title=_objectSpread({},data.filter(function(track){return track.id===stateCopy[i].track_title;}).map(function(title){return title.cdName;}));});action.asyncDispatch(mainAction(ACTIONS.LOAD_CD_INFO_SUCCESS,stateCopy));});//========================================================\n});return state;}case ACTIONS.LOAD_CD_INFO_SUCCESS:{return action.payload;}case ACTIONS.LOAD_CD_INFO_FAIL:{return state;}default:return _objectSpread({},state);}}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/cdInfo.reducer.js"],"names":["ACTIONS","mainAction","db","initialState","cdInfoReducer","state","action","type","LOAD_CD_INFO","stateCopy","collection","where","payload","get","then","querySnapshot","data","docs","map","doc","post","i","console","log","filter","track","id","track_title","title","cdName","asyncDispatch","LOAD_CD_INFO_SUCCESS","LOAD_CD_INFO_FAIL"],"mappings":"gLAAA,OAASA,OAAT,KAAwB,wBAAxB,CACA,OAASC,UAAT,KAA2B,6BAA3B,CACA,OAASC,EAAT,KAAmB,gBAAnB,CACA,GAAMC,CAAAA,YAAY,CAAG,EAArB,CACA,cAAe,SAASC,CAAAA,aAAT,EAAsD,IAA9BC,CAAAA,KAA8B,2DAAtBF,YAAsB,IAARG,CAAAA,MAAQ,2CACjE,OAAQA,MAAM,CAACC,IAAf,EAEE,IAAKP,CAAAA,OAAO,CAACQ,YAAb,CAA2B,CAEzB,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CACA;AACAP,EAAE,CAACQ,UAAH,CAAc,SAAd,EACCC,KADD,CACO,MADP,CACc,IADd,CACmBL,MAAM,CAACM,OAD1B,EAEAC,GAFA,GAGAC,IAHA,CAGK,SAAAC,aAAa,CAAI,CACrB,GAAMC,CAAAA,IAAI,CAAGD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAuB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACH,IAAJ,EAAJ,EAA1B,CAAb,CACAP,SAAS,CAAGO,IAAZ,CAEA;AACEd,EAAE,CAACQ,UAAH,CAAc,eAAd,EACCG,GADD,GAECC,IAFD,CAEM,SAAAC,aAAa,CAAI,CACrB,GAAMC,CAAAA,IAAI,CAAGD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAuB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACH,IAAJ,EAAJ,EAA1B,CAAb,CAEAP,SAAS,CAACS,GAAV,CAAc,SAACE,IAAD,CAAMC,CAAN,CAAU,CAEvBC,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACQ,MAAL,CAAY,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,EAAN,GAAajB,SAAS,CAACY,CAAD,CAAT,CAAaM,WAA9B,EAAjB,EAA4DT,GAA5D,CAAgE,SAAAU,KAAK,QAAEA,CAAAA,KAAK,CAACC,MAAR,EAArE,CAAZ,EACD,MAAOpB,CAAAA,SAAS,CAACY,CAAD,CAAT,CAAaO,KAAb,kBAAyBZ,IAAI,CAACQ,MAAL,CAAY,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,EAAN,GAAajB,SAAS,CAACY,CAAD,CAAT,CAAaM,WAA9B,EAAjB,EAA4DT,GAA5D,CAAgE,SAAAU,KAAK,QAAEA,CAAAA,KAAK,CAACC,MAAR,EAArE,CAAzB,CAAP,CACC,CAJD,EAKAvB,MAAM,CAACwB,aAAP,CAAqB7B,UAAU,CAACD,OAAO,CAAC+B,oBAAT,CAA8BtB,SAA9B,CAA/B,EACD,CAXD,EAYF;AACD,CArBA,EAyBA,MAAOJ,CAAAA,KAAP,CACD,CACD,IAAKL,CAAAA,OAAO,CAAC+B,oBAAb,CAAmC,CAEjC,MAAOzB,CAAAA,MAAM,CAACM,OAAd,CACD,CACD,IAAKZ,CAAAA,OAAO,CAACgC,iBAAb,CAAgC,CAE9B,MAAO3B,CAAAA,KAAP,CACD,CAED,QACE,wBACKA,KADL,EA3CJ,CA+CD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { db } from \"../../firebase\";\nconst initialState = {};\nexport default function cdInfoReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_CD_INFO: {\n\n        let stateCopy = ''\n        //=======================================================\n        db.collection(\"cd_info\")\n        .where(\"cdId\",\"==\",action.payload)\n       .get()\n       .then(querySnapshot => {\n         const data = querySnapshot.docs.map(doc => doc.data());\n         stateCopy = data;\n       \n         //=======================================================\n           db.collection(\"presentations\")\n           .get()\n           .then(querySnapshot => {\n             const data = querySnapshot.docs.map(doc => doc.data());\n\n             stateCopy.map((post,i)=>{\n              \n              console.log(data.filter(track => track.id === stateCopy[i].track_title).map(title=>title.cdName))\n             return stateCopy[i].title = {...data.filter(track => track.id === stateCopy[i].track_title).map(title=>title.cdName)}\n             })\n             action.asyncDispatch(mainAction(ACTIONS.LOAD_CD_INFO_SUCCESS,stateCopy))\n           });\n         //========================================================\n       });\n\n\n\n        return state\n      }\n      case ACTIONS.LOAD_CD_INFO_SUCCESS: {\n        \n        return action.payload\n      }\n      case ACTIONS.LOAD_CD_INFO_FAIL: {\n\n        return state\n      }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}