{"ast":null,"code":"import { ACTIONS } from 'redux/actions/types.js';\nimport { mainAction } from \"redux/actions/index.actions\";\nimport _ from \"lodash\";\nconst initialState = {};\nexport default function headerReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.LOAD_HEADER:\n      {\n        action.asyncDispatch(mainAction(ACTIONS.LOAD_HEADER_SUCCESS, Object.keys(action.payload).length > 0 ? action.payload : \"home\"));\n        return state;\n      }\n\n    case ACTIONS.LOAD_HEADER_SUCCESS:\n      {\n        let stateCopy = _.cloneDeep(state);\n\n        stateCopy.name = action.payload;\n        return stateCopy;\n      }\n\n    case ACTIONS.LOAD_HEADER_FAIL:\n      {\n        return state;\n      }\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/Websites/johandemeij/johan-app/src/redux/reducers/header.reducer.js"],"names":["ACTIONS","mainAction","_","initialState","headerReducer","state","action","type","LOAD_HEADER","asyncDispatch","LOAD_HEADER_SUCCESS","Object","keys","payload","length","stateCopy","cloneDeep","name","LOAD_HEADER_FAIL"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,MAAMC,YAAY,GAAG,EAArB;AAGA,eAAe,SAASC,aAAT,CAAwBC,KAAK,GAAGF,YAAhC,EAA8CG,MAA9C,EAAsD;AACjE,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKP,OAAO,CAACQ,WAAb;AAA0B;AACzBF,QAAAA,MAAM,CAACG,aAAP,CAAqBR,UAAU,CAACD,OAAO,CAACU,mBAAT,EAA6BC,MAAM,CAACC,IAAP,CAAYN,MAAM,CAACO,OAAnB,EAA4BC,MAA5B,GAAqC,CAArC,GAAyCR,MAAM,CAACO,OAAhD,GAA0D,MAAvF,CAA/B;AACC,eAAOR,KAAP;AACD;;AACD,SAAML,OAAO,CAACU,mBAAd;AAAmC;AACnC,YAAIK,SAAS,GAAGb,CAAC,CAACc,SAAF,CAAYX,KAAZ,CAAhB;;AACAU,QAAAA,SAAS,CAACE,IAAV,GAAiBX,MAAM,CAACO,OAAxB;AACE,eAAOE,SAAP;AACD;;AACD,SAAMf,OAAO,CAACkB,gBAAd;AAAgC;AAE9B,eAAOb,KAAP;AACD;;AAED;AACE,aAAO,EACL,GAAGA;AADE,OAAP;AAjBJ;AAqBD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport _ from \"lodash\"\nconst initialState = {\n   \n};\nexport default function headerReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_HEADER: {\n       action.asyncDispatch(mainAction(ACTIONS.LOAD_HEADER_SUCCESS,Object.keys(action.payload).length > 0 ? action.payload : \"home\"))\n        return state\n      }\n      case  ACTIONS.LOAD_HEADER_SUCCESS: {\n      let stateCopy = _.cloneDeep(state)\n      stateCopy.name = action.payload\n        return stateCopy\n      }\n      case  ACTIONS.LOAD_HEADER_FAIL: {\n\n        return state\n      }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}