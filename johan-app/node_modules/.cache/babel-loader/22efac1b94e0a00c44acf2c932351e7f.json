{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/websites/johandemeij-master/johan-app/src/components/dashboard/EditPost.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Form, Container, Row, Col, Button } from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport SideNav from \"components/dashboard/SideNav\";\nimport { mainAction } from \"redux/actions/index.actions\";\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst EditPost = props => {\n  const {\n    _id,\n    ID,\n    postTitle,\n    postDate,\n    postContent,\n    showPost\n  } = props.post;\n  const [postStatus, setPostStatus] = useState(showPost);\n  const [title, setTitle] = useState(postTitle);\n  const [date, setDate] = useState(postDate);\n  const [content, setContent] = useState(postContent);\n  const [validated, setValidated] = useState(false);\n  const [selectedFile, setSelectedFile] = useState();\n  const [uploadStatus, setUploadStatus] = useState(false);\n  const [file, setFile] = useState();\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `Johan De Meij | Edit Post`;\n    props.actions.mainAction(ACTIONS.LOAD_POST_IMAGES, []); //if(props.postImages)\n\n    let image = Object.values(props.postImages).filter(postImage => postImage.albumID === ID);\n    props.actions.mainAction(ACTIONS.LOAD_POST_IMAGE, {\n      image,\n      ID\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let newsItem = {\n      _id,\n      ID,\n      showPost: postStatus,\n      title,\n      date,\n      content\n    };\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n\n    setValidated(true);\n    props.actions.mainAction(ACTIONS.UPDATE_POST, newsItem);\n  };\n\n  const renderPostImage = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n      lg: {\n        span: 3\n      },\n      className: \"post-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `/images/posts/${props.postImage.imageName} `,\n      onClick: e => selecteImageToUpload(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      lg: {\n        span: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }\n    }, props.postImage.caption ? props.postImage.caption : \"no-caption\"));\n  };\n\n  const handleImageSubmit = e => {};\n\n  const uploadImage = () => {\n    props.actions.mainAction(ACTIONS.UPLOAD_IMAGE, file);\n    setUploadStatus(true);\n  };\n\n  const onChangeHandler = e => {\n    setSelectedFile(window.URL.createObjectURL(e.targetfiles[0]));\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const renderUploadButtons = () => {\n    if (selectedFile && !uploadStatus) return /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: () => uploadImage(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }\n    }, \"upload\");\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: e => selecteImageToUpload(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 12\n      }\n    }, \"change image\");\n  };\n\n  const selecteImageToUpload = e => {\n    document.querySelector('input#post-image').click();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SideNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: \"10\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    id: \"images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleImageSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, renderPostImage(), /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 3\n    }\n  }, renderUploadButtons(), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"post-image\",\n    onChange: e => onChangeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 45\n    }\n  }))))), /*#__PURE__*/React.createElement(\"section\", {\n    id: \"product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"showpost\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 31\n    }\n  }, \"Show Post\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    custom: true,\n    onChange: e => setPostStatus(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: postStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }, postStatus === true ? \"ON\" : \"OFF\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, \"ON\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, \"OFF\")))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: postTitle,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, \"Please provide a title.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: postDate,\n    onChange: e => setDate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, \"Please provide a product description.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, \"Looks good!\"))), /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CKEditor, {\n    editor: ClassicEditor,\n    data: content,\n    toolbar: ('heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote'),\n    onInit: editor => {\n      // You can store the \"editor\" and use when it is needed.\n      console.log('Editor is ready to use!', editor);\n    },\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      console.log({\n        event,\n        editor,\n        data\n      });\n      setContent(data);\n    },\n    onBlur: (event, editor) => {\n      const data = editor.getData();\n      console.log('Blur.', editor);\n      setContent(data);\n    },\n    onFocus: (event, editor) => {\n      console.log('Focus.', editor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, \"Update\")))))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    post: state.singlePostReducer,\n    posts: state.postsReducer,\n    postImages: state.postImagesReducer,\n    postImage: state.postImageReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      mainAction\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johandemeij-master/johan-app/src/components/dashboard/EditPost.jsx"],"names":["React","useEffect","useState","connect","bindActionCreators","Form","Container","Row","Col","Button","ACTIONS","SideNav","mainAction","CKEditor","ClassicEditor","EditPost","props","_id","ID","postTitle","postDate","postContent","showPost","post","postStatus","setPostStatus","title","setTitle","date","setDate","content","setContent","validated","setValidated","selectedFile","setSelectedFile","uploadStatus","setUploadStatus","file","setFile","document","actions","LOAD_POST_IMAGES","image","Object","values","postImages","filter","postImage","albumID","LOAD_POST_IMAGE","handleSubmit","event","preventDefault","newsItem","form","currentTarget","checkValidity","stopPropagation","UPDATE_POST","renderPostImage","span","imageName","e","selecteImageToUpload","caption","handleImageSubmit","uploadImage","UPLOAD_IMAGE","onChangeHandler","window","URL","createObjectURL","targetfiles","target","files","renderUploadButtons","querySelector","click","value","editor","console","log","data","getData","mapStateToProps","state","singlePostReducer","posts","postsReducer","postImagesReducer","postImageReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Form, Container, Row, Col, Button} from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport SideNav from \"components/dashboard/SideNav\";\nimport { mainAction } from \"redux/actions/index.actions\"\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nconst EditPost = props => {\n  const {_id,ID,postTitle,postDate,postContent,showPost} = props.post\n  const [postStatus, setPostStatus] = useState(showPost);\n  const [title, setTitle] = useState(postTitle);\n  const [date, setDate] = useState(postDate);\n  const [content, setContent] = useState(postContent);\n  const [validated, setValidated] = useState(false);\n  const [selectedFile,setSelectedFile] = useState()\n  const [uploadStatus,setUploadStatus] = useState(false)\n  const [file,setFile] = useState()\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `Johan De Meij | Edit Post`;\n    props.actions.mainAction(ACTIONS.LOAD_POST_IMAGES,[])\n    //if(props.postImages)\n    let image = Object.values(props.postImages).filter(postImage => postImage.albumID === ID)\n    props.actions.mainAction(ACTIONS.LOAD_POST_IMAGE,{image,ID})\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    let newsItem = {\n      _id,\n      ID,\n      showPost:postStatus,\n      title,\n      date,\n      content\n    }\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    }\n    setValidated(true);\n   props.actions.mainAction(ACTIONS.UPDATE_POST,newsItem)\n  };\n  const renderPostImage = () =>{      \n      return (\n        <>\n            <Col lg={{span:3}} className=\"post-image\">\n              <img src={`/images/posts/${props.postImage.imageName} `}  onClick={(e)=>selecteImageToUpload(e)} />\n            </Col>\n             <Col lg={{span:3}}>{props.postImage.caption ? props.postImage.caption:\"no-caption\"}</Col>\n        </>\n      )\n  }\n  const handleImageSubmit = (e) => {\n\n  }\n  const uploadImage = () => {\n    props.actions.mainAction(ACTIONS.UPLOAD_IMAGE,file)\n    setUploadStatus(true)\n  }\n  const onChangeHandler = (e) => {\n    setSelectedFile(window.URL.createObjectURL(e.targetfiles[0]))\n    setSelectedFile(e.target.files[0])\n  } \n\n  const renderUploadButtons = () => {\n    if(selectedFile && !uploadStatus)\n    return <Button variant=\"dark\" onClick={()=>uploadImage()}>upload</Button>\n    return <Button variant=\"primary\" onClick={(e)=>selecteImageToUpload(e)}>change image</Button>\n  }\n  const selecteImageToUpload = (e) => {\n    document.querySelector('input#post-image').click()\n  }\n  return (\n    <>\n      <Container>\n        <Row>\n          \n          <Col lg={{ span: 2 }}>\n              <SideNav />\n          </Col>\n          <Col lg={{span:\"10\" }}> \n          <section id=\"images\">\n          <Form noValidate validated={validated} onSubmit={handleImageSubmit}>\n            <Row>\n            {renderPostImage()}\n              \n  <Col lg={{span:3}}>{renderUploadButtons()}<input type=\"file\" id=\"post-image\" onChange={(e)=>onChangeHandler(e)}/></Col>\n            </Row>\n            </Form>\n          </section>\n            <section id=\"product\">\n              <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                <Form.Row>\n                            <Form.Group controlId=\"showpost\">\n                              <Form.Label>Show Post</Form.Label>\n                              <Form.Control\n                                as=\"select\"\n                                custom\n                                onChange={e => setPostStatus(e.target.value)}\n                              >\n                                <option value={postStatus}>{postStatus === true ? \"ON\":\"OFF\"}</option>\n                                <option value=\"true\">ON</option>\n                                <option value=\"false\">OFF</option>\n                              </Form.Control>\n                            </Form.Group>\n                          </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col}  controlId=\"title\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"\"\n                      defaultValue={postTitle}\n                      onChange={e => setTitle(e.target.value)}\n                      \n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a title.\n                      </Form.Control.Feedback>\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Form.Group>\n                  </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"date\">\n                    <Form.Label>Date</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"\"\n                      defaultValue={postDate}\n                      onChange={e => setDate(e.target.value)}\n                      \n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a product description.\n                      </Form.Control.Feedback>\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Form.Group>\n                  \n                </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"content\">\n                    <CKEditor\n                        editor={ ClassicEditor }\n                        data={content}\n                        toolbar= {'heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote' }\n                        onInit={ editor => {\n                            // You can store the \"editor\" and use when it is needed.\n                            console.log( 'Editor is ready to use!', editor );\n                        } }\n                        onChange={ ( event, editor ) => {\n                            const data = editor.getData();\n                            console.log( { event, editor, data } );\n                            setContent(data)\n                        } }\n                        onBlur={ ( event, editor ) => {\n                          const data = editor.getData();\n                            console.log( 'Blur.', editor );\n                            setContent(data)\n                        } }\n                        onFocus={ ( event, editor ) => {\n                            console.log( 'Focus.', editor );\n                        } }\n                    />\n                  </Form.Group>\n                  </Form.Row>\n                <Button type=\"submit\">Update</Button>\n              </Form> \n            </section>\n          </Col>\n        </Row> \n      </Container>\n    </>\n  );\n};\nfunction mapStateToProps(state) {\n  return {\n    post: state.singlePostReducer,\n    posts:state.postsReducer,\n    postImages:state.postImagesReducer,\n    postImage:state.postImageReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({mainAction}, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost);\n"]},"metadata":{},"sourceType":"module"}