{"ast":null,"code":"import _objectSpread from\"/Users/carlkalonzo/Documents/DEV/johandemeij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";import{db,storage}from\"../../firebase\";import _ from\"lodash\";var initialState={};export default function cdReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.CREATE_NEW_CD:{var stateCopy=_.cloneDeep(action.payload);console.log(action.payload);db.collection(\"cds\").add(stateCopy).then(function(docRef){stateCopy._id=docRef.id;db.collection(\"cds\").doc(docRef.id).update({_id:docRef.id}).then(function(){action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_CD_SUCCESS,stateCopy));});});return action.payload;}case ACTIONS.CREATE_NEW_CD_SUCCESS:{return action.payload;}case ACTIONS.CREATE_NEW_CD_FAIL:{return state;}case ACTIONS.DELETE_CD_IMAGE:{var image={},cd={};if(action.payload.cover===\"main\"){image={albumID:action.payload.albumID,cover:action.payload.cover?action.payload.cover:\"\",imageName:action.payload.image.name};}else{image={albumID:action.payload.albumID,caption:action.payload.caption?action.payload.caption:\"\",cover:action.payload.cover?action.payload.cover:\"\",imageName:action.payload.image.name};}if(action.payload.cover===\"frontCover\"){cd={frontCover:action.payload.image.name,frontCaption:action.payload.caption?action.payload.caption:\"\"};}else if(action.payload.cover===\"backCover\"){cd={backCover:action.payload.image.name,backCaption:action.payload.caption?action.payload.caption:\"\"};}else{cd={cdImage:action.payload.image.name};}db.collection(\"cds\").doc(action.payload.docId).update(cd).then(function(){db.collection(\"cds\").where('id','==',action.payload.ID).where('cover','==',action.payload.imageType).get().then(function(querySnapshot){console.log(querySnapshot.docs);querySnapshot.forEach(function(doc){console.log(doc.ref.id,doc.ref.parent,doc.ref.path);doc.ref.delete();});action.asyncDispatch(mainAction(ACTIONS.DELETE_CD_IMAGE_SUCCESS,action.payload));});});return state;}case ACTIONS.DELETE_CD_IMAGE_SUCCESS:{var postImageRef=storage.ref('posts/'+action.payload.name);postImageRef.delete().then(function(){return console.log(\"file deleted\");});action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION,action.payload.ID));return state;}case ACTIONS.DELETE_CD_IMAGE_FAIL:{return action.payload;}case ACTIONS.LOAD_CD:{var _stateCopy=_.cloneDeep(state);var _id='';db.collection(\"cds\").where(\"id\",\"==\",action.payload).get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){_id=doc.id;return doc.data();});_stateCopy=data;if(data)_stateCopy[0]._id=_id;action.asyncDispatch(mainAction(ACTIONS.LOAD_CD_SUCCESS,_stateCopy));});return state;}case ACTIONS.LOAD_CD_SUCCESS:{return action.payload.length>0?action.payload[0]:[];}case ACTIONS.LOAD_CD_FAIL:{return state;}case ACTIONS.UPDATE_CD:{db.collection(\"cds\").doc(action.payload._id).update(action.payload).then(function(){console.log(\"success\");action.asyncDispatch(mainAction(ACTIONS.UPDATE_CD_SUCCESS,action.payload));});return state;}case ACTIONS.UPDATE_CD_SUCCESS:{var _stateCopy2=_.cloneDeep(state);action.asyncDispatch(mainAction(ACTIONS.LOAD_CD,_stateCopy2.id));return _objectSpread({state:state},action.payload);}case ACTIONS.UPDATE_CD_FAIL:{return state;}case ACTIONS.UPDATE_CD_IMAGE:{// let stateCopy = _.cloneDeep(action.payload)\n//  let image = stateCopy.image\n//  updateCdImage(image).then((json)=>{\n//   if(json.status!==404 || json.status!==500) {\n//     action.asyncDispatch(mainAction(ACTIONS.UPDATE_CD_IMAGE_SUCCESS,{submitted:stateCopy,json}))\n//   } else {\n//     action.asyncDispatch(mainAction(ACTIONS.UPDATE_CD_IMAGE_FAIL,json.response.message))\n//   }\n// }).catch(err => action.asyncDispatch(mainAction(ACTIONS.UPDATE_CD_IMAGE_FAIL,err)))\nreturn state;}case ACTIONS.UPDATE_CD_IMAGE_SUCCESS:{var _stateCopy3=_.cloneDeep(state);var newImage={_id:action.payload.submitted._id,albumID:action.payload.submitted.albumID,caption:action.payload.submitted.caption,cover:action.payload.submitted.cover,imageName:action.payload.json.data.filename,updatedAt:Date.now()};_stateCopy3.currentID=action.payload.submitted.albumID;action.asyncDispatch(mainAction(ACTIONS.UPDATE_POST_IMAGE,newImage));return _stateCopy3;}case ACTIONS.UPDATE_CD_IMAGE_FAIL:{return state;}case ACTIONS.UPLOAD_CD_IMAGE:{var _image={},_cd={};if(action.payload.cover===\"main\"){_image={albumID:action.payload.albumID,cover:action.payload.cover?action.payload.cover:\"\",imageName:action.payload.image.name};}else{_image={albumID:action.payload.albumID,caption:action.payload.caption?action.payload.caption:\"\",cover:action.payload.cover?action.payload.cover:\"\",imageName:action.payload.image.name};}if(action.payload.cover===\"frontCover\"){_cd={frontCover:action.payload.image.name,frontCaption:action.payload.caption?action.payload.caption:\"\"};}else if(action.payload.cover===\"backCover\"){_cd={backCover:action.payload.image.name,backCaption:action.payload.caption?action.payload.caption:\"\"};}else{_cd={cdImage:action.payload.image.name};}db.collection(\"cds\").doc(action.payload.docId).update(_cd).then(function(){db.collection(\"postimages\").doc().set(_image).then(function(){action.asyncDispatch(mainAction(ACTIONS.UPLOAD_CD_IMAGE_SUCCESS,action.payload));});});action.asyncDispatch(mainAction(ACTIONS.UPLOAD_CD_IMAGE_SUCCESS,action.payload));return state;}case ACTIONS.UPLOAD_CD_IMAGE_SUCCESS:{var path='';if(action.payload.cover===\"main\"){path=\"music_catalogue/\";}else{path=\"posts/\";}var _postImageRef=storage.ref(path+action.payload.image.name).put(action.payload.image);_postImageRef.on('state_changed',function(snapshot){//progress function\n},function(error){//error\nconsole.log(error);},function(){//complete\nstorage.ref(path).child(action.payload.image.name).getDownloadURL().then(function(url){console.log(url);action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION,action.payload.albumID));});});return state;}case ACTIONS.UPLOAD_CD_IMAGE_FAIL:{return state;}case ACTIONS.UPDATE_CD_IMAGE:{console.log(action);var _image2='';if(action.submitted.cover===\"frontCover\"){_image2={frontCover:action.json.data.filename,frontCaption:action.submitted.caption};}else{_image2={backCover:action.json.data.filename,backCaption:action.submitted.caption};}action.asyncDispatch(mainAction(ACTIONS.UPDATE_CD,_image2));return state;}default:return _objectSpread({},state);}}","map":{"version":3,"sources":["/Users/carlkalonzo/Documents/DEV/johandemeij/johan-app/src/redux/reducers/cd.reducer.js"],"names":["ACTIONS","mainAction","db","storage","_","initialState","cdReducer","state","action","type","CREATE_NEW_CD","stateCopy","cloneDeep","payload","console","log","collection","add","then","docRef","_id","id","doc","update","asyncDispatch","CREATE_NEW_CD_SUCCESS","CREATE_NEW_CD_FAIL","DELETE_CD_IMAGE","image","cd","cover","albumID","imageName","name","caption","frontCover","frontCaption","backCover","backCaption","cdImage","docId","where","ID","imageType","get","querySnapshot","docs","forEach","ref","parent","path","delete","DELETE_CD_IMAGE_SUCCESS","postImageRef","LOAD_PRESENTATION","DELETE_CD_IMAGE_FAIL","LOAD_CD","data","map","LOAD_CD_SUCCESS","length","LOAD_CD_FAIL","UPDATE_CD","UPDATE_CD_SUCCESS","UPDATE_CD_FAIL","UPDATE_CD_IMAGE","UPDATE_CD_IMAGE_SUCCESS","newImage","submitted","json","filename","updatedAt","Date","now","currentID","UPDATE_POST_IMAGE","UPDATE_CD_IMAGE_FAIL","UPLOAD_CD_IMAGE","set","UPLOAD_CD_IMAGE_SUCCESS","put","on","snapshot","error","child","getDownloadURL","url","UPLOAD_CD_IMAGE_FAIL"],"mappings":"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","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { db,storage} from \"../../firebase\";\nimport  _ from \"lodash\"\nconst initialState = {};\nexport default function cdReducer (state = initialState, action) {\n    switch (action.type) {\n  \n        case ACTIONS.CREATE_NEW_CD: {\n        let stateCopy = _.cloneDeep(action.payload)\n        console.log(action.payload)\n          db.collection(\"cds\")\n          .add(stateCopy)\n          .then((docRef)=>{\n            stateCopy._id = docRef.id\n            db.collection(\"cds\")\n            .doc(docRef.id)\n            .update({_id:docRef.id}).then(()=>{\n              action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_CD_SUCCESS,stateCopy))\n            });\n           \n          });\n        return action.payload\n        }\n        case ACTIONS.CREATE_NEW_CD_SUCCESS: {\n        return action.payload\n        }\n        case ACTIONS.CREATE_NEW_CD_FAIL: {\n        return state\n        }\n        case ACTIONS.DELETE_CD_IMAGE:{\n          let image = {},\n          cd= {}\n      if(action.payload.cover === \"main\"){\n        image = {\n          albumID: action.payload.albumID,\n          cover: action.payload.cover ? action.payload.cover:\"\",\n          imageName:action.payload.image.name\n        }\n      } else {\n        image = {\n          albumID: action.payload.albumID,\n          caption: action.payload.caption ? action.payload.caption :\"\",\n          cover: action.payload.cover ? action.payload.cover:\"\",\n          imageName:action.payload.image.name\n        }\n      }\n\n\n      if(action.payload.cover === \"frontCover\"){\n       cd = {\n         frontCover : action.payload.image.name,\n         frontCaption:action.payload.caption ? action.payload.caption :\"\",\n       }\n      } else  if(action.payload.cover === \"backCover\"){\n        cd = {\n          backCover : action.payload.image.name,\n          backCaption:action.payload.caption ? action.payload.caption :\"\",\n        }\n      } else {\n        cd = {\n          cdImage : action.payload.image.name\n        }\n      }\n  \n         db.collection(\"cds\").doc(action.payload.docId)\n         .update(cd).then(()=>{   \n  \n            db.collection(\"cds\")\n            .where('id','==',action.payload.ID)\n            .where('cover','==',action.payload.imageType)\n             .get()\n             .then((querySnapshot) => {\n              console.log(querySnapshot.docs)\n              querySnapshot.forEach((doc)=>{\n                 console.log(doc.ref.id,doc.ref.parent,doc.ref.path)\n                 doc.ref.delete()\n                })\n              action.asyncDispatch(mainAction(ACTIONS.DELETE_CD_IMAGE_SUCCESS,action.payload))\n             });\n         });\n  \n          \n          return state\n        }  \n        case ACTIONS.DELETE_CD_IMAGE_SUCCESS:{\n          let postImageRef = storage.ref('posts/'+action.payload.name)\n          postImageRef.delete().then(()=>console.log(\"file deleted\"));\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION,action.payload.ID))\n          return state\n        }  \n        case ACTIONS.DELETE_CD_IMAGE_FAIL:{\n          \n          return action.payload\n        }  \n        case ACTIONS.LOAD_CD: {\n        let stateCopy = _.cloneDeep(state)\n        let _id = ''\n            db.collection(\"cds\")\n            .where(\"id\",\"==\",action.payload)\n            .get()\n            .then(querySnapshot => {\n              const data = querySnapshot.docs.map(doc =>{ \n                _id = doc.id\n               return  doc.data()});\n               stateCopy = data\n               if(data)\n               stateCopy[0]._id = _id\n              action.asyncDispatch(mainAction(ACTIONS.LOAD_CD_SUCCESS,stateCopy))\n            });\n            return state\n        }\n        case  ACTIONS.LOAD_CD_SUCCESS:{\n            \n            return action.payload.length > 0 ? action.payload[0]:[]\n        }\n        case  ACTIONS.LOAD_CD_FAIL:{\n            return state\n        }\n        case ACTIONS.UPDATE_CD:{\n          \n        db.collection(\"cds\").doc(action.payload._id)\n          .update(action.payload).then(()=>{\n            console.log(\"success\")\n          action.asyncDispatch(mainAction(ACTIONS.UPDATE_CD_SUCCESS,action.payload))\n        });\n        return state\n        }\n        case ACTIONS.UPDATE_CD_SUCCESS:{\n        let stateCopy = _.cloneDeep(state)\n        action.asyncDispatch(mainAction(ACTIONS.LOAD_CD,stateCopy.id))\n        return {state,...action.payload}\n        }\n        case ACTIONS.UPDATE_CD_FAIL:{\n        return state\n        }\n        case ACTIONS.UPDATE_CD_IMAGE:{\n            // let stateCopy = _.cloneDeep(action.payload)\n            //  let image = stateCopy.image\n            //  updateCdImage(image).then((json)=>{\n    \n            //   if(json.status!==404 || json.status!==500) {\n            //     action.asyncDispatch(mainAction(ACTIONS.UPDATE_CD_IMAGE_SUCCESS,{submitted:stateCopy,json}))\n            //   } else {\n            //     action.asyncDispatch(mainAction(ACTIONS.UPDATE_CD_IMAGE_FAIL,json.response.message))\n            //   }\n            // }).catch(err => action.asyncDispatch(mainAction(ACTIONS.UPDATE_CD_IMAGE_FAIL,err)))\n          \n            return state\n        }\n        case ACTIONS.UPDATE_CD_IMAGE_SUCCESS:{\n              let stateCopy = _.cloneDeep(state)\n              \n              let newImage = {\n                _id:action.payload.submitted._id,\n                albumID:action.payload.submitted.albumID,\n                caption:action.payload.submitted.caption,\n                cover:action.payload.submitted.cover,\n                imageName:action.payload.json.data.filename,\n                updatedAt:Date.now()\n              }\n              stateCopy.currentID = action.payload.submitted.albumID\n              action.asyncDispatch(mainAction( ACTIONS.UPDATE_POST_IMAGE,newImage))\n            return stateCopy\n        }\n        case ACTIONS.UPDATE_CD_IMAGE_FAIL:{\n            return state\n        }\n        case ACTIONS.UPLOAD_CD_IMAGE:{\n          let image = {},\n              cd= {}\n          if(action.payload.cover === \"main\"){\n            image = {\n              albumID: action.payload.albumID,\n              cover: action.payload.cover ? action.payload.cover:\"\",\n              imageName:action.payload.image.name\n            }\n          } else {\n            image = {\n              albumID: action.payload.albumID,\n              caption: action.payload.caption ? action.payload.caption :\"\",\n              cover: action.payload.cover ? action.payload.cover:\"\",\n              imageName:action.payload.image.name\n            }\n          }\n\n\n          if(action.payload.cover === \"frontCover\"){\n           cd = {\n             frontCover : action.payload.image.name,\n             frontCaption:action.payload.caption ? action.payload.caption :\"\",\n           }\n          } else  if(action.payload.cover === \"backCover\"){\n            cd = {\n              backCover : action.payload.image.name,\n              backCaption:action.payload.caption ? action.payload.caption :\"\",\n            }\n          } else {\n            cd = {\n              cdImage : action.payload.image.name\n            }\n          }\n        db.collection(\"cds\").doc(action.payload.docId)\n        .update(cd).then(()=>{   \n            db.collection(\"postimages\")\n            .doc()\n            .set(image)\n            .then(() => {\n              action.asyncDispatch(mainAction(ACTIONS.UPLOAD_CD_IMAGE_SUCCESS,action.payload))\n            });\n         });\n\n        action.asyncDispatch(mainAction(ACTIONS.UPLOAD_CD_IMAGE_SUCCESS,action.payload))\n          return state\n        }\n        case ACTIONS.UPLOAD_CD_IMAGE_SUCCESS:{\n          let path = ''\n          if(action.payload.cover === \"main\"){\n            path = \"music_catalogue/\"\n          } else {\n            path = \"posts/\"\n          }\n\n          let postImageRef = storage.ref(path+action.payload.image.name).put(action.payload.image);\n          postImageRef.on('state_changed',(snapshot)=>{\n            //progress function\n          },(error)=>{\n            //error\n            console.log(error)\n          },()=>{\n            //complete\n            storage.ref(path).child(action.payload.image.name).getDownloadURL().then(url=>{\n              console.log(url)\n              action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATION,action.payload.albumID))\n            })\n          })\n          return state\n        }\n        case ACTIONS.UPLOAD_CD_IMAGE_FAIL:{\n          return state\n        }\n        case ACTIONS.UPDATE_CD_IMAGE:{\n          console.log(action)\n          let image = ''\n          if(action.submitted.cover === \"frontCover\") {\n            image = {\n              frontCover:action.json.data.filename,\n              frontCaption:action.submitted.caption \n            }\n          } else {\n            image = {\n              backCover:action.json.data.filename,\n              backCaption:action.submitted.caption \n            }\n          }\n          action.asyncDispatch(mainAction( ACTIONS.UPDATE_CD,image))\n          return state\n        }\n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}