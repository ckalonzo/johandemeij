{"ast":null,"code":"import _objectSpread from\"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";import{updateEvent}from\"API/indexAPI\";import{db}from\"../../firebase\";import _ from'lodash';var initialState={};export default function eventsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.LOAD_EVENTS:{fetch('http://127.0.0.1:5021/api/loadEvents').then(function(data){return data.json();}).then(function(res){action.asyncDispatch(mainAction(ACTIONS.LOAD_EVENTS_SUCCESS,res.data));}).catch(function(err){return action.asyncDispatch(mainAction(ACTIONS.LOAD_EVENTS_FAIL,err));});return state;}case ACTIONS.LOAD_EVENTS_SUCCESS:{return action.payload;}case ACTIONS.LOAD_EVENTS_FAIL:{return state;}case ACTIONS.LOAD_EVENT:{db.collection(\"events\").where(\"id\",'==','53').get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){return doc.data();});action.asyncDispatch(mainAction(ACTIONS.LOAD_EVENT_SUCCESS,data));});return state;}case ACTIONS.LOAD_EVENT_SUCCESS:{return action.payload;}case ACTIONS.LOAD_EVENT_FAIL:{return state;}case ACTIONS.UPDATE_EVENT:{console.log(action);updateEvent(action.payload).then(function(json){console.log(json);action.asyncDispatch(mainAction(ACTIONS.UPDATE_EVENT_SUCCESS,json.data.data));}).catch(function(err){// action.asyncDispatch(mainAction(ACTIONS.UPDATE_EVENT_FAIL,err))\n});return state;}case ACTIONS.UPDATE_EVENT_SUCCESS:{return state;}case ACTIONS.UPDATE_EVENT_FAIL:{return state;}default:return _objectSpread({},state);}}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/events.reducer.js"],"names":["ACTIONS","mainAction","updateEvent","db","_","initialState","eventsReducer","state","action","type","LOAD_EVENTS","fetch","then","data","json","res","asyncDispatch","LOAD_EVENTS_SUCCESS","catch","err","LOAD_EVENTS_FAIL","payload","LOAD_EVENT","collection","where","get","querySnapshot","docs","map","doc","LOAD_EVENT_SUCCESS","LOAD_EVENT_FAIL","UPDATE_EVENT","console","log","UPDATE_EVENT_SUCCESS","UPDATE_EVENT_FAIL"],"mappings":"gLAAA,OAASA,OAAT,KAAwB,wBAAxB,CACA,OAASC,UAAT,KAA2B,6BAA3B,CACA,OAAQC,WAAR,KAA0B,cAA1B,CACA,OAASC,EAAT,KAAmB,gBAAnB,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CACA,GAAMC,CAAAA,YAAY,CAAG,EAArB,CACA,cAAe,SAASC,CAAAA,aAAT,EAAsD,IAA9BC,CAAAA,KAA8B,2DAAtBF,YAAsB,IAARG,CAAAA,MAAQ,2CACjE,OAAQA,MAAM,CAACC,IAAf,EAEE,IAAKT,CAAAA,OAAO,CAACU,WAAb,CAA0B,CACzBC,KAAK,CAAC,sCAAD,CAAL,CACEC,IADF,CACO,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,IAAL,EAAV,EADP,EAEEF,IAFF,CAEO,SAACG,GAAD,CAAS,CACbP,MAAM,CAACQ,aAAP,CAAqBf,UAAU,CAACD,OAAO,CAACiB,mBAAT,CAA6BF,GAAG,CAACF,IAAjC,CAA/B,EACD,CAJF,EAIIK,KAJJ,CAIU,SAAAC,GAAG,QAAIX,CAAAA,MAAM,CAACQ,aAAP,CAAqBf,UAAU,CAACD,OAAO,CAACoB,gBAAT,CAA0BD,GAA1B,CAA/B,CAAJ,EAJb,EAMC,MAAOZ,CAAAA,KAAP,CACD,CACD,IAAKP,CAAAA,OAAO,CAACiB,mBAAb,CAAkC,CAChC,MAAOT,CAAAA,MAAM,CAACa,OAAd,CACD,CACD,IAAKrB,CAAAA,OAAO,CAACoB,gBAAb,CAA+B,CAE7B,MAAOb,CAAAA,KAAP,CACD,CACD,IAAKP,CAAAA,OAAO,CAACsB,UAAb,CAAwB,CACtBnB,EAAE,CAACoB,UAAH,CAAc,QAAd,EACAC,KADA,CACM,IADN,CACW,IADX,CACgB,IADhB,EAECC,GAFD,GAGCb,IAHD,CAGM,SAAAc,aAAa,CAAI,CACrB,GAAMb,CAAAA,IAAI,CAAGa,aAAa,CAACC,IAAd,CAAmBC,GAAnB,CAAuB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAAChB,IAAJ,EAAJ,EAA1B,CAAb,CACAL,MAAM,CAACQ,aAAP,CAAqBf,UAAU,CAACD,OAAO,CAAC8B,kBAAT,CAA4BjB,IAA5B,CAA/B,EACD,CAND,EAQA,MAAON,CAAAA,KAAP,CACD,CACD,IAAKP,CAAAA,OAAO,CAAC8B,kBAAb,CAAgC,CAC9B,MAAOtB,CAAAA,MAAM,CAACa,OAAd,CACD,CACD,IAAKrB,CAAAA,OAAO,CAAC+B,eAAb,CAA6B,CAC3B,MAAOxB,CAAAA,KAAP,CACD,CACD,IAAKP,CAAAA,OAAO,CAACgC,YAAb,CAA2B,CACzBC,OAAO,CAACC,GAAR,CAAY1B,MAAZ,EACAN,WAAW,CAACM,MAAM,CAACa,OAAR,CAAX,CAA4BT,IAA5B,CAAiC,SAAAE,IAAI,CAAE,CACrCmB,OAAO,CAACC,GAAR,CAAYpB,IAAZ,EACAN,MAAM,CAACQ,aAAP,CAAqBf,UAAU,CAACD,OAAO,CAACmC,oBAAT,CAA8BrB,IAAI,CAACD,IAAL,CAAUA,IAAxC,CAA/B,EACD,CAHD,EAGGK,KAHH,CAGS,SAAAC,GAAG,CAAE,CACb;AACA,CALD,EAOA,MAAOZ,CAAAA,KAAP,CACD,CACD,IAAKP,CAAAA,OAAO,CAACmC,oBAAb,CAAmC,CACjC,MAAO5B,CAAAA,KAAP,CACD,CACD,IAAKP,CAAAA,OAAO,CAACoC,iBAAb,CAAgC,CAE9B,MAAO7B,CAAAA,KAAP,CACD,CAED,QACE,wBACKA,KADL,EAvDJ,CA2DD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport {updateEvent} from \"API/indexAPI\"\nimport { db } from \"../../firebase\";\nimport _ from 'lodash'\nconst initialState = {};\nexport default function eventsReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_EVENTS: {\n       fetch('http://127.0.0.1:5021/api/loadEvents')\n        .then((data) => data.json())\n        .then((res) => {\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_EVENTS_SUCCESS,res.data))\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_EVENTS_FAIL,err)))\n\n        return state\n      }\n      case ACTIONS.LOAD_EVENTS_SUCCESS: {\n        return action.payload\n      }\n      case ACTIONS.LOAD_EVENTS_FAIL: {\n\n        return state\n      }\n      case ACTIONS.LOAD_EVENT:{\n        db.collection(\"events\")\n       .where(\"id\",'==','53')\n        .get()\n        .then(querySnapshot => {\n          const data = querySnapshot.docs.map(doc => doc.data());\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_EVENT_SUCCESS,data))\n        });\n\n        return state\n      }\n      case ACTIONS.LOAD_EVENT_SUCCESS:{\n        return action.payload\n      }\n      case ACTIONS.LOAD_EVENT_FAIL:{\n        return state\n      }\n      case ACTIONS.UPDATE_EVENT: {\n        console.log(action)\n        updateEvent(action.payload).then(json=>{\n          console.log(json)\n          action.asyncDispatch(mainAction(ACTIONS.UPDATE_EVENT_SUCCESS,json.data.data))\n        }).catch(err=>{\n         // action.asyncDispatch(mainAction(ACTIONS.UPDATE_EVENT_FAIL,err))\n        })\n\n        return state\n      }\n      case ACTIONS.UPDATE_EVENT_SUCCESS: {\n        return state\n      }\n      case ACTIONS.UPDATE_EVENT_FAIL: {\n\n        return state\n      }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}