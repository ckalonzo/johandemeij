{"ast":null,"code":"import { ACTIONS } from 'redux/actions/types.js';\nimport { mainAction } from \"redux/actions/index.actions\";\nimport { db } from \"../../firebase\";\nconst initialState = {};\nexport default function orderReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.LOAD_ORDER_LOCATIONS:\n      {\n        //  fetch('http://127.0.0.1:5021/api/loadOrders')\n        //   .then((data) => data.json())\n        //   .then((res) => {\n        //     action.asyncDispatch(mainAction(ACTIONS.LOAD_ORDER_LOCATIONS_SUCCESS,res.data))\n        //   }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_ORDER_LOCATIONS_FAIL,err)))\n        db.collection(\"orders\").get().then(querySnapshot => {\n          const data = querySnapshot.docs.map(doc => doc.data());\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_ORDER_LOCATIONS_SUCCESS, data));\n        });\n        return state;\n      }\n\n    case ACTIONS.LOAD_ORDER_LOCATIONS_SUCCESS:\n      {\n        return action.payload;\n      }\n\n    case ACTIONS.LOAD_ORDER_LOCATIONS_FAIL:\n      {\n        return state;\n      }\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/orderLocations.reducer.js"],"names":["ACTIONS","mainAction","db","initialState","orderReducer","state","action","type","LOAD_ORDER_LOCATIONS","collection","get","then","querySnapshot","data","docs","map","doc","asyncDispatch","LOAD_ORDER_LOCATIONS_SUCCESS","payload","LOAD_ORDER_LOCATIONS_FAIL"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,EAAT,QAAmB,gBAAnB;AACA,MAAMC,YAAY,GAAG,EAArB;AACA,eAAe,SAASC,YAAT,CAAuBC,KAAK,GAAGF,YAA/B,EAA6CG,MAA7C,EAAqD;AAChE,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKP,OAAO,CAACQ,oBAAb;AAAmC;AACnC;AACA;AACA;AACA;AACA;AACAN,QAAAA,EAAE,CAACO,UAAH,CAAc,QAAd,EACCC,GADD,GAECC,IAFD,CAEMC,aAAa,IAAI;AACrB,gBAAMC,IAAI,GAAGD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAuBC,GAAG,IAAIA,GAAG,CAACH,IAAJ,EAA9B,CAAb;AACAP,UAAAA,MAAM,CAACW,aAAP,CAAqBhB,UAAU,CAACD,OAAO,CAACkB,4BAAT,EAAsCL,IAAtC,CAA/B;AACD,SALD;AAOE,eAAOR,KAAP;AACD;;AACD,SAAKL,OAAO,CAACkB,4BAAb;AAA2C;AACzC,eAAOZ,MAAM,CAACa,OAAd;AACD;;AACD,SAAKnB,OAAO,CAACoB,yBAAb;AAAwC;AAEtC,eAAOf,KAAP;AACD;;AAED;AACE,aAAO,EACL,GAAGA;AADE,OAAP;AA1BJ;AA8BD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { db } from \"../../firebase\";\nconst initialState = {};\nexport default function orderReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_ORDER_LOCATIONS: {\n      //  fetch('http://127.0.0.1:5021/api/loadOrders')\n      //   .then((data) => data.json())\n      //   .then((res) => {\n      //     action.asyncDispatch(mainAction(ACTIONS.LOAD_ORDER_LOCATIONS_SUCCESS,res.data))\n      //   }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_ORDER_LOCATIONS_FAIL,err)))\n      db.collection(\"orders\")\n      .get()\n      .then(querySnapshot => {\n        const data = querySnapshot.docs.map(doc => doc.data());\n        action.asyncDispatch(mainAction(ACTIONS.LOAD_ORDER_LOCATIONS_SUCCESS,data))\n      });\n\n        return state\n      }\n      case ACTIONS.LOAD_ORDER_LOCATIONS_SUCCESS: {\n        return action.payload\n      }\n      case ACTIONS.LOAD_ORDER_LOCATIONS_FAIL: {\n\n        return state\n      }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}