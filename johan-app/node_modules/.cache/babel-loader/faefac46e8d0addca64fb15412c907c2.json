{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/websites/johandemeij-master/johan-app/src/components/shared/Article.jsx\";\nimport React, { useEffect } from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport { mainAction } from \"redux/actions/index.actions\";\n\nconst Article = props => {\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `Johan De Meij | Edit Post`; //if(props.postImages)`\n    //let image = Object.values(props.postImages).filter(postImage => postImage.albumID === ID)\n    // props.actions.mainAction(ACTIONS.LOAD_POST_IMAGE,{images:props.images,ID:props.ID})\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const stripHtml = require(\"string-strip-html\");\n\n  const {\n    postTitle,\n    postContent,\n    postDate\n  } = props;\n\n  const truncateString = (str, num) => {\n    if (str.length <= num) {\n      return str;\n    } // Return str truncated with '...' concatenated to the end of str.\n\n\n    return str.slice(0, num) + '...';\n  };\n\n  let styles = {\n    backgroundImage: \"url(http://69.13.153.9/images/posts/No.%205%20JPEG.jpg)\",\n    backgrounSize: \"cover\",\n    minHeight: \"150px\",\n    // borderRadius:\"10px 10px 0 0\",\n    backgroundPosition: \"50% 10%\"\n  };\n  console.log(props);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: \"4\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"news-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-image\",\n    style: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, truncateString(postTitle, 30)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, truncateString(stripHtml(postContent), 50)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 36\n    }\n  }, \"...more\"))))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    post: state.singlePostReducer,\n    postImages: state.postImagesReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      mainAction\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Article);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johandemeij-master/johan-app/src/components/shared/Article.jsx"],"names":["React","useEffect","Col","Link","connect","bindActionCreators","ACTIONS","mainAction","Article","props","document","title","stripHtml","require","postTitle","postContent","postDate","truncateString","str","num","length","slice","styles","backgroundImage","backgrounSize","minHeight","backgroundPosition","console","log","span","mapStateToProps","state","post","singlePostReducer","postImages","postImagesReducer","mapDispatchToProps","dispatch","actions"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,SAAQC,IAAR,QAAoB,kBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvBR,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAS,IAAAA,QAAQ,CAACC,KAAT,GAAkB,2BAAlB,CAFY,CAIZ;AACA;AACD;AACC;AACD,GARM,EAQJ,EARI,CAAT;;AASA,QAAMC,SAAS,GAAGC,OAAO,CAAC,mBAAD,CAAzB;;AACA,QAAM;AAACC,IAAAA,SAAD;AAAWC,IAAAA,WAAX;AAAuBC,IAAAA;AAAvB,MAAmCP,KAAzC;;AACA,QAAMQ,cAAc,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjC,QAAID,GAAG,CAACE,MAAJ,IAAcD,GAAlB,EAAuB;AACnB,aAAOD,GAAP;AACD,KAH8B,CAI/B;;;AACA,WAAOA,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAaF,GAAb,IAAoB,KAA3B;AACH,GANH;;AAOA,MAAIG,MAAM,GAAG;AACTC,IAAAA,eAAe,EAAC,yDADP;AAETC,IAAAA,aAAa,EAAC,OAFL;AAGTC,IAAAA,SAAS,EAAC,OAHD;AAIV;AACCC,IAAAA,kBAAkB,EAAC;AALV,GAAb;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAZ;AACA,sBAAQ,uDACR,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAACoB,MAAAA,IAAI,EAAC;AAAN,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,KAAK,EAAEP,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BL,cAAc,CAACH,SAAD,EAAW,EAAX,CAA3C,CADA,eAEA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BG,cAAc,CAACL,SAAS,CAACG,WAAD,CAAV,EAAwB,EAAxB,CAA1C,CAFA,eAGA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA2B,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA3B,CAHA,CAFJ,CADA,CADQ,CAAR;AAYH,CAvCD;;AAwCA,SAASe,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACLC,IAAAA,IAAI,EAACD,KAAK,CAACE,iBADN;AAELC,IAAAA,UAAU,EAACH,KAAK,CAACI;AAFZ,GAAP;AAID;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLC,IAAAA,OAAO,EAAEjC,kBAAkB,CAAC;AAACE,MAAAA;AAAD,KAAD,EAAe8B,QAAf;AADtB,GAAP;AAGD;;AAED,eAAejC,OAAO,CAAC0B,eAAD,EAAkBM,kBAAlB,CAAP,CAA6C5B,OAA7C,CAAf","sourcesContent":["import React, { useEffect} from \"react\";\nimport {Col} from \"react-bootstrap\"\nimport {Link } from \"react-router-dom\"\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { ACTIONS } from \"redux/actions/types\"\nimport { mainAction } from \"redux/actions/index.actions\"\nconst Article = (props) => {\n    useEffect(() => {\n        // Update the document title using the browser API\n        document.title = `Johan De Meij | Edit Post`;\n        \n        //if(props.postImages)`\n        //let image = Object.values(props.postImages).filter(postImage => postImage.albumID === ID)\n       // props.actions.mainAction(ACTIONS.LOAD_POST_IMAGE,{images:props.images,ID:props.ID})\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, []);\n    const stripHtml = require(\"string-strip-html\")\n    const {postTitle,postContent,postDate} = props\n    const truncateString = (str, num) => {\n        if (str.length <= num) {\n            return str\n          }\n          // Return str truncated with '...' concatenated to the end of str.\n          return str.slice(0, num) + '...'\n      }\n    let styles = {\n        backgroundImage:\"url(http://69.13.153.9/images/posts/No.%205%20JPEG.jpg)\",\n        backgrounSize:\"cover\",\n        minHeight:\"150px\",\n       // borderRadius:\"10px 10px 0 0\",\n        backgroundPosition:\"50% 10%\"\n    }\n    console.log(props)\n    return (<>\n    <Col lg={{span:\"4\" }}>\n    <div className=\"news-card\">\n        <div className=\"card-image\" style={styles}></div>\n        <div className=\"card-body\">\n        <div className=\"card-title\">{truncateString(postTitle,30)}</div>\n        <div className=\"card-text\">{truncateString(stripHtml(postContent),50)}</div>\n        <div className=\"card-link\"><Link to=\"/\">...more</Link></div>\n        </div>\n        </div>\n    </Col>\n    </>)\n}\nfunction mapStateToProps(state) {\n    return {\n      post:state.singlePostReducer,\n      postImages:state.postImagesReducer\n    };\n  }\n  \n  function mapDispatchToProps(dispatch) {\n    return {\n      actions: bindActionCreators({mainAction}, dispatch)\n    };\n  }\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(Article);\n"]},"metadata":{},"sourceType":"module"}