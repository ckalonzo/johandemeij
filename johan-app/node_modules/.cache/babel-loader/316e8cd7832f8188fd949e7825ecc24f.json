{"ast":null,"code":"import { ACTIONS } from 'redux/actions/types.js';\nimport { mainAction } from \"redux/actions/index.actions\";\nconst initialState = {};\nexport default function presentationsReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.LOAD_PRESENTATIONS:\n      {\n        fetch('http://localhost:3001/api/loadPublications').then(data => data.json()).then(res => {\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATIONS_SUCCESS, res.data));\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATIONS_FAIL, err)));\n        return state;\n      }\n\n    case ACTIONS.LOAD_PRESENTATIONS_SUCCESS:\n      {\n        return action.payload;\n      }\n\n    case ACTIONS.LOAD_PRESENTATIONS_FAIL:\n      {\n        return state;\n      }\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johandemeij-master/johan-app/src/redux/reducers/presentations.reducer.js"],"names":["ACTIONS","mainAction","initialState","presentationsReducer","state","action","type","LOAD_PRESENTATIONS","fetch","then","data","json","res","asyncDispatch","LOAD_PRESENTATIONS_SUCCESS","catch","err","LOAD_PRESENTATIONS_FAIL","payload"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,eAAe,SAASC,oBAAT,CAA+BC,KAAK,GAAGF,YAAvC,EAAqDG,MAArD,EAA6D;AACxE,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKN,OAAO,CAACO,kBAAb;AAAiC;AAChCC,QAAAA,KAAK,CAAC,4CAAD,CAAL,CACEC,IADF,CACQC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADjB,EAEEF,IAFF,CAEQG,GAAD,IAAS;AACbP,UAAAA,MAAM,CAACQ,aAAP,CAAqBZ,UAAU,CAACD,OAAO,CAACc,0BAAT,EAAoCF,GAAG,CAACF,IAAxC,CAA/B;AACD,SAJF,EAIIK,KAJJ,CAIUC,GAAG,IAAIX,MAAM,CAACQ,aAAP,CAAqBZ,UAAU,CAACD,OAAO,CAACiB,uBAAT,EAAiCD,GAAjC,CAA/B,CAJjB;AAMC,eAAOZ,KAAP;AACD;;AACD,SAAKJ,OAAO,CAACc,0BAAb;AAAyC;AACvC,eAAOT,MAAM,CAACa,OAAd;AACD;;AACD,SAAKlB,OAAO,CAACiB,uBAAb;AAAsC;AAEpC,eAAOb,KAAP;AACD;;AAED;AACE,aAAO,EACL,GAAGA;AADE,OAAP;AApBJ;AAwBD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\n\nconst initialState = {};\nexport default function presentationsReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_PRESENTATIONS: {\n       fetch('http://localhost:3001/api/loadPublications')\n        .then((data) => data.json())\n        .then((res) => {\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATIONS_SUCCESS,res.data))\n        }).catch(err => action.asyncDispatch(mainAction(ACTIONS.LOAD_PRESENTATIONS_FAIL,err)))\n\n        return state\n      }\n      case ACTIONS.LOAD_PRESENTATIONS_SUCCESS: {\n        return action.payload\n      }\n      case ACTIONS.LOAD_PRESENTATIONS_FAIL: {\n\n        return state\n      }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}