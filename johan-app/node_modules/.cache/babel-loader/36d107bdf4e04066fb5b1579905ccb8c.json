{"ast":null,"code":"import { ACTIONS } from 'redux/actions/types.js';\nimport { mainAction } from \"redux/actions/index.actions\";\nimport { db } from \"../../firebase\";\nconst initialState = {};\nexport default function cdsReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.LOAD_CDS:\n      {\n        db.collection(\"cds\").orderBy(\"month\", \"asc\").orderBy(\"cd_name\", \"desc\").get().then(querySnapshot => {\n          const data = querySnapshot.docs.map(doc => doc.data());\n          action.asyncDispatch(mainAction(ACTIONS.LOAD_CDS_SUCCESS, data));\n        });\n        return state;\n      }\n\n    case ACTIONS.LOAD_CDS_SUCCESS:\n      {\n        return action.payload;\n      }\n\n    case ACTIONS.LOAD_CDS_FAIL:\n      {\n        return state;\n      }\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/cds.reducer.js"],"names":["ACTIONS","mainAction","db","initialState","cdsReducer","state","action","type","LOAD_CDS","collection","orderBy","get","then","querySnapshot","data","docs","map","doc","asyncDispatch","LOAD_CDS_SUCCESS","payload","LOAD_CDS_FAIL"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,EAAT,QAAmB,gBAAnB;AACA,MAAMC,YAAY,GAAG,EAArB;AACA,eAAe,SAASC,UAAT,CAAqBC,KAAK,GAAGF,YAA7B,EAA2CG,MAA3C,EAAmD;AAC9D,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKP,OAAO,CAACQ,QAAb;AAAuB;AAErBN,QAAAA,EAAE,CAACO,UAAH,CAAc,KAAd,EACCC,OADD,CACS,OADT,EACiB,KADjB,EAECA,OAFD,CAES,SAFT,EAEmB,MAFnB,EAGGC,GAHH,GAIGC,IAJH,CAIQC,aAAa,IAAI;AACrB,gBAAMC,IAAI,GAAGD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAuBC,GAAG,IAAIA,GAAG,CAACH,IAAJ,EAA9B,CAAb;AACAR,UAAAA,MAAM,CAACY,aAAP,CAAqBjB,UAAU,CAACD,OAAO,CAACmB,gBAAT,EAA0BL,IAA1B,CAA/B;AACD,SAPH;AASA,eAAOT,KAAP;AACD;;AACD,SAAKL,OAAO,CAACmB,gBAAb;AAA+B;AAC7B,eAAOb,MAAM,CAACc,OAAd;AACD;;AACD,SAAKpB,OAAO,CAACqB,aAAb;AAA4B;AAE1B,eAAOhB,KAAP;AACD;;AAED;AACE,aAAO,EACL,GAAGA;AADE,OAAP;AAxBJ;AA4BD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { db } from \"../../firebase\";\nconst initialState = {};\nexport default function cdsReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_CDS: {\n     \n        db.collection(\"cds\")\n        .orderBy(\"month\",\"asc\")\n        .orderBy(\"cd_name\",\"desc\")\n          .get()\n          .then(querySnapshot => {\n            const data = querySnapshot.docs.map(doc => doc.data());\n            action.asyncDispatch(mainAction(ACTIONS.LOAD_CDS_SUCCESS,data))\n          });\n  \n        return state\n      }\n      case ACTIONS.LOAD_CDS_SUCCESS: {\n        return action.payload\n      }\n      case ACTIONS.LOAD_CDS_FAIL: {\n\n        return state\n      }\n      \n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}