{"ast":null,"code":"import _objectSpread from\"/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";import{database,db}from\"../../firebase\";import _ from'lodash';var initialState={};var d=new Date();var day=d.getDate();var month=d.getMonth()+1;var year=d.getFullYear();console.log(day);export default function agendaReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.CREATE_NEW_AGENDA:{console.log(action);var _agendaRef=database.ref('agendas/'+action.payload.id);_agendaRef.set(action.payload).then(function(){action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_AGENDA_SUCCESS,action.payload));}).catch(function(){action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_AGENDA_FAIL,{error:\"could not creat agenda\"}));});return state;}case ACTIONS.CREATE_NEW_AGENDA_SUCCESS:{return action.payload;}case ACTIONS.DELETE_AGENDA:{db.collection(\"agendas\").where('id','==',action.payload).get().then(function(querySnapshot){querySnapshot.forEach(function(doc){return doc.ref.delete();});action.asyncDispatch(mainAction(ACTIONS.DELETE_AGENDA_SUCCESS,[]));});return state;}case ACTIONS.DELETE_AGENDA_SUCCESS:{action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDAS,[]));return state;}case ACTIONS.LOAD_CD_AGENDA:{db.collection(\"agendas\").where(\"year\",\"==\",year.toString()).orderBy(\"month\",\"asc\").get().then(function(snapshot){var data=snapshot.docs.map(function(doc){return doc.data();});action.asyncDispatch(mainAction(ACTIONS.LOAD_CD_AGENDA_SUCCESS,data));});return state;}case ACTIONS.LOAD_CD_AGENDA_SUCCESS:{return _.orderBy(action.payload,['month','day'],['asc','asc']);}case ACTIONS.LOAD_CD_AGENDA_FAIL:{return state;}case ACTIONS.LOAD_AGENDAS:{db.collection(\"agendas\").where(\"year\",\"==\",year.toString()).orderBy(\"month\",\"asc\").get().then(function(snapshot){var data=snapshot.docs.map(function(doc){return doc.data();});var agendas=[];Object.values(data).map(function(agenda){agenda.date=\"\".concat(agenda.month,\"-\").concat(agenda.day,\"-\").concat(agenda.year);agenda.month=+agenda.month;// console.log(agenda.month ,\">=\", month ,\"&&\", +agenda.day.replace(/^0+/, '') ,\">\", day)\nif(+agenda.month>=+month)return agendas.push(agenda);});action.asyncDispatch(mainAction(ACTIONS.LOAD_CD_AGENDA_SUCCESS,agendas));});return state;}case ACTIONS.LOAD_AGENDAS_SUCCESS:{return action.payload;}case ACTIONS.LOAD_AGENDAS_FAIL:{return state;}case ACTIONS.LOAD_AGENDAS_FILTERED:{//   let d = new Date();\n// let month = (d.getMonth() + 1).toString()\n// let year = d.getFullYear().toString();\n// const agendaYearRef = database.ref('agendas').orderByChild('year').startAt(action.payload.year).endAt(action.payload.year)\n// agendaYearRef.on('value',(snap,i)=>{\n// let agendas = []\n// const data = snap.val()\n//   Object.values(data).map(agenda=>{\n//     agenda.date = `${agenda.month}-${agenda.day}-${agenda.year}`\n//     agenda.month = +agenda.month\n//     return agendas.push(agenda)\n//   })\n//   action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDAS_SUCCESS,_.orderBy(agendas,['month','day'],['asc','asc'])))\n// })\ndb.collection(\"agendas\").where(\"year\",\"==\",action.payload.year.toString()).orderBy(\"month\",\"asc\").get().then(function(snapshot){var agendas=[];var data=snapshot.docs.map(function(doc){return doc.data();});Object.values(data).map(function(agenda){agenda.date=\"\".concat(agenda.month,\"-\").concat(agenda.day,\"-\").concat(agenda.year);agenda.month=+agenda.month;return agendas.push(agenda);});action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDAS_SUCCESS,_.orderBy(agendas,['month','day'],['asc','asc'])));});return state;}case ACTIONS.LOAD_AGENDAS_FILTERED:{return action.payload;}case ACTIONS.LOAD_AGENDA:{var stateCopy=[];var agendaRef=database.ref('agendas/'+action.payload);agendaRef.on('value',function(snap,i){var data=snap.val();if(data)action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDA_SUCCESS,_objectSpread({},data)));});var agendaRef=database.ref('agendas').orderByChild('id').startAt(action.payload).endAt(action.payload);agendaRef.on('child_added',function(snap,i){var data=snap.val();stateCopy=data;if(stateCopy)action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDA_SUCCESS,_objectSpread({},stateCopy)));});return _objectSpread({},stateCopy);}case ACTIONS.LOAD_AGENDA_SUCCESS:{return action.payload;}case ACTIONS.LOAD_AGENDA_FAIL:{return state;}case ACTIONS.UPDATE_AGENDA:{// const agendaRef = database.ref('agendas')\n// agendaRef.child(action.payload.id).update(action.payload)\n// .then(()=>{\n//   action.asyncDispatch(mainAction(ACTIONS.UPDATE_AGENDA_SUCCESS,action.payload))\n// }).catch(()=>{\n//   action.asyncDispatch(mainAction(ACTIONS.UPDATE_AGENDA_FAIL,{error:\"failed to update agenda\"}))\n// })\nconsole.log(action);var _id='';db.collection(\"agendas\").where(\"id\",\"==\",action.payload.id).get().then(function(snapshot){var data=snapshot.docs.map(function(doc){_id=doc.id;return doc.data();});console.log(_id);db.collection(\"agendas\").doc(_id).update(action.payload).then(function(){console.log(\"success\");action.asyncDispatch(mainAction(ACTIONS.UPDATE_AGENDA_SUCCESS,action.payload));});});return state;}case ACTIONS.UPDATE_AGENDA_SUCCESS:{var _stateCopy=_.cloneDeep(action.payload);action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDA,_stateCopy.id));return _stateCopy;}case ACTIONS.UPDATE_AGENDA_FAIL:{return state;}default:return _objectSpread({},state);}}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/agenda.reducer.js"],"names":["ACTIONS","mainAction","database","db","_","initialState","d","Date","day","getDate","month","getMonth","year","getFullYear","console","log","agendaReducer","state","action","type","CREATE_NEW_AGENDA","agendaRef","ref","payload","id","set","then","asyncDispatch","CREATE_NEW_AGENDA_SUCCESS","catch","CREATE_NEW_AGENDA_FAIL","error","DELETE_AGENDA","collection","where","get","querySnapshot","forEach","doc","delete","DELETE_AGENDA_SUCCESS","LOAD_AGENDAS","LOAD_CD_AGENDA","toString","orderBy","snapshot","data","docs","map","LOAD_CD_AGENDA_SUCCESS","LOAD_CD_AGENDA_FAIL","agendas","Object","values","agenda","date","push","LOAD_AGENDAS_SUCCESS","LOAD_AGENDAS_FAIL","LOAD_AGENDAS_FILTERED","LOAD_AGENDA","stateCopy","on","snap","i","val","LOAD_AGENDA_SUCCESS","orderByChild","startAt","endAt","LOAD_AGENDA_FAIL","UPDATE_AGENDA","_id","update","UPDATE_AGENDA_SUCCESS","cloneDeep","UPDATE_AGENDA_FAIL"],"mappings":"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","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { database,db} from \"../../firebase\";\nimport _ from 'lodash'\nconst initialState = {\n};\nlet d = new Date();\nlet day = d.getDate();\nlet month = d.getMonth()+1;\nlet year = d.getFullYear()\nconsole.log(day)\nexport default function agendaReducer (state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.CREATE_NEW_AGENDA:{\n      console.log(action)\n     \n     const agendaRef = database.ref('agendas/'+action.payload.id)\n    agendaRef.set(action.payload).then(()=>{\n      action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_AGENDA_SUCCESS,action.payload))\n    })\n    .catch(()=>{\n      action.asyncDispatch(mainAction(ACTIONS.CREATE_NEW_AGENDA_FAIL,{error:\"could not creat agenda\"}))\n    });\n   \n    return state\n    }\n    case ACTIONS.CREATE_NEW_AGENDA_SUCCESS:{\n    return action.payload\n    }\n    case ACTIONS.DELETE_AGENDA:{\n    db.collection(\"agendas\")\n    .where('id','==',action.payload)\n     .get()\n     .then((querySnapshot) => {\n       querySnapshot.forEach((doc)=> doc.ref.delete())\n       action.asyncDispatch(mainAction(ACTIONS.DELETE_AGENDA_SUCCESS,[]))\n     });\n\n    return state\n    }  \n    case ACTIONS.DELETE_AGENDA_SUCCESS:{\n    action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDAS,[]))\n    return state\n    }  \n    case ACTIONS.LOAD_CD_AGENDA: {\n\n\n    db.collection(\"agendas\")\n    .where(\"year\",\"==\",year.toString())\n    .orderBy(\"month\",\"asc\")\n    .get()\n    .then(snapshot => {\n      const data = snapshot.docs.map(doc => {return doc.data()});\n      action.asyncDispatch(mainAction(ACTIONS.LOAD_CD_AGENDA_SUCCESS,data))\n    })\n      \n\n    return state\n    }\n    case ACTIONS.LOAD_CD_AGENDA_SUCCESS: {\n    return _.orderBy(action.payload,['month','day'],['asc','asc'])\n    }\n    case ACTIONS.LOAD_CD_AGENDA_FAIL: {\n\n    return state\n    }\n    case ACTIONS.LOAD_AGENDAS: {\n\n    db.collection(\"agendas\")\n    .where(\"year\",\"==\",year.toString())\n    .orderBy(\"month\",\"asc\")\n    .get()\n    .then(snapshot => {\n      const data = snapshot.docs.map(doc => {return doc.data()});\n      let agendas = []\n      Object.values(data).map(agenda=>{\n        agenda.date = `${agenda.month}-${agenda.day}-${agenda.year}`\n        agenda.month = +agenda.month\n       // console.log(agenda.month ,\">=\", month ,\"&&\", +agenda.day.replace(/^0+/, '') ,\">\", day)\n       if(+agenda.month >= +month )\n        return agendas.push(agenda)\n      })\n      action.asyncDispatch(mainAction(ACTIONS.LOAD_CD_AGENDA_SUCCESS,agendas))\n    })\n    return state\n    }\n    case ACTIONS.LOAD_AGENDAS_SUCCESS:{\n\n    return action.payload\n    }\n    case ACTIONS.LOAD_AGENDAS_FAIL:{\n    return state\n    }\n    case ACTIONS.LOAD_AGENDAS_FILTERED:{\n    //   let d = new Date();\n    // let month = (d.getMonth() + 1).toString()\n    // let year = d.getFullYear().toString();\n\n    // const agendaYearRef = database.ref('agendas').orderByChild('year').startAt(action.payload.year).endAt(action.payload.year)\n    // agendaYearRef.on('value',(snap,i)=>{\n\n    // let agendas = []\n    // const data = snap.val()\n    //   Object.values(data).map(agenda=>{\n    //     agenda.date = `${agenda.month}-${agenda.day}-${agenda.year}`\n    //     agenda.month = +agenda.month\n    //     return agendas.push(agenda)\n    //   })\n    //   action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDAS_SUCCESS,_.orderBy(agendas,['month','day'],['asc','asc'])))\n    // })\n\n    db.collection(\"agendas\")\n    .where(\"year\",\"==\",action.payload.year.toString())\n    .orderBy(\"month\",\"asc\")\n    .get()\n    .then(snapshot => {\n      let agendas = []\n      const data = snapshot.docs.map(doc => {return doc.data()});\n      Object.values(data).map(agenda=>{\n        agenda.date = `${agenda.month}-${agenda.day}-${agenda.year}`\n        agenda.month = +agenda.month\n        return agendas.push(agenda)\n      })\n      action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDAS_SUCCESS,_.orderBy(agendas,['month','day'],['asc','asc'])))\n    })\n    return state\n    }\n    case ACTIONS.LOAD_AGENDAS_FILTERED:{\n      return action.payload\n    }\n    case ACTIONS.LOAD_AGENDA:{\n    let stateCopy = []\n    var agendaRef = database.ref('agendas/'+action.payload)\n     agendaRef.on('value',(snap,i)=>{\n    const data = snap.val()\n    if(data) \n    action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDA_SUCCESS,{...data}))\n      \n    })\n    var agendaRef = database.ref('agendas').orderByChild('id').startAt(action.payload).endAt(action.payload)\n     agendaRef.on('child_added',(snap,i)=>{\n    const data = snap.val()\n    stateCopy = data\n    if(stateCopy)\n    action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDA_SUCCESS,{...stateCopy}))\n      \n    })\n    return {...stateCopy}\n    }\n    case ACTIONS.LOAD_AGENDA_SUCCESS:{\n    return action.payload\n    }\n    case ACTIONS.LOAD_AGENDA_FAIL:{\n    return state\n    }\n    case ACTIONS.UPDATE_AGENDA:{\n      // const agendaRef = database.ref('agendas')\n      // agendaRef.child(action.payload.id).update(action.payload)\n      // .then(()=>{\n      //   action.asyncDispatch(mainAction(ACTIONS.UPDATE_AGENDA_SUCCESS,action.payload))\n      // }).catch(()=>{\n      //   action.asyncDispatch(mainAction(ACTIONS.UPDATE_AGENDA_FAIL,{error:\"failed to update agenda\"}))\n      // })\n      console.log(action)\n      let _id =''\n      db.collection(\"agendas\")\n    .where(\"id\",\"==\",action.payload.id)\n    .get()\n    .then(snapshot => {\n      const data = snapshot.docs.map(doc => {\n        _id = doc.id\n        return doc.data()});\n        console.log(_id)\n        db.collection(\"agendas\").doc(_id)\n        .update(action.payload).then(()=>{\n          console.log(\"success\")\n        action.asyncDispatch(mainAction(ACTIONS.UPDATE_AGENDA_SUCCESS,action.payload))\n     });\n    })\n     \n    return state\n    }\n    case ACTIONS.UPDATE_AGENDA_SUCCESS:{\n    let stateCopy = _.cloneDeep(action.payload)\n    action.asyncDispatch(mainAction(ACTIONS.LOAD_AGENDA,stateCopy.id))\n    return stateCopy\n    }\n    case ACTIONS.UPDATE_AGENDA_FAIL:{\n   \n    return state\n    }\n    default: \n      return {\n        ...state\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}