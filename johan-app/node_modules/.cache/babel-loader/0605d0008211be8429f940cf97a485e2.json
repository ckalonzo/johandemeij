{"ast":null,"code":"import { ACTIONS } from 'redux/actions/types.js';\nimport { mainAction } from \"redux/actions/index.actions\";\nimport { db } from \"../../firebase\";\nimport _ from \"lodash\";\nconst initialState = {};\nexport default function AllAgendasReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.LOAD_ALL_AGENDAS:\n      {\n        db.collection(\"agendas\").get().then(querySnapshot => {\n          const data = querySnapshot.docs.map(doc => doc.data()); //  action.asyncDispatch(mainAction(ACTIONS.LOAD_ALL_AGENDAS_SUCCESS,data))\n        });\n        return state;\n      }\n\n    case ACTIONS.LOAD_ALL_AGENDAS_SUCCESS:\n      {\n        let stateCopy = [];\n\n        _.orderBy(action.payload, ['year', 'month', 'day'], ['desc', 'desc', 'desc']).map((agenda, index) => {\n          if (index <= 300) return stateCopy.push(agenda);\n        }); // stateCopy.total = action.payload.length;\n\n\n        return action.payload;\n      }\n\n    case ACTIONS.LOAD_ALL_AGENDAS_FAIL:\n      {\n        return state;\n      }\n\n    default:\n      return { ...state\n      };\n  }\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johan-de-meij/johan-app/src/redux/reducers/allAgendas.reducer.js"],"names":["ACTIONS","mainAction","db","_","initialState","AllAgendasReducer","state","action","type","LOAD_ALL_AGENDAS","collection","get","then","querySnapshot","data","docs","map","doc","LOAD_ALL_AGENDAS_SUCCESS","stateCopy","orderBy","payload","agenda","index","push","LOAD_ALL_AGENDAS_FAIL"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,EAAT,QAAmB,gBAAnB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,MAAMC,YAAY,GAAG,EAArB;AAEA,eAAe,SAASC,iBAAT,CAA4BC,KAAK,GAAGF,YAApC,EAAkDG,MAAlD,EAA0D;AACrE,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKR,OAAO,CAACS,gBAAb;AAA+B;AAC7BP,QAAAA,EAAE,CAACQ,UAAH,CAAc,SAAd,EACCC,GADD,GAECC,IAFD,CAEMC,aAAa,IAAI;AACrB,gBAAMC,IAAI,GAAGD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAuBC,GAAG,IAAIA,GAAG,CAACH,IAAJ,EAA9B,CAAb,CADqB,CAEvB;AACC,SALD;AAOA,eAAOR,KAAP;AACD;;AACD,SAAKN,OAAO,CAACkB,wBAAb;AAAuC;AAEtC,YAAIC,SAAS,GAAG,EAAhB;;AAEAhB,QAAAA,CAAC,CAACiB,OAAF,CAAUb,MAAM,CAACc,OAAjB,EAAyB,CAAC,MAAD,EAAQ,OAAR,EAAgB,KAAhB,CAAzB,EAAgD,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf,CAAhD,EAAwEL,GAAxE,CAA4E,CAACM,MAAD,EAAQC,KAAR,KAAgB;AAC1F,cAAGA,KAAK,IAAI,GAAZ,EACA,OAAOJ,SAAS,CAACK,IAAV,CAAeF,MAAf,CAAP;AACD,SAHD,EAJsC,CAQxC;;;AAEG,eAAOf,MAAM,CAACc,OAAd;AACD;;AACD,SAAKrB,OAAO,CAACyB,qBAAb;AAAoC;AAElC,eAAOnB,KAAP;AACD;;AACD;AACE,aAAO,EACL,GAAGA;AADE,OAAP;AA7BJ;AAiCD","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { db } from \"../../firebase\";\nimport _ from \"lodash\"\nconst initialState = {\n};\nexport default function AllAgendasReducer (state = initialState, action) {\n    switch (action.type) {\n      \n      case ACTIONS.LOAD_ALL_AGENDAS: {\n        db.collection(\"agendas\")\n        .get()\n        .then(querySnapshot => {\n          const data = querySnapshot.docs.map(doc => doc.data());\n        //  action.asyncDispatch(mainAction(ACTIONS.LOAD_ALL_AGENDAS_SUCCESS,data))\n        });\n        \n        return state\n      }\n      case ACTIONS.LOAD_ALL_AGENDAS_SUCCESS: {\n\n       let stateCopy = []\n\n       _.orderBy(action.payload,['year','month','day'],['desc','desc','desc']).map((agenda,index)=>{\n         if(index <= 300)\n         return stateCopy.push(agenda)\n       })\n     // stateCopy.total = action.payload.length;\n      \n        return action.payload\n      }\n      case ACTIONS.LOAD_ALL_AGENDAS_FAIL: {\n\n        return state\n      }\n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}