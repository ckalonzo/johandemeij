{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/websites/johandemeij-master/johan-app/src/components/dashboard/PostImage.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { mainAction } from \"redux/actions/index.actions\";\nimport { Form, Container, Row, Col, Button } from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\n\nconst ProfileImage = props => {\n  const [selectedFile, setSelectedFile] = useState();\n  const [uploadStatus, setUploadStatus] = useState(false);\n  const [caption, setCaption] = useState(props.postImage.caption);\n  const [disabled, setDisabled] = useState(false);\n  const [file, setFile] = useState();\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `Johan De Meij | Edit Post`;\n    props.actions.mainAction(ACTIONS.LOAD_POST_IMAGES, []); //if(props.postImages)\n\n    let image = Object.values(props.postImages).filter(postImage => postImage.albumID === ID);\n    props.actions.mainAction(ACTIONS.LOAD_POST_IMAGE, {\n      image,\n      ID\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleImageSubmit = e => {};\n\n  const uploadImage = () => {\n    props.actions.mainAction(ACTIONS.UPLOAD_IMAGE, file);\n    setUploadStatus(true);\n  };\n\n  const onChangeHandler = e => {\n    setSelectedFile(window.URL.createObjectURL(e.target.files[0]));\n    setFile(e.target.files[0]);\n  };\n\n  const renderUploadButtons = () => {\n    if (selectedFile && !uploadStatus) return /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: () => uploadImage(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }\n    }, \"upload\");\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: e => selecteImageToUpload(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }\n    }, \"change image\");\n  };\n\n  const selecteImageToUpload = e => {\n    document.querySelector('input#post-image').click();\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    id: \"images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleImageSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 4\n    },\n    className: \"post-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: selectedFile ? selectedFile : \"/images/missing.png\",\n    onClick: e => selecteImageToUpload(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 4\n    },\n    className: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Caption\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: caption,\n    onChange: e => setCaption(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Please provide a caption.\"), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Looks good!\")))), /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 4\n    },\n    className: \"action-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }\n  }, renderUploadButtons(), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"post-image\",\n    onChange: e => onChangeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 85\n    }\n  })))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    postImages: state.postImagesReducer,\n    postImage: state.postImageReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      mainAction\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileImage);","map":{"version":3,"sources":["/Applications/MAMP/htdocs/websites/johandemeij-master/johan-app/src/components/dashboard/PostImage.jsx"],"names":["React","useEffect","useState","connect","bindActionCreators","mainAction","Form","Container","Row","Col","Button","ACTIONS","ProfileImage","props","selectedFile","setSelectedFile","uploadStatus","setUploadStatus","caption","setCaption","postImage","disabled","setDisabled","file","setFile","document","title","actions","LOAD_POST_IMAGES","image","Object","values","postImages","filter","albumID","ID","LOAD_POST_IMAGE","handleImageSubmit","e","uploadImage","UPLOAD_IMAGE","onChangeHandler","window","URL","createObjectURL","target","files","renderUploadButtons","selecteImageToUpload","querySelector","click","validated","span","value","mapStateToProps","state","postImagesReducer","postImageReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { Form, Container, Row, Col, Button} from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\n\nconst ProfileImage = (props) => {\n    const [selectedFile,setSelectedFile] = useState()\n    const [uploadStatus,setUploadStatus] = useState(false)\n    const [caption,setCaption] = useState(props.postImage.caption)\n    const [disabled,setDisabled] = useState(false)\n    const [file,setFile] = useState()\n    useEffect(() => {\n        // Update the document title using the browser API\n        document.title = `Johan De Meij | Edit Post`;\n        props.actions.mainAction(ACTIONS.LOAD_POST_IMAGES,[])\n        //if(props.postImages)\n        let image = Object.values(props.postImages).filter(postImage => postImage.albumID === ID)\n        props.actions.mainAction(ACTIONS.LOAD_POST_IMAGE,{image,ID})\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, []);\n    const handleImageSubmit = (e) => {\n\n    }\n    const uploadImage = () => {\n        props.actions.mainAction(ACTIONS.UPLOAD_IMAGE,file)\n        setUploadStatus(true)\n      }\n      const onChangeHandler = (e) => {\n        setSelectedFile(window.URL.createObjectURL(e.target.files[0]))\n        setFile(e.target.files[0])\n      } \n    \n      const renderUploadButtons = () => {\n        if(selectedFile && !uploadStatus)\n        return <Button variant=\"dark\" onClick={()=>uploadImage()}>upload</Button>\n        return <Button variant=\"primary\" onClick={(e)=>selecteImageToUpload(e)}>change image</Button>\n      }\n      const selecteImageToUpload = (e) => {\n        document.querySelector('input#post-image').click()\n      }\n    \n    return(\n        <section id=\"images\">\n          <Form noValidate validated={validated} onSubmit={handleImageSubmit}>\n            <Row>\n            <Col lg={{span:4}} className=\"post-image\">\n              <img src={selectedFile ? selectedFile :\"/images/missing.png\"}  onClick={(e)=>selecteImageToUpload(e)} />\n            </Col>\n             <Col lg={{span:4}} className=\"caption\">\n             <Form.Row>\n                  <Form.Group as={Col}  controlId=\"caption\">\n                    <Form.Label>Caption</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"\"\n                      defaultValue={caption}\n                      onChange={e => setCaption(e.target.value)}\n                      \n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide a caption.\n                      </Form.Control.Feedback>\n                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                  </Form.Group>\n                  </Form.Row>\n               </Col>\n               <Col lg={{span:4}}  className=\"action-button\">{renderUploadButtons()}<input type=\"file\" id=\"post-image\" onChange={(e)=>onChangeHandler(e)}/></Col>\n               </Row>\n            </Form>\n          </section>\n    )\n}\nfunction mapStateToProps(state) {\n    return {\n      postImages:state.postImagesReducer,\n      postImage:state.postImageReducer\n    };\n  }\n  \n  function mapDispatchToProps(dispatch) {\n    return {\n      actions: bindActionCreators({mainAction}, dispatch)\n    };\n  }\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(ProfileImage);"]},"metadata":{},"sourceType":"module"}