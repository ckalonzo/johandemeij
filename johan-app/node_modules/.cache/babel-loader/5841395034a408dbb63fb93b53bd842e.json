{"ast":null,"code":"import _objectSpread from\"/Users/carlkalonzo/Documents/DEV/johandemeij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";import{db,database}from\"../../firebase\";var initialState={};export default function contactUsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.SUBMIT_CONTACT_INFO:{var stateCopy=action.payload;var _contactRef=database.ref('contact');_contactRef.child(stateCopy.id).set(action.payload).then(function(){action.asyncDispatch(mainAction(ACTIONS.SUBMIT_CONTACT_INFO_SUCCESS,action.payload));}).catch(function(){action.asyncDispatch(mainAction(ACTIONS.SUBMIT_CONTACT_INFO_FAIL,{error:\"could not create contact\"}));});return state;}case ACTIONS.SUBMIT_CONTACT_INFO_SUCCESS:{return action.payload;}case ACTIONS.SUBMIT_CONTACT_INFO_FAIL:{return state;}case ACTIONS.LOAD_CONTACTS:{var contactsRef=database.ref('contact');contactsRef.on('value',function(snap,i){var data=snap.val();var contacts=[];Object.values(data?data:[]).map(function(contact){contacts.push(contact);});action.asyncDispatch(mainAction(ACTIONS.LOAD_CONTACTS_SUCCESS,_objectSpread({},contacts)));});return state;}case ACTIONS.LOAD_CONTACTS_SUCCESS:{return action.payload;}case ACTIONS.LOAD_CONTACTS_FAIL:{return state;}case ACTIONS.LOAD_CONTACT:{var contactRef=database.ref('contact/'+action.payload);contactRef.on('value',function(snap,i){var data=snap.val();action.asyncDispatch(mainAction(ACTIONS.LOAD_CONTACT_SUCCESS,data));});return state;}case ACTIONS.LOAD_CONTACT_SUCCESS:{return action.payload;}case ACTIONS.LOAD_CONTACT_FAIL:{return state;}case ACTIONS.DELETE_CONTACT:{var _contactRef2=database.ref('contact/'+action.payload);_contactRef2.remove();action.asyncDispatch(mainAction(ACTIONS.DELETE_CONTACT_SUCCESS,[]));return state;}case ACTIONS.DELETE_CONTACT_SUCCESS:{action.asyncDispatch(mainAction(ACTIONS.LOAD_CONTACTS,[]));return state;}default:return _objectSpread({},state);}}","map":{"version":3,"sources":["/Users/carlkalonzo/Documents/DEV/johandemeij/johan-app/src/redux/reducers/contactUs.reducer.js"],"names":["ACTIONS","mainAction","db","database","initialState","contactUsReducer","state","action","type","SUBMIT_CONTACT_INFO","stateCopy","payload","contactRef","ref","child","id","set","then","asyncDispatch","SUBMIT_CONTACT_INFO_SUCCESS","catch","SUBMIT_CONTACT_INFO_FAIL","error","LOAD_CONTACTS","contactsRef","on","snap","i","data","val","contacts","Object","values","map","contact","push","LOAD_CONTACTS_SUCCESS","LOAD_CONTACTS_FAIL","LOAD_CONTACT","LOAD_CONTACT_SUCCESS","LOAD_CONTACT_FAIL","DELETE_CONTACT","remove","DELETE_CONTACT_SUCCESS"],"mappings":"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","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { db,database } from \"../../firebase\";\nconst initialState = {\n   \n};\nexport default function contactUsReducer (state = initialState, action) {\n    switch (action.type) {\n \n      case ACTIONS.SUBMIT_CONTACT_INFO: {\n        let stateCopy = action.payload\n        const contactRef = database.ref('contact')\n        contactRef.child(stateCopy.id).set(action.payload).then(()=>{\n          action.asyncDispatch(mainAction(ACTIONS.SUBMIT_CONTACT_INFO_SUCCESS,action.payload))\n        })\n        .catch(()=>{\n          action.asyncDispatch(mainAction(ACTIONS.SUBMIT_CONTACT_INFO_FAIL,{error:\"could not create contact\"}))\n        });\n        return state\n      }\n      case  ACTIONS.SUBMIT_CONTACT_INFO_SUCCESS: {\n        return action.payload\n      }\n      case  ACTIONS.SUBMIT_CONTACT_INFO_FAIL: {\n\n        return state\n      }\n      case  ACTIONS.LOAD_CONTACTS: {\n        var contactsRef = database.ref('contact')\n     contactsRef.on('value',(snap,i)=>{\n    \n      const data = snap.val()\n      let contacts =[]\n      Object.values(data ? data:[]).map(contact=>{\n        contacts.push(contact)\n      })\n      action.asyncDispatch(mainAction(ACTIONS.LOAD_CONTACTS_SUCCESS,{...contacts}))\n      })\n        return state\n      }\n      case  ACTIONS.LOAD_CONTACTS_SUCCESS: {\n\n        return action.payload\n      }\n      case  ACTIONS.LOAD_CONTACTS_FAIL: {\n\n        return state\n      }\n      case  ACTIONS.LOAD_CONTACT: {\n        var contactRef = database.ref('contact/'+action.payload)\n        contactRef.on('value',(snap,i)=>{\n        \n        const data = snap.val()\n         action.asyncDispatch(mainAction(ACTIONS.LOAD_CONTACT_SUCCESS,data))\n        })\n        return state\n      }\n      case  ACTIONS.LOAD_CONTACT_SUCCESS: {\n\n        return action.payload\n      }\n      case  ACTIONS.LOAD_CONTACT_FAIL: {\n\n        return state\n      }\n      case  ACTIONS.DELETE_CONTACT: {\n        const contactRef = database.ref('contact/'+action.payload)\n        contactRef.remove()\n        action.asyncDispatch(mainAction(ACTIONS.DELETE_CONTACT_SUCCESS,[]))\n        return state\n      }\n      case  ACTIONS.DELETE_CONTACT_SUCCESS: {\n        action.asyncDispatch(mainAction(ACTIONS.LOAD_CONTACTS,[]))\n        return state\n      }\n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}