{"ast":null,"code":"import _objectSpread from\"/Users/laurakalonzo/Documents/DEV/johandemeij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/laurakalonzo/Documents/DEV/johandemeij/johan-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{ACTIONS}from'redux/actions/types.js';import{mainAction}from\"redux/actions/index.actions\";import{db}from\"../../firebase\";import _ from\"lodash\";var initialState={};export default function orderReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.LOAD_ORDER_LOCATIONS:{db.collection(\"orders\").get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){return doc.data();});action.asyncDispatch(mainAction(ACTIONS.LOAD_ORDER_LOCATIONS_SUCCESS,data));});return state;}case ACTIONS.LOAD_ORDER_LOCATIONS_SUCCESS:{return action.payload?action.payload:state;}case ACTIONS.LOAD_ORDER_LOCATIONS_FAIL:{return state;}case ACTIONS.LOAD_ORDER_LOCATION:{db.collection(\"orders\").where(\"id\",'==',action.payload).get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){return doc.data();});action.asyncDispatch(mainAction.apply(void 0,[ACTIONS.LOAD_ORDER_LOCATION_SUCCESS].concat(_toConsumableArray(data))));});return state;}case ACTIONS.LOAD_ORDER_LOCATION_SUCCESS:{return action.payload?action.payload:state;}case ACTIONS.LOAD_ORDER_LOCATION_FAIL:{return state;}case ACTIONS.UPDATE_ORDER_LOCATION:{console.log(action);var stateCopy=_.cloneDeep(action.payload);var _id=console.log(stateCopy.id);db.collection(\"orders\").where(\"id\",'==',stateCopy.id).get().then(function(querySnapshot){var data=querySnapshot.docs.map(function(doc){_id=doc.id;return doc.data();});console.log(data);db.collection(\"orders\").doc(_id).update(stateCopy).then(function(){action.asyncDispatch(mainAction(ACTIONS.UPDATE_ORDER_LOCATION_SUCCESS,stateCopy));});});return state;}case ACTIONS.UPDATE_ORDER_LOCATION_SUCCESS:{return action.payload;}default:return _objectSpread({},state);}}","map":{"version":3,"sources":["/Users/laurakalonzo/Documents/DEV/johandemeij/johan-app/src/redux/reducers/orderLocations.reducer.js"],"names":["ACTIONS","mainAction","db","_","initialState","orderReducer","state","action","type","LOAD_ORDER_LOCATIONS","collection","get","then","querySnapshot","data","docs","map","doc","asyncDispatch","LOAD_ORDER_LOCATIONS_SUCCESS","payload","LOAD_ORDER_LOCATIONS_FAIL","LOAD_ORDER_LOCATION","where","LOAD_ORDER_LOCATION_SUCCESS","LOAD_ORDER_LOCATION_FAIL","UPDATE_ORDER_LOCATION","console","log","stateCopy","cloneDeep","_id","id","update","UPDATE_ORDER_LOCATION_SUCCESS"],"mappings":"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","sourcesContent":["import { ACTIONS } from 'redux/actions/types.js'\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { db } from \"../../firebase\";\nimport _ from \"lodash\"\nconst initialState = {};\nexport default function orderReducer (state = initialState, action) {\n    switch (action.type) {\n  \n      case ACTIONS.LOAD_ORDER_LOCATIONS: {\n      db.collection(\"orders\")\n      .get()\n      .then(querySnapshot => {\n        const data = querySnapshot.docs.map(doc => doc.data());\n        action.asyncDispatch(mainAction(ACTIONS.LOAD_ORDER_LOCATIONS_SUCCESS,data))\n      });\n\n        return state\n      }\n      case ACTIONS.LOAD_ORDER_LOCATIONS_SUCCESS: {\n        return action.payload ? action.payload : state\n      }\n      case ACTIONS.LOAD_ORDER_LOCATIONS_FAIL: {\n\n        return state\n      }\n      case ACTIONS.LOAD_ORDER_LOCATION: {\n        db.collection(\"orders\")\n        .where(\"id\",'==',action.payload)\n          .get()\n          .then(querySnapshot => {\n            const data = querySnapshot.docs.map(doc => doc.data());\n            action.asyncDispatch(mainAction(ACTIONS.LOAD_ORDER_LOCATION_SUCCESS,...data))\n          });\n        return state\n      }\n      case ACTIONS.LOAD_ORDER_LOCATION_SUCCESS: {\n        return action.payload ? action.payload : state\n      }\n      case ACTIONS.LOAD_ORDER_LOCATION_FAIL: {\n        return state\n      }\n      case ACTIONS.UPDATE_ORDER_LOCATION:{\n        console.log(action)\n        let stateCopy = _.cloneDeep(action.payload)\n        let _id = \n        console.log(stateCopy.id)\n\n        db.collection(\"orders\")\n        .where(\"id\",'==',stateCopy.id)\n          .get()\n          .then(querySnapshot => {\n            const data = querySnapshot.docs.map(doc => {\n              _id = doc.id\n              return doc.data()});\n              console.log(data)\n           db.collection(\"orders\").doc(_id)\n            .update(stateCopy).then(()=>{\n              action.asyncDispatch(mainAction(ACTIONS.UPDATE_ORDER_LOCATION_SUCCESS,stateCopy))\n            });\n          });\n        return state\n      }\n      case ACTIONS.UPDATE_ORDER_LOCATION_SUCCESS:{\n        return action.payload\n      }\n      default: \n        return {\n          ...state\n        }\n    }\n  }"]},"metadata":{},"sourceType":"module"}