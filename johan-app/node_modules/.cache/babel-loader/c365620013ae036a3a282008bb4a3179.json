{"ast":null,"code":"var _jsxFileName = \"/Users/carlkalonzo/Documents/DEV/johandemeij/johan-app/src/components/dashboard/NewGalleryImage.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { mainAction } from \"redux/actions/index.actions\";\nimport { Form, Row, Col, Button, Container } from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport SideNav from \"components/dashboard/SideNav\";\n\nconst GalleryImage = props => {\n  let mainProps = props;\n  const [selectedFile, setSelectedFile] = useState();\n  const [uploadStatus, setUploadStatus] = useState(false);\n  const [frontCaption, setFrontCaption] = useState();\n  const [backCaption, setBackCaption] = useState();\n  const [validated, setValidated] = useState(false);\n  const [coverLocation, setCoverLocation] = useState(\"frontCover\");\n  const [file, setFile] = useState(); //const {ID,images} = props\n\n  useEffect(() => {\n    document.title = `Johan De Meij | Edit Post`; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleImageSubmit = e => {// console.log(props)\n  };\n\n  const updateCaption = () => {\n    let caption = {\n      docId: props.docId,\n      albumID: props.ID,\n      caption: props.type === \"front\" ? frontCaption : backCaption,\n      cover: props.type === \"front\" ? \"frontCover\" : \"backCover\"\n    };\n    mainProps.actions.mainAction(ACTIONS.UPDATE_CAPTION, caption);\n  };\n\n  const uploadImage = () => {\n    let image = {\n      docId: props.docId,\n      image: file,\n      path: selectedFile,\n      albumID: props.ID,\n      caption: props.type === \"front\" ? frontCaption : backCaption,\n      cover: props.type === \"front\" ? \"frontCover\" : \"backCover\"\n    };\n    mainProps.actions.mainAction(ACTIONS.UPLOAD_PRESENTATION_IMAGE, image);\n  };\n\n  const insertImage = () => {\n    let image = {\n      docId: props.docId,\n      image: file,\n      path: selectedFile,\n      albumID: props.ID,\n      caption: props.type === \"front\" ? frontCaption : backCaption,\n      cover: props.type === \"front\" ? \"frontCover\" : \"backCover\"\n    };\n    mainProps.actions.mainAction(ACTIONS.UPLOAD_PRESENTATION_IMAGE, image);\n  };\n\n  const deletePresentationImage = () => {\n    let image = {\n      imageType: props.type === \"front\" ? \"frontCover\" : \"backCover\",\n      docId: props.docId,\n      name: props.image,\n      ID: props.ID\n    };\n    mainProps.actions.mainAction(ACTIONS.DELETE_PRESENTATION_IMAGE, image);\n  };\n\n  const onChangeHandler = e => {\n    setSelectedFile(window.URL.createObjectURL(e.target.files[0]));\n    setFile(e.target.files[0]);\n    setUploadStatus(true);\n  };\n\n  const renderUploadButtons = _id => {\n    if (selectedFile && uploadStatus) return /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: () => uploadImage(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 16\n      }\n    }, \"upload\");\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: e => selecteImageToUpload(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"Change\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      onClick: () => {\n        if (window.confirm(\"Delete this item?\")) deletePresentationImage(_id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"Delete\"));\n  };\n\n  const renderInsertButtons = () => {\n    if (selectedFile && uploadStatus) {\n      return /*#__PURE__*/React.createElement(Button, {\n        variant: \"warning\",\n        onClick: () => insertImage(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 16\n        }\n      }, \"upload\");\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        style: {\n          marginRight: \"15px\"\n        },\n        onClick: e => selecteImageToUpload(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 12\n        }\n      }, \"Change\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"danger\",\n        onClick: e => {\n          if (window.confirm(\"Delete this item?\")) deletePresentationImage(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 12\n        }\n      }, \"Delete\"));\n    }\n  };\n\n  const selecteImageToUpload = e => {\n    props.type === \"front\" ? document.querySelector('input#post-image-front').click() : document.querySelector('input#post-image-back').click();\n  };\n\n  let postImage = Object.values(props.postImage ? props.postImage : []).map(image => {\n    return image;\n  });\n\n  const renderImage = () => {\n    if (props.image) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: !selectedFile ? \"https://firebasestorage.googleapis.com/v0/b/johandemeij-513b2.appspot.com/o/posts%2F\" + props.image + '?alt=media' : selectedFile,\n        onClick: e => selecteImageToUpload(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: !selectedFile ? \"/images/missing.png\" : selectedFile,\n        onClick: e => selecteImageToUpload(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    className: \"dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SideNav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: \"10\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    id: \"images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleImageSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 6\n    },\n    className: \"post-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, renderImage(), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"15px\",\n      textAlign: \"center\",\n      font: \"400 8px/10px 'Work Sans', sans-serif\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, !uploadStatus ? props.imageName : \"\")), /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 3\n    },\n    className: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: props.type === \"front\" ? \"frontCaption\" : \"backCaption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, props.type === \"front\" ? \"Front Cover \" : \"Back Cover \", \"Caption\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"\",\n    defaultValue: props.caption,\n    onChange: e => props.type === \"front\" ? setFrontCaption(e.target.value) : setBackCaption(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    lg: {\n      span: 3\n    },\n    className: \"action-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, props.imageName ? renderUploadButtons(props._id) : renderInsertButtons(), props.type === \"front\" ? /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"post-image-front\",\n    onChange: e => onChangeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 1\n    }\n  }) : /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"post-image-back\",\n    onChange: e => onChangeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 1\n    }\n  })))))))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    postImage: state.singlePostReducer\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      mainAction\n    }, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GalleryImage);","map":{"version":3,"sources":["/Users/carlkalonzo/Documents/DEV/johandemeij/johan-app/src/components/dashboard/NewGalleryImage.jsx"],"names":["React","useEffect","useState","connect","bindActionCreators","mainAction","Form","Row","Col","Button","Container","ACTIONS","SideNav","GalleryImage","props","mainProps","selectedFile","setSelectedFile","uploadStatus","setUploadStatus","frontCaption","setFrontCaption","backCaption","setBackCaption","validated","setValidated","coverLocation","setCoverLocation","file","setFile","document","title","handleImageSubmit","e","updateCaption","caption","docId","albumID","ID","type","cover","actions","UPDATE_CAPTION","uploadImage","image","path","UPLOAD_PRESENTATION_IMAGE","insertImage","deletePresentationImage","imageType","name","DELETE_PRESENTATION_IMAGE","onChangeHandler","window","URL","createObjectURL","target","files","renderUploadButtons","_id","selecteImageToUpload","confirm","renderInsertButtons","marginRight","querySelector","click","postImage","Object","values","map","renderImage","span","marginTop","textAlign","font","imageName","value","mapStateToProps","state","singlePostReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { mainAction } from \"redux/actions/index.actions\"\nimport { Form, Row, Col, Button, Container} from \"react-bootstrap\";\nimport { ACTIONS } from \"redux/actions/types\";\nimport SideNav from \"components/dashboard/SideNav\";\nconst GalleryImage = (props) => {\n  let mainProps = props\n  \n    const [selectedFile,setSelectedFile] = useState()\n    const [uploadStatus,setUploadStatus] = useState(false)\n    const [frontCaption,setFrontCaption] = useState()\n    const [backCaption,setBackCaption] = useState()\n    const [validated, setValidated] = useState(false);\n    const [coverLocation,setCoverLocation]= useState(\"frontCover\")\n    const [file,setFile] = useState()\n   //const {ID,images} = props\n    useEffect(() => {\n        document.title = `Johan De Meij | Edit Post`;\n       \n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, []);\n    const handleImageSubmit = (e) => {\n     // console.log(props)\n    }\n    const updateCaption = () =>{\n      let caption = {\n        docId:props.docId,\n        albumID:props.ID,\n        caption:props.type === \"front\" ? frontCaption:backCaption,\n        cover:props.type === \"front\" ? \"frontCover\":\"backCover\"\n      }\n       mainProps.actions.mainAction(ACTIONS.UPDATE_CAPTION,caption)\n    }\n    const uploadImage = () => {\n    \n      let image = {\n        docId:props.docId,\n        image:file,\n        path:selectedFile,\n        albumID:props.ID,\n        caption:props.type === \"front\" ? frontCaption:backCaption,\n        cover:props.type === \"front\" ? \"frontCover\":\"backCover\"\n      }\n       mainProps.actions.mainAction(ACTIONS.UPLOAD_PRESENTATION_IMAGE,image)\n      }\n      \n    const insertImage = () => {\n    \n      let image = {\n        docId:props.docId,\n        image:file,\n        path:selectedFile,\n        albumID:props.ID,\n        caption:props.type === \"front\" ? frontCaption:backCaption,\n        cover:props.type === \"front\" ? \"frontCover\":\"backCover\"\n      }\n       mainProps.actions.mainAction(ACTIONS.UPLOAD_PRESENTATION_IMAGE,image)\n      }\n    const deletePresentationImage = () => {\n        let image = {\n          imageType:props.type === \"front\" ? \"frontCover\":\"backCover\",\n          docId:props.docId,\n          name:props.image,\n          ID:props.ID,\n        }\n\n       mainProps.actions.mainAction(ACTIONS.DELETE_PRESENTATION_IMAGE,image)\n    } \n      const onChangeHandler = (e) => {\n        setSelectedFile(window.URL.createObjectURL(e.target.files[0]))\n        setFile(e.target.files[0])\n        setUploadStatus(true)\n      } \n      const renderUploadButtons = (_id) => {\n        if(selectedFile && uploadStatus)\n        return <Button variant=\"dark\" onClick={()=>uploadImage()}>upload</Button>\n        return (<>\n        <Button variant=\"primary\" onClick={(e)=>selecteImageToUpload(e)} >Change</Button>\n        <Button variant=\"danger\" onClick={()=>{if(window.confirm(\"Delete this item?\"))deletePresentationImage(_id)}} >Delete</Button>\n        </>)\n      }\n      const renderInsertButtons = () => {\n        if(selectedFile && uploadStatus){\n        return <Button variant=\"warning\" onClick={()=>insertImage()}>upload</Button>\n        } else {\n           return (<>\n           <Button variant=\"primary\" style={{marginRight:\"15px\"}}onClick={(e)=>selecteImageToUpload(e)} >Change</Button>\n           <Button variant=\"danger\" onClick={(e)=>{if(window.confirm(\"Delete this item?\"))deletePresentationImage(e)}} >Delete</Button>\n           </>)\n        }\n       \n      }\n      const selecteImageToUpload = (e) => {\n        props.type === \"front\" ?\n        document.querySelector('input#post-image-front').click():\n        document.querySelector('input#post-image-back').click()\n      }\n      let postImage = Object.values(props.postImage?props.postImage:[]).map(image => {\n        return image\n      })\n      const renderImage = () => {\n       if(props.image){\n        return (<img src={!selectedFile ? \"https://firebasestorage.googleapis.com/v0/b/johandemeij-513b2.appspot.com/o/posts%2F\"+props.image+'?alt=media':selectedFile} onClick={(e)=>selecteImageToUpload(e)} />)\n       } else {\n        return (<img src={!selectedFile ? \"/images/missing.png\":selectedFile} onClick={(e)=>selecteImageToUpload(e)} />)\n       }\n\n      }\n\n    return(<>\n        <Container className=\"dashboard\">\n        <Row>\n          <Col lg={{ span: 2 }}><SideNav /></Col>\n          <Col lg={{ span: \"10\" }}>\n          <section id=\"images\">\n          <Form noValidate validated={validated} onSubmit={handleImageSubmit}>\n            <Row>\n            <Col lg={{span:6}} className=\"post-image\">\n             {renderImage()}\n    <div style={{marginTop:\"15px\",textAlign:\"center\",font: \"400 8px/10px 'Work Sans', sans-serif\"}}>{!uploadStatus ? props.imageName:\"\"}</div>\n            </Col>\n             <Col lg={{span:3}} className=\"caption\">\n             <div><Form.Row>\n              <Form.Group controlId={props.type === \"front\" ? \"frontCaption\":\"backCaption\"}>\n              <Form.Label>{props.type === \"front\" ? \"Front Cover \":\"Back Cover \"}Caption</Form.Label>\n              <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"\"\n                      defaultValue={props.caption}\n                      onChange={e =>props.type === \"front\" ? setFrontCaption(e.target.value):setBackCaption(e.target.value)}\n                    />\n              </Form.Group>\n            </Form.Row></div>\n               </Col>\n    <Col lg={{span:3}}  className=\"action-button\">{props.imageName ? renderUploadButtons(props._id):renderInsertButtons()}{\nprops.type === \"front\" ?\n<input type=\"file\" id={\"post-image-front\"} onChange={(e)=>onChangeHandler(e)}/> :\n<input type=\"file\" id={\"post-image-back\"} onChange={(e)=>onChangeHandler(e)}/>\n    }</Col>\n               </Row>\n            </Form>\n          </section>\n          </Col>\n          </Row>\n          </Container>\n    </>)\n}\nfunction mapStateToProps(state) {\n    return {\n      postImage:state.singlePostReducer\n    };\n  }\n  \n  function mapDispatchToProps(dispatch) {\n    return {\n      actions: bindActionCreators({mainAction}, dispatch)\n    };\n  }\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(GalleryImage);"]},"metadata":{},"sourceType":"module"}